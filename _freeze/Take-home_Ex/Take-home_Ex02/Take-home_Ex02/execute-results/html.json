{
  "hash": "8321dc909a60d625d08d1d623aaa1dc6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Assignment 2\"\nauthor: \"Quynh Trang Do\"\ndate: \"May 28, 2025\"\ndate-modified: \"last-modified\"\nformat:\n  html:\n    theme: cosmo\n    toc: true\n    code-fold: true\n    code-summary: \"Code\"\neditor: visual\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n# 1. Objective\n\nIn this exercise, I will tackle Question 2 from [Mini-Challenge 3](https://vast-challenge.github.io/2025/MC3.html) of the [VAST Challenge 2025](https://vast-challenge.github.io/2025/index.html).\n\n::: {style=\"background-color: #e3fcec; padding: 2em; border-radius: 12px\"}\n**Question 2**: Clepper has noticed that people often communicate with (or about) the same people or vessels, and that grouping them together may help with the investigation. Use visual analytics to help Clepper understand and explore the interactions and relationships between vessels and people in the knowledge graph. Are there groups that are more closely associated? If so, what are the topic areas that are predominant for each group?\n:::\n\n# 2. Data Overview\n\nThe dataset, MC3_graph.json, is a directed knowledge graph constructed from transcripts of boat radio communications. It aims to capture interactions between people, their roles, and the events and locations they discuss, ultimately supporting the prediction of when and where future events may occur.\n\nThe graph contains 1,159 nodes and 3,226 edges, and is stored in JSON format. Full description of node attributes and edge attributes is shown below.\n\n![](images/node_attributes.png)\n\n![](images/edges_attributes.png)\n\n# 3. Set up\n\n## 3.1. Load necessary packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, jsonlite, dplyr, igraph,\n               tidygraph, ggraph, scales, visNetwork,\n               SmartEDA, widyr, ggforce, tidytext)\n```\n:::\n\n\n## 3.2. Import data\n\n### Import data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMC3 <- fromJSON(\"data/MC3_graph.json\")\nMC3_schema <- fromJSON(\"data/MC3_schema.json\")\n```\n:::\n\n\n### Quick check on the imported data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(MC3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi FALSE\n $ graph     :List of 4\n  ..$ mode        : chr \"static\"\n  ..$ edge_default: Named list()\n  ..$ node_default: Named list()\n  ..$ name        : chr \"VAST_MC3_Knowledge_Graph\"\n $ nodes     :'data.frame':\t1159 obs. of  31 variables:\n  ..$ type             : chr [1:1159] \"Entity\" \"Entity\" \"Entity\" \"Entity\" ...\n  ..$ label            : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ name             : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ sub_type         : chr [1:1159] \"Person\" \"Person\" \"Person\" \"Person\" ...\n  ..$ id               : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ timestamp        : chr [1:1159] NA NA NA NA ...\n  ..$ monitoring_type  : chr [1:1159] NA NA NA NA ...\n  ..$ findings         : chr [1:1159] NA NA NA NA ...\n  ..$ content          : chr [1:1159] NA NA NA NA ...\n  ..$ assessment_type  : chr [1:1159] NA NA NA NA ...\n  ..$ results          : chr [1:1159] NA NA NA NA ...\n  ..$ movement_type    : chr [1:1159] NA NA NA NA ...\n  ..$ destination      : chr [1:1159] NA NA NA NA ...\n  ..$ enforcement_type : chr [1:1159] NA NA NA NA ...\n  ..$ outcome          : chr [1:1159] NA NA NA NA ...\n  ..$ activity_type    : chr [1:1159] NA NA NA NA ...\n  ..$ participants     : int [1:1159] NA NA NA NA NA NA NA NA NA NA ...\n  ..$ thing_collected  :'data.frame':\t1159 obs. of  2 variables:\n  .. ..$ type: chr [1:1159] NA NA NA NA ...\n  .. ..$ name: chr [1:1159] NA NA NA NA ...\n  ..$ reference        : chr [1:1159] NA NA NA NA ...\n  ..$ date             : chr [1:1159] NA NA NA NA ...\n  ..$ time             : chr [1:1159] NA NA NA NA ...\n  ..$ friendship_type  : chr [1:1159] NA NA NA NA ...\n  ..$ permission_type  : chr [1:1159] NA NA NA NA ...\n  ..$ start_date       : chr [1:1159] NA NA NA NA ...\n  ..$ end_date         : chr [1:1159] NA NA NA NA ...\n  ..$ report_type      : chr [1:1159] NA NA NA NA ...\n  ..$ submission_date  : chr [1:1159] NA NA NA NA ...\n  ..$ jurisdiction_type: chr [1:1159] NA NA NA NA ...\n  ..$ authority_level  : chr [1:1159] NA NA NA NA ...\n  ..$ coordination_type: chr [1:1159] NA NA NA NA ...\n  ..$ operational_role : chr [1:1159] NA NA NA NA ...\n $ edges     :'data.frame':\t3226 obs. of  5 variables:\n  ..$ id         : chr [1:3226] \"2\" \"3\" \"5\" \"3013\" ...\n  ..$ is_inferred: logi [1:3226] TRUE FALSE TRUE TRUE TRUE TRUE ...\n  ..$ source     : chr [1:3226] \"Sam\" \"Sam\" \"Sam\" \"Sam\" ...\n  ..$ target     : chr [1:3226] \"Relationship_Suspicious_217\" \"Event_Communication_370\" \"Event_Assessment_600\" \"Relationship_Colleagues_430\" ...\n  ..$ type       : chr [1:3226] NA \"sent\" NA NA ...\n```\n\n\n:::\n:::\n\n\n### Extract the node and edge tables\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_nodes <- as_tibble(MC3$nodes)\nmc3_edges <- as_tibble(MC3$edges)\n```\n:::\n\n\n# 4. Data Cleaning and Wrangling\n\n## 4.1. For nodes\n\nThe code chunk below is used to convert values in id field into character data type, exclude records with ID value are NA, exclude records with similar ID values, exclude thing_collected field, and save the cleaned tibble dataframe into a new tibble datatable called mc3_nodes_cleaned.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_nodes_cleaned <- mc3_nodes %>%\n  mutate(id = as.character(id)) %>%\n  filter(!is.na(id)) %>%\n  distinct(id, .keep_all = TRUE) %>%\n  select(-thing_collected)\n```\n:::\n\n\n## 4.2. For edges\n\nThe code chunk below is used to rename source and target fields to from_id and to_id respectively, convert values in from_id and to_id fields to character data type, exclude values in from_id and to_id which not found in the id field of mc3_nodes_cleaned, exclude records whereby from_id and/or to_id values are missing, and save the cleaned tibble dataframe and called it mc3_edges_cleaned.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_edges_cleaned <- mc3_edges %>%\n  rename(from_id = source, \n         to_id = target) %>%\n  mutate(across(c(from_id, to_id), \n                as.character)) %>%\n  filter(from_id %in% mc3_nodes_cleaned$id, \n         to_id %in% mc3_nodes_cleaned$id) %>%\n  filter(!is.na(from_id), !is.na(to_id))\n```\n:::\n\n\nNext, create mapping of character id in mc3_nodes_cleaned to row index.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnode_index_lookup <- mc3_nodes_cleaned %>%\n  mutate(.row_id = row_number()) %>%\n  select(id, .row_id)\n```\n:::\n\n\nNext, join and convert from_id and to_id to integer indices. At the same time, drop rows with unmatched nodes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_edges_indexed <- mc3_edges_cleaned %>%\n  left_join(node_index_lookup, \n            by = c(\"from_id\" = \"id\")) %>%\n  rename(from = .row_id) %>%\n  left_join(node_index_lookup, \n            by = c(\"to_id\" = \"id\")) %>%\n  rename(to = .row_id) %>%\n  select(from, to, is_inferred, type) %>%\n  filter(!is.na(from) & !is.na(to))  \n```\n:::\n\n\nNext, subset nodes to only those referenced by edges.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nused_node_indices <- sort(\n  unique(c(mc3_edges_indexed$from, \n           mc3_edges_indexed$to)))\n\nmc3_nodes_final <- mc3_nodes_cleaned %>%\n  slice(used_node_indices) %>%\n  mutate(new_index = row_number())\n```\n:::\n\n\nThen, rebuild lookup from old index to new index.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nold_to_new_index <- tibble(\n  old_index = used_node_indices,\n  new_index = seq_along(\n    used_node_indices))\n```\n:::\n\n\nFinally, update edge indices to match new node table.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_edges_final <- mc3_edges_indexed %>%\n  left_join(old_to_new_index, \n            by = c(\"from\" = \"old_index\")) %>%\n  rename(from_new = new_index) %>%\n  left_join(old_to_new_index, \n            by = c(\"to\" = \"old_index\")) %>%\n  rename(to_new = new_index) %>%\n  select(from = from_new, to = to_new, \n         is_inferred, type)\n```\n:::\n\n\n# 5. Exploratory Data Analysis\n\n## 5.1. Node type distribution\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_nodes_final %>%\n  count(type, sort = TRUE) %>%\n  ggplot(aes(x = reorder(type, n), y = n)) +\n  geom_col(fill = \"forestgreen\") +\n  geom_text(aes(label = n), hjust = -0.2) +\n  coord_flip() +\n  labs(title = \"Node Type Distribution\",\n       x = \"Node Type\", y = \"Count\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-12-1.png){width=768}\n:::\n:::\n\n\n## 5.2. Sub-type Distribution for Entities\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_nodes_final %>%\n  filter(type == \"Entity\") %>%\n  count(sub_type, sort = TRUE) %>%\n  ggplot(aes(x = reorder(sub_type, n), y = n)) +\n  geom_col(fill = \"skyblue\") +\n  geom_text(aes(label = n), hjust = -0.2) +\n  coord_flip() +\n  labs(title = \"Entity Subtype Distribution\",\n       x = \"Entity Subtype\", y = \"Count\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n## 5.3. Sub-type Distribution for Event\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_nodes_final %>%\n  filter(type == \"Event\") %>%\n  count(sub_type, sort = TRUE) %>%\n  ggplot(aes(x = reorder(sub_type, n), y = n)) +\n  geom_col(fill = \"grey\") +\n  geom_text(aes(label = n), hjust = -0.2) +\n  coord_flip() +\n  labs(title = \"Event Subtype Distribution\",\n       x = \"Event Subtype\", y = \"Count\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-14-1.png){width=768}\n:::\n:::\n\n\n# 6. Visual Analytics\n\n## 6.1. Relationship Analysis\n\nThis section focuses on exploring the relationships among involved individuals, organizations, and vessels.\n\n### 6.1.1. Person-to-Person Relationships\n\nTo explore social and operational connections among individuals in the Oceanus community, a network visualization is constructed to represent person-to-person relationships mediated by relationship-type nodes. The process involves the following steps:\n\n**Identifying Relationship Nodes**\n\nNodes labeled as \"Relationship\" are extracted from the cleaned graph data and split into two categories:\n\n-   Undirected relationships: Types like \"Friends\" and \"Colleagues\" which imply mutual connection.\n\n-   Directed relationships: All other types (e.g., \"Manager\", \"Employee\", \"Superior\"), which imply directional links.\n\n**Constructing Undirected and Directed Person–Person Edges**\n\n-   For undirected relationships, a table is built to capture all people connected to the same relationship node. These are paired using self-joins to create mutual (bidirectional) person-to-person links.\n\n-   For directed relationships, the graph schema supports a two-step link: a person connects to a relationship node, which then connects to another person. These are joined to create directed edges between people, preserving the direction implied by the intermediate relationship node.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnode_lookup <- mc3_nodes_final %>% select(new_index, sub_type, name)\nedges_labeled <- mc3_edges_final %>%\n  left_join(node_lookup, by = c(\"from\" = \"new_index\")) %>%\n  rename(from_type = sub_type, from_name = name) %>%\n  left_join(node_lookup, by = c(\"to\" = \"new_index\")) %>%\n  rename(to_type = sub_type, to_name = name)\n\n# Create non-directional relationships\nnondir_rel_ids <- mc3_nodes_final %>%\n  filter(type == \"Relationship\", sub_type %in% c(\"Friends\", \"Colleagues\")) %>%\n  pull(new_index)\n\n# Get all Entity → Relationship edges (where Entity is a Person)\nnondir_links <- edges_labeled %>%\n  filter(from_type == \"Person\", to %in% nondir_rel_ids) %>%\n  transmute(person = from, rel = to) %>%\n  distinct()\n\n# Pair up people connected to the same relationship\npp_rel_pairs_nondir <- nondir_links %>%\n  inner_join(nondir_links, by = \"rel\") %>%\n  filter(person.x != person.y) %>%\n  distinct(rel, from = person.x, to = person.y)\n\n# Create directional relationships\ndir_rel_ids <- mc3_nodes_final %>%\n  filter(type == \"Relationship\", !sub_type %in% c(\"Friends\", \"Colleagues\")) %>%\n  pull(new_index)\n\n# From person to relationship\npr_links <- edges_labeled %>%\n  filter(from_type == \"Person\", to %in% dir_rel_ids) %>%\n  transmute(person = from, rel = to)\n\n# From relationship to another person\nrp_links <- edges_labeled %>%\n  filter(from %in% dir_rel_ids, to_type == \"Person\") %>%\n  transmute(rel = from, person = to)\n\npp_rel_pairs_dir <- inner_join(pr_links, rp_links, by = \"rel\") %>%\n  filter(person.x != person.y) %>%\n  distinct(rel, from = person.x, to = person.y)\n```\n:::\n\n\n**Combining and Preparing Network Data**\n\n-   Both undirected and directed edges are combined into a unified edge list, annotated with a direction label.\n\n-   The relevant subset of nodes (people and relationships involved in these edges) is extracted and labeled with types and visual styles:\n\n    -   Persons were represented as orange dots.\n\n    -   Relationship nodes were represented as sky-blue boxes.\n\n**Network Visualization**\n\n-   The graph's rendered using the visNetwork package in R. Arrows indicate direction of relationships (where applicable).\n\n-   Node interaction features are added:\n\n    -   Hovering highlights connected nodes.\n\n    -   A drop-down menu allows selection of specific person nodes.\n\n    -   A legend was added to clarify node types and styling.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrel_nodes <- mc3_nodes_final %>%\n  filter(type == \"Relationship\") %>%      \n  select(new_index, rel_subtype = sub_type)\n\nrel_ids <- rel_nodes$new_index\n\n# Combine both types of relationship\npp_rel_pairs_nondir <- pp_rel_pairs_nondir %>%\n  mutate(direction = \"undirected\")\n\npp_rel_pairs_dir <- pp_rel_pairs_dir %>%\n  mutate(direction = \"directed\")\n\npp_rel_pairs <- bind_rows(pp_rel_pairs_nondir, pp_rel_pairs_dir)\n\n# Prepare network data\nused_ids <- unique(c(pp_rel_pairs$from, pp_rel_pairs$to, pp_rel_pairs$rel))\n\nnodes_tbl <- mc3_nodes_final %>%\n  filter(new_index %in% used_ids) %>%\n  mutate(type = if_else(new_index %in% rel_ids, \"Relationship\", \"Person\")) %>%\n  select(node_id = new_index, label, type) %>%\n  mutate(row_id = row_number())\n\nid_map <- nodes_tbl %>% select(node_id, row_id)\n\nedges_vis <- bind_rows(\n  # Person → Relationship\n  pp_rel_pairs %>%\n    left_join(id_map, by = c(\"from\" = \"node_id\")) %>% rename(from_id = row_id) %>%\n    left_join(id_map, by = c(\"rel\"  = \"node_id\")) %>% rename(to_id   = row_id) %>%\n    transmute(from = from_id, to = to_id),\n\n  # Relationship → Person\n  pp_rel_pairs %>%\n    left_join(id_map, by = c(\"rel\"  = \"node_id\")) %>% rename(from_id = row_id) %>%\n    left_join(id_map, by = c(\"to\"   = \"node_id\")) %>% rename(to_id   = row_id) %>%\n    transmute(from = from_id, to = to_id)\n)\n\n# Visualize\nvis_nodes <- nodes_tbl %>%\n  transmute(\n    id    = row_id,\n    label = label,\n    group = type,\n    shape = if_else(type == \"Person\", \"dot\", \"box\"),\n    color = if_else(type == \"Person\", \"orange\", \"skyblue\")\n  )\n\nvis_edges <- edges_vis %>%\n  distinct() %>%\n  mutate(arrows = \"to\", color = \"gray\")\n\nvisNetwork(vis_nodes, vis_edges) %>%\n  visNodes(font = list(size = 18)) %>%\n  visEdges(smooth = FALSE) %>%\n  visOptions(\n    highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n    \n    # restrict ID selection to Person nodes only\n    nodesIdSelection = list(\n      enabled = TRUE,\n      values = vis_nodes %>% filter(group == \"Person\") %>% pull(id)\n    )\n  ) %>%\n  visLayout(randomSeed = 1234) %>%\n  visLegend(\n    addNodes = data.frame(\n      label = c(\"Person\", \"Relationship\"),\n      shape = c(\"dot\", \"box\"),\n      color = c(\"orange\", \"skyblue\")\n    ),\n    useGroups = FALSE,\n    position = \"right\"\n  )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"visNetwork html-widget html-fill-item\" id=\"htmlwidget-3d5924108ad934f6b279\" style=\"width:100%;height:541px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-3d5924108ad934f6b279\">{\"x\":{\"nodes\":{\"id\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],\"label\":[\"Sam\",\"Kelly\",\"Nadia Conti\",\"Elise\",\"Liam Thorne\",\"Davis\",\"Rodriguez\",\"Sailor Shift\",\"Clepper Jensen\",\"Miranda Jordan\",\"The Intern\",\"The Lookout\",\"The Accountant\",\"Mrs. Money\",\"The Middleman\",\"Boss\",\"Small Fry\",\"Friends\",\"Friends\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Reports\",\"Reports\",\"Reports\",\"Coordinates\",\"Coordinates\",\"Suspicious\",\"Suspicious\",\"Suspicious\"],\"group\":[\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\"],\"shape\":[\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\"],\"color\":[\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\"]},\"edges\":{\"from\":[1,1,1,1,2,2,3,3,3,3,3,4,4,5,6,6,6,6,6,7,7,8,9,10,11,11,11,12,12,13,13,13,14,14,14,15,15,15,16,16,16,16,16,16,17,17,4,9,10,10,11,11,12,15,30,19,26,31,19,26,28,32,31,35,29,30,28,32,40,35,22,34,39,40,24,22,27,27,23,36,18,18,36,38,29,37,20,25,23,21,38,25,34,24,37,20,21,33,39,33,45,47,42,46,41,44,48,43],\"to\":[30,19,26,31,19,26,28,32,31,35,29,30,28,32,40,35,22,34,39,40,24,22,27,27,23,36,18,18,36,38,29,37,20,25,23,21,38,25,34,24,37,20,21,33,39,33,45,47,42,46,41,44,48,43,4,2,2,3,1,1,4,5,1,6,13,1,3,3,7,3,8,16,17,6,16,6,10,9,14,12,12,11,11,15,3,16,16,15,11,16,13,14,6,7,13,14,15,17,6,16,3,7,7,7,14,14,9,16],\"arrows\":[\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\"],\"color\":[\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\",\"font\":{\"size\":18}},\"manipulation\":{\"enabled\":false},\"edges\":{\"smooth\":false},\"interaction\":{\"hover\":true,\"zoomSpeed\":1},\"layout\":{\"randomSeed\":1234}},\"groups\":[\"Person\",\"Relationship\"],\"width\":null,\"height\":null,\"idselection\":{\"enabled\":true,\"style\":\"width: 150px; height: 26px\",\"useLabels\":true,\"main\":\"Select by id\",\"values\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]},\"byselection\":{\"enabled\":false,\"style\":\"width: 150px; height: 26px\",\"multiple\":false,\"hideColor\":\"rgba(200,200,200,0.5)\",\"highlight\":false},\"main\":null,\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\",\"highlight\":{\"enabled\":true,\"hoverNearest\":true,\"degree\":2,\"algorithm\":\"all\",\"hideColor\":\"rgba(200,200,200,0.5)\",\"labelOnly\":true},\"collapse\":{\"enabled\":false,\"fit\":false,\"resetHighlight\":true,\"clusterOptions\":null,\"keepCoord\":true,\"labelSuffix\":\"(cluster)\"},\"legend\":{\"width\":0.2,\"useGroups\":false,\"position\":\"right\",\"ncol\":1,\"stepX\":100,\"stepY\":100,\"zoom\":true,\"nodes\":{\"label\":[\"Person\",\"Relationship\"],\"shape\":[\"dot\",\"box\"],\"color\":[\"orange\",\"skyblue\"]},\"nodesToDataframe\":true}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\nTo identify key individuals within the communication network, I compute four standard network centrality metrics for all Person nodes:\n\n-   **Degree centrality**: Measures the number of direct connections a node has, indicating activity level.\n\n-   **Betweenness centrality**: Quantifies how often a node lies on the shortest paths between others, identifying information brokers or gatekeepers.\n\n-   **Closeness centrality**: Reflects how quickly a node can reach others in the network, showing communication efficiency.\n\n-   **Eigenvector centrality**: Captures influence based on being connected to other highly connected nodes.\n\nThe analysis is performed using the igraph package in R, with the full graph including both Person and Relationship nodes. Centrality metrics are calculated on the full graph structure, but filtered to show results only for Person nodes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Step 1: Create igraph with all nodes and edges\nigraph_pp <- graph_from_data_frame(\n  d = edges_vis,\n  vertices = nodes_tbl %>% select(name = row_id, label, type),\n  directed = TRUE\n)\n\n# Step 2: Compute centrality metrics\nV(igraph_pp)$degree      <- degree(igraph_pp, mode = \"all\")\nV(igraph_pp)$betweenness <- betweenness(igraph_pp, directed = TRUE)\nV(igraph_pp)$closeness   <- closeness(igraph_pp, normalized = TRUE)\nV(igraph_pp)$eigenvector <- eigen_centrality(igraph_pp, directed = TRUE)$vector\n\n# Step 3: Create centrality table and filter for only Person nodes\ncentrality_tbl <- tibble(\n  id        = as.integer(V(igraph_pp)$name),  # row_id\n  name       = V(igraph_pp)$label,\n  type        = V(igraph_pp)$type,\n  degree      = V(igraph_pp)$degree,\n  betweenness = V(igraph_pp)$betweenness,\n  closeness   = V(igraph_pp)$closeness,\n  eigenvector = V(igraph_pp)$eigenvector\n) %>%\n  filter(type == \"Person\") %>%\n  arrange(desc(degree))\n\nprint(centrality_tbl)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 17 × 7\n      id name           type   degree betweenness closeness eigenvector\n   <int> <chr>          <chr>   <dbl>       <dbl>     <dbl>       <dbl>\n 1    16 Boss           Person     13       938.      0.217    1       \n 2     3 Nadia Conti    Person     11       876.      0.181    0.378   \n 3     6 Davis          Person     10       692.      0.202    0.596   \n 4     1 Sam            Person      8       301.      0.143    0.125   \n 5    11 The Intern     Person      8       580.      0.166    0.0599  \n 6    14 Mrs. Money     Person      8       776.      0.195    0.279   \n 7     7 Rodriguez      Person      7       362.      0.175    0.254   \n 8    15 The Middleman  Person      7       271.      0.198    0.301   \n 9    13 The Accountant Person      6       418.      0.193    0.317   \n10     4 Elise          Person      5        98       0.141    0.0799  \n11    12 The Lookout    Person      5       312.      0.157    0.0190  \n12     2 Kelly          Person      4         1       0.113    0.0397  \n13     9 Clepper Jensen Person      4       310.      0.160    0.00265 \n14    10 Miranda Jordan Person      4       120       0.162    0.000363\n15    17 Small Fry      Person      4        34.7     0.175    0.253   \n16     5 Liam Thorne    Person      2         0       0.135    0.0518  \n17     8 Sailor Shift   Person      2         0       0.146    0.0816  \n```\n\n\n:::\n:::\n\n\n::: {style=\"background-color: #fffbe7; padding: 2em; border-radius: 12px\"}\n**Insights**: The centrality analysis and network visualization reveal that Boss is the most influential individual in the network, with the highest degree, betweenness, and eigenvector centrality, indicating strong connectivity and a central role in information flow. Nadia Conti and Davis also emerge as key connectors, acting as bridges between subgroups. Despite fewer direct links, The Intern and Mrs. Money exhibit high betweenness, suggesting they serve as strategic intermediaries.\n:::\n\n### 6.1.2. Person-Vessel Relationships\n\nTo explore how individuals are connected to vessels, a tripartite network is constructed. The process began by identifying all relationship nodes and linking them to person nodes (Person → Relationship) and vessel nodes (Relationship → Vessel) using the edge table. These two-step connections are joined to form person–relationship–vessel triplets, capturing associations between people and vessels.\n\nAll involved nodes are extracted and categorized as Person, Relationship, or Vessel, with each assigned a unique row ID. These are used to build a node table (vis_nodes) with customized shapes and colors, and an edge table (vis_edges) to represent directional links.\n\nThe resulting network is visualized using the visNetwork package in R, where:\n\n-   Persons appear as orange dots,\n\n-   Relationships as sky-blue boxes,\n\n-   Vessels as green triangles.\n\n-   Interactive features allow for node highlighting and filtering, enabling intuitive exploration of how individuals may influence or interact with vessels via intermediary relationship types.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Construct person–relationship–vessel triplet\npr_edges <- edges_labeled %>%\n  filter(from_type == \"Person\", to %in% rel_ids) %>%\n  transmute(person_id = from,          \n            relationship_id = to)\n\nvessel_ids <- mc3_nodes_final %>%\n  filter(sub_type == \"Vessel\") %>% pull(new_index)\n\nrv_edges <- edges_labeled %>%\n  filter(from %in% rel_ids, to %in% vessel_ids) %>%\n  transmute(relationship_id = from,\n            vessel_id       = to)\n\ntriplets <- inner_join(pr_edges, rv_edges, by = \"relationship_id\")\n\nall_ids <- unique(c(triplets$person_id,\n                    triplets$relationship_id,\n                    triplets$vessel_id))\n\n# Node table\nrel_tbl <- mc3_nodes_final %>%\n  filter(new_index %in% all_ids) %>%\n  mutate(type = case_when(\n    new_index %in% vessel_ids ~ \"Vessel\",\n    new_index %in% rel_ids    ~ \"Relationship\",\n    TRUE                      ~ \"Person\"\n  )) %>%\n  select(index = new_index, label, type) %>%\n  distinct() %>%\n  arrange(index) %>%\n  mutate(row_id = row_number()) \n\nid_map <- rel_tbl %>% select(index, row_id)\n\n# Edge table\nedges_tbl <- bind_rows(\n  triplets %>%\n    select(from = person_id, to = relationship_id),\n  triplets %>%\n    select(from = relationship_id, to = vessel_id)\n) %>%\n  left_join(id_map, by = c(\"from\" = \"index\")) %>%\n  rename(.from = row_id) %>%\n  left_join(id_map, by = c(\"to\" = \"index\")) %>%\n  rename(.to = row_id) %>%\n  filter(!is.na(.from) & !is.na(.to)) %>%\n  transmute(from = .from, to = .to)\n\n# Visualize\nvis_nodes <- rel_tbl %>%\n  transmute(\n    id    = row_id,\n    label = label,\n    group = type,\n    shape = case_when(\n      type == \"Person\"      ~ \"dot\",\n      type == \"Relationship\"~ \"box\",\n      type == \"Vessel\"      ~ \"triangle\"\n    ),\n    color = case_when(\n      type == \"Person\"      ~ \"orange\",\n      type == \"Relationship\"~ \"skyblue\",\n      type == \"Vessel\"      ~ \"forestgreen\"\n    )\n  )\n\nvis_edges <- edges_tbl %>%\n  transmute(\n    from = from,\n    to   = to,\n    arrows = \"to\",\n    color  = \"gray\"\n  )\n\nvisNetwork(vis_nodes, vis_edges) %>%\n  visNodes(font = list(size = 20)) %>%\n  visEdges(smooth = FALSE) %>%\n  visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE), nodesIdSelection = TRUE) %>%\n  visLayout(randomSeed = 123) %>%\n  visLegend(addNodes = data.frame(\n    label = c(\"Person\", \"Relationship\", \"Vessel\"),\n    shape = c(\"dot\", \"box\", \"triangle\"),\n    color = c(\"orange\", \"skyblue\", \"forestgreen\")\n  ), useGroups = FALSE)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"visNetwork html-widget html-fill-item\" id=\"htmlwidget-c737c19ba7c466ad4eac\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-c737c19ba7c466ad4eac\">{\"x\":{\"nodes\":{\"id\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],\"label\":[\"Nadia Conti\",\"Liam Thorne\",\"Samantha Blake\",\"Davis\",\"Rodriguez\",\"Clepper Jensen\",\"Mrs. Money\",\"The Middleman\",\"Boss\",\"Small Fry\",\"Neptune\",\"Marlin\",\"Mako\",\"EcoVigil\",\"Sentinel\",\"Defender\",\"Remora\",\"Knowles\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Suspicious\",\"Suspicious\",\"Suspicious\"],\"group\":[\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Vessel\",\"Vessel\",\"Vessel\",\"Vessel\",\"Vessel\",\"Vessel\",\"Vessel\",\"Vessel\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\",\"Relationship\"],\"shape\":[\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"triangle\",\"triangle\",\"triangle\",\"triangle\",\"triangle\",\"triangle\",\"triangle\",\"triangle\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\"],\"color\":[\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"forestgreen\",\"forestgreen\",\"forestgreen\",\"forestgreen\",\"forestgreen\",\"forestgreen\",\"forestgreen\",\"forestgreen\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\",\"skyblue\"]},\"edges\":{\"from\":[1,2,2,3,3,3,4,4,4,4,4,5,5,5,5,6,7,8,9,10,10,23,20,22,19,29,30,25,28,34,35,39,26,38,31,32,37,27,21,36,33,24],\"to\":[23,20,22,19,29,30,25,28,34,35,39,26,38,31,32,37,27,21,36,33,24,14,15,14,13,13,11,13,12,11,17,16,13,18,17,11,18,13,15,17,17,17],\"arrows\":[\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\"],\"color\":[\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\",\"font\":{\"size\":20}},\"manipulation\":{\"enabled\":false},\"edges\":{\"smooth\":false},\"interaction\":{\"hover\":true,\"zoomSpeed\":1},\"layout\":{\"randomSeed\":123}},\"groups\":[\"Person\",\"Vessel\",\"Relationship\"],\"width\":null,\"height\":null,\"idselection\":{\"enabled\":true,\"style\":\"width: 150px; height: 26px\",\"useLabels\":true,\"main\":\"Select by id\"},\"byselection\":{\"enabled\":false,\"style\":\"width: 150px; height: 26px\",\"multiple\":false,\"hideColor\":\"rgba(200,200,200,0.5)\",\"highlight\":false},\"main\":null,\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\",\"highlight\":{\"enabled\":true,\"hoverNearest\":true,\"degree\":2,\"algorithm\":\"all\",\"hideColor\":\"rgba(200,200,200,0.5)\",\"labelOnly\":true},\"collapse\":{\"enabled\":false,\"fit\":false,\"resetHighlight\":true,\"clusterOptions\":null,\"keepCoord\":true,\"labelSuffix\":\"(cluster)\"},\"legend\":{\"width\":0.2,\"useGroups\":false,\"position\":\"left\",\"ncol\":1,\"stepX\":100,\"stepY\":100,\"zoom\":true,\"nodes\":{\"label\":[\"Person\",\"Relationship\",\"Vessel\"],\"shape\":[\"dot\",\"box\",\"triangle\"],\"color\":[\"orange\",\"skyblue\",\"forestgreen\"]},\"nodesToDataframe\":true}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n::: {style=\"background-color: #fffbe7; padding: 2em; border-radius: 12px\"}\n**Insights**: The Person–Relationship–Vessel network visualization reveals a tightly interconnected operational structure centered around key individuals. Davis and Rodriguez emerge as central figures, each linked to multiple vessels through “Operates” and “Coordinates” relationships, suggesting they play pivotal roles in managing or overseeing maritime activities. Vessels such as Remora, Sentinel, Neptune, and Mako form the core of this network, with multiple people connected to each—indicative of shared usage and coordinated operations. While most links are operational, a few “Suspicious” relationships—such as those involving Defender and Knowles—highlight potential vessels of concern. Notably, individuals like Boss, Clepper Jensen, and Nadia Conti are connected to only one vessel or relationship, indicating they may be responsible for more high-level or strategic roles. Overall, the structure suggests a coordinated network with central command figures, key vessels, and isolated links that may warrant further investigation.\n:::\n\n## 6.2. Interaction Analysis\n\nThis analysis focuses solely on communication events between entities to identify patterns of frequent interaction.\n\n### 6.2.1. Person-Person Communication\n\nThe process begins by identifying all edges linking Persons and Communication events. From this, all possible pairs of people who appear in the same communication event are extracted. To avoid duplication and self-pairs, only distinct pairs with different individuals are retained.\n\nThe number of times each person-pair co-occurs in communication events is then counted, forming a weighted edge list (num_comm_events). To standardize the order of pairs, names are alphabetically sorted within each row.\n\nThese person pairs are used to build a graph where:\n\n-   Nodes represent individuals,\n\n-   Edges represent the frequency of shared communication events,\n\n-   Edge width is scaled by the number of co-occurrences.\n\nThe resulting network is visualized using ggraph, providing insight into the structure of interpersonal communication patterns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npp_comm <- edges_labeled %>%\n  filter((from_type == \"Person\" & to_type == \"Communication\") |\n         (from_type == \"Communication\" & to_type == \"Person\")) %>%\n  transmute(person = if_else(from_type == \"Person\", from_name, to_name),\n            comm_id = if_else(from_type == \"Communication\", from, to)) \n\nperson_pairs <- pp_comm %>%\n  inner_join(pp_comm, by = \"comm_id\") %>%\n  filter(person.x != person.y) %>%\n  count(person.x, person.y, name = \"num_comm_events\") %>%   # ← new column name\n  rowwise() %>%\n  mutate(p1 = min(person.x, person.y),\n         p2 = max(person.x, person.y)) %>%\n  ungroup() %>%\n  select(from = p1, to = p2, num_comm_events) %>%\n  distinct()\n\nperson_pairs %>%\n  arrange(desc(num_comm_events)) %>%\n  print(n = 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 22 × 3\n   from           to             num_comm_events\n   <chr>          <chr>                    <int>\n 1 Clepper Jensen Miranda Jordan              38\n 2 Mrs. Money     The Intern                  20\n 3 The Intern     The Lookout                 20\n 4 Boss           Mrs. Money                  10\n 5 Sam            The Lookout                  8\n 6 Boss           The Middleman                7\n 7 Mrs. Money     The Middleman                6\n 8 Davis          Nadia Conti                  5\n 9 Liam Thorne    Nadia Conti                  4\n10 The Accountant The Middleman                4\n# ℹ 12 more rows\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npp_nodes <- tibble(name = unique(c(person_pairs$from, person_pairs$to)))\n\nid_lkp <- pp_nodes %>% mutate(row_id = row_number())\n\npp_edges_final <- person_pairs %>%\n  left_join(id_lkp %>% rename(from_id = row_id), by = c(\"from\" = \"name\")) %>%\n  left_join(id_lkp %>% rename(to_id = row_id),   by = c(\"to\"   = \"name\")) %>%\n  select(from = from_id, to = to_id, num_comm_events)\n\nset.seed(42)\nggraph(tbl_graph(nodes = pp_nodes, edges = pp_edges_final, directed = FALSE),\n       layout = \"fr\") +\n  geom_edge_link(aes(width = num_comm_events), alpha = 0.5, color = \"darkgrey\") +\n  geom_node_point(color = \"orange\", size = 4) +\n  geom_node_text(aes(label = name), repel = TRUE, size = 3) +\n  scale_edge_width(range = c(0.3, 2.5)) +\n  theme_void() +\n  labs(title = \"Person–Person Interactions\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n::: {style=\"background-color: #fffbe7; padding: 2em; border-radius: 12px\"}\n**Insights**: The person-to-person communication network reveals several high-frequency interaction pairs, with Clepper Jensen and Miranda Jordan—both mentioned in the case as investigators—sharing the most communication events (38). A secondary cluster features Mrs. Money, The Intern, and The Lookout, who are tightly linked through repeated communications, potentially indicating a shared operational or covert role. Boss emerges as a central figure, engaging with both Mrs. Money and The Middleman, and likely playing a coordinating or supervisory role. Additional patterns show Nadia Conti frequently contacted by both Davis and Liam Thorne, while The Middleman serves as a common contact for multiple individuals.\n:::\n\n### 6.2.2. Person-Organization-Group Interactions\n\nThis analysis constructs a network to explore how people, organizations, and groups interact based on their co-occurrence in communication events.\n\nThe process begins by identifying all edges that connect an entity (either a Person, Organization, or Group) to a Communication event. Both directions are considered to capture all valid interactions.\n\nNext, for each communication event, all unique pairs of co-occurring entities are generated. The number of shared communication events between each pair is counted, forming a weighted edge list.\n\nEach unique entity is recorded as a node and labeled with its type (Person, Organization, or Group). A numeric ID is assigned to each node for graph construction. The entity pairs and node list are joined to create a graph-compatible edge table with numeric references.\n\nThe resulting network is visualized using ggraph, where:\n\n-   Edge width reflects the frequency of shared communications.\n\n-   Node color and shape represent entity type: orange circles for Persons, purple diamonds for Organizations, and brown squares for Groups.\n\n-   The Fruchterman–Reingold layout emphasizes structural proximity between frequently co-occurring entities.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Step 1: Get all Entity–Communication edges (Person, Organization, Group)\nentity_comm <- edges_labeled %>%\n  filter((from_type %in% c(\"Person\", \"Organization\", \"Group\") & to_type == \"Communication\") |\n         (from_type == \"Communication\" & to_type %in% c(\"Person\", \"Organization\", \"Group\"))) %>%\n  transmute(\n    entity     = if_else(from_type %in% c(\"Person\", \"Organization\", \"Group\"), from_name, to_name),\n    comm_id    = if_else(from_type == \"Communication\", from, to),\n    entity_type = if_else(from_type %in% c(\"Person\", \"Organization\", \"Group\"), from_type, to_type)\n  )\n\n# Step 2: Create all entity–entity pairs that co-occur in the same communication event\nentity_pairs <- entity_comm %>%\n  inner_join(entity_comm, by = \"comm_id\") %>%\n  filter(entity.x != entity.y) %>%\n  count(entity.x, entity.y, name = \"num_comm_events\") %>%\n  rowwise() %>%\n  mutate(p1 = min(entity.x, entity.y),\n         p2 = max(entity.x, entity.y)) %>%\n  ungroup() %>%\n  select(from = p1, to = p2, num_comm_events) %>%\n  distinct()\n\n# Step 3: Create node table with type info\nnode_types <- entity_comm %>%\n  select(name = entity, sub_type = entity_type) %>%\n  distinct()\n\nnetwork_nodes <- entity_comm %>%                 \n  distinct(name = entity, sub_type = entity_type) %>%\n  arrange(name) %>%                               \n  mutate(row_id = row_number())                   \n\nid_lkp <- network_nodes %>% select(name, row_id)\n\n# Step 4: Build edge table with numeric IDs\nnetwork_edges <- entity_pairs %>%\n  left_join(id_lkp %>% rename(from_id = row_id), by = c(\"from\" = \"name\")) %>%\n  left_join(id_lkp %>% rename(to_id = row_id),   by = c(\"to\"   = \"name\")) %>%\n  select(from = from_id, to = to_id, num_comm_events)\n\n# Step 5: Plot the network with ggraph\nset.seed(42)\nggraph(tbl_graph(nodes = network_nodes, edges = network_edges, directed = FALSE),\n       layout = \"fr\") +\n  geom_edge_link(aes(width = num_comm_events), alpha = 0.5, color = \"grey60\") +\n  geom_node_point(aes(color = sub_type, shape = sub_type), size = 4) +\n  geom_node_text(aes(label = name), repel = TRUE, size = 3) +\n  scale_edge_width(range = c(0.3, 3)) +\n  scale_color_manual(values = c(\n    Person = \"orange\",\n    Organization = \"pink\",\n    Group = \"brown\"\n  )) +\n  scale_shape_manual(values = c(\n    Person = 19,\n    Organization = 18,\n    Group = 15\n  )) +\n  theme_void() +\n  labs(title = \"Person-Organization-Group Interactions\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n::: {style=\"background-color: #fffbe7; padding: 2em; border-radius: 12px\"}\n**Insights**: The network reveals a densely connected core of individuals and organizations, suggesting coordinated activity across multiple entities. V-Miesel Shipping appears central, linked to individuals such as Boss, Mrs. Money, Rodriguez, and The Middleman, indicating a potential hub for operational or logistical coordination. Oceanus City Council and Green Guardians also serve as prominent intermediaries, connecting civic actors like Samantha Blake, Liam Thorne, and The Lookout. Nadia Conti stands out as a central bridge across these clusters, linking both activist-aligned and logistics-aligned individuals.\n\nA notable observation is the presence of only one Group node — “City Officials” — which is completely disconnected from the rest of the network. This suggests that, although the entity exists in the data, it did not participate in any communication event involving the individuals or organizations present in this chart.\n:::\n\n### 6.2.3. Person-Organzation-Vessel Interactions\n\nIn this stage, an interactive network visualization is constructed to explore communication-based relationships among people, vessels, and organizations. The process begins with extracting communication links between each entity type and communication events. From these, co-occurrence pairs are formed—entities that appeared together in the same communication event—counted, and converted into a weighted edge list. A node table is created with entity names and types. Using tidygraph, a network graph object is built, and centrality metrics (degree, betweenness, closeness, eigenvector) are computed to assess influence and positioning within the network. Finally, visNetwork is used to generate an interactive plot where node size reflects degree centrality, tooltip text displays all metrics, and nodes are colored and shaped based on their type (person, vessel, or organization). This allows for intuitive exploration of key actors and communication patterns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Build Communication tables\npc <- edges_labeled %>%\n  filter((from_type == \"Person\" & to_type == \"Communication\") |\n         (from_type == \"Communication\" & to_type == \"Person\")) %>%\n  transmute(entity = if_else(from_type == \"Person\", from_name, to_name),\n            comm   = if_else(from_type == \"Person\", to, from),\n            type   = \"Person\")\n\nvc <- edges_labeled %>%\n  filter((from_type == \"Vessel\" & to_type == \"Communication\") |\n         (from_type == \"Communication\" & to_type == \"Vessel\")) %>%\n  transmute(entity = if_else(from_type == \"Vessel\", from_name, to_name),\n            comm   = if_else(from_type == \"Vessel\", to, from),\n            type   = \"Vessel\")\n\noc <- edges_labeled %>%\n  filter((from_type == \"Organization\" & to_type == \"Communication\") |\n         (from_type == \"Communication\" & to_type == \"Organization\")) %>%\n  transmute(entity = if_else(from_type == \"Organization\", from_name, to_name),\n            comm   = if_else(from_type == \"Organization\", to, from),\n            type   = \"Organization\")\n\nentity_comm <- bind_rows(pc, vc, oc)\n\n# Pairwise co-occurrences\nedges_raw <- entity_comm %>%\n  inner_join(entity_comm, by = \"comm\", suffix = c(\"_a\", \"_b\")) %>%\n  filter(entity_a != entity_b) %>%\n  mutate(pair_id = map2_chr(entity_a, entity_b, ~ paste(sort(c(.x, .y)), collapse = \"||\"))) %>%\n  count(pair_id, entity_a, entity_b, name = \"weight\")\n\n# Node table\nnodes_tbl <- entity_comm %>%\n  distinct(name = entity, sub_type = type) %>%\n  mutate(row_id = row_number())\n\n# Edge table\nid_lkp <- nodes_tbl %>% select(name, row_id)\nedges_final <- edges_raw %>%\n  left_join(id_lkp, by = c(\"entity_a\" = \"name\")) %>% rename(from = row_id) %>%\n  left_join(id_lkp, by = c(\"entity_b\" = \"name\")) %>% rename(to = row_id) %>%\n  select(from, to, weight)\n\nfull_graph <- tbl_graph(nodes = nodes_tbl, edges = edges_final, directed = FALSE) %>%\n  mutate(\n    degree      = centrality_degree(),\n    betweenness = centrality_betweenness(),\n    closeness   = centrality_closeness(),\n    eigen       = centrality_eigen()\n  )\n\n# Visualize\nvis_nodes <- full_graph %>%\n  as_tibble() %>%\n  mutate(\n    id = row_number(),\n    label = name,\n    value = scales::rescale(degree, to = c(5, 25)),  # Size by degree\n    group = sub_type,\n    color = case_when(\n      sub_type == \"Person\" ~ \"orange\",\n      sub_type == \"Vessel\" ~ \"forestgreen\",\n      sub_type == \"Organization\" ~ \"pink\",\n      TRUE ~ \"lightgray\"\n    ),\n    shape = case_when(\n      sub_type == \"Person\" ~ \"dot\",\n      sub_type == \"Vessel\" ~ \"triangle\",\n      sub_type == \"Organization\" ~ \"box\",\n      TRUE ~ \"ellipse\"\n    ),\n    title = paste0(\n      \"<b>\", name, \"</b><br>\",\n      \"Degree: \", degree, \"<br>\",\n      \"Betweenness: \", round(betweenness, 2), \"<br>\",\n      \"Closeness: \", round(closeness, 3), \"<br>\",\n      \"Eigenvector: \", round(eigen, 3)\n    )\n  ) %>%\n  select(id, label, group, shape, color, value, title)\n\nvis_edges <- edges_final %>%\n  mutate(arrows = \"none\", color = \"gray\") %>%\n  distinct()\n\nvisNetwork(vis_nodes, vis_edges) %>%\n  visNodes(font = list(size = 16)) %>%\n  visEdges(smooth = FALSE) %>%\n  visOptions(\n    highlightNearest = list(enabled = TRUE, degree = 1, hover = TRUE),\n    nodesIdSelection = TRUE\n  ) %>%\n  visLayout(randomSeed = 42) %>%\n  visLegend(addNodes = data.frame(\n    label = c(\"Person\", \"Vessel\", \"Organization\"),\n    shape = c(\"dot\", \"triangle\", \"box\"),\n    color = c(\"orange\", \"forestgreen\", \"pink\")\n  ), useGroups = FALSE, position = \"right\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"visNetwork html-widget html-fill-item\" id=\"htmlwidget-a94263f864abba978470\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-a94263f864abba978470\">{\"x\":{\"nodes\":{\"id\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],\"label\":[\"Sam\",\"Kelly\",\"Nadia Conti\",\"Elise\",\"Liam Thorne\",\"Samantha Blake\",\"Davis\",\"Rodriguez\",\"Clepper Jensen\",\"Miranda Jordan\",\"The Intern\",\"The Lookout\",\"The Accountant\",\"Mrs. Money\",\"The Middleman\",\"Boss\",\"Small Fry\",\"Neptune\",\"Marlin\",\"Serenity\",\"Mako\",\"Reef Guardian\",\"Horizon\",\"Seawatch\",\"EcoVigil\",\"Sentinel\",\"Osprey\",\"Defender\",\"Northern Light\",\"Remora\",\"Knowles\",\"Glitters Team\",\"Oceanus City Council\",\"Green Guardians\",\"V. Miesel Shipping\",\"Sailor Shifts Team\"],\"group\":[\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Vessel\",\"Vessel\",\"Vessel\",\"Vessel\",\"Vessel\",\"Vessel\",\"Vessel\",\"Vessel\",\"Vessel\",\"Vessel\",\"Vessel\",\"Vessel\",\"Vessel\",\"Vessel\",\"Organization\",\"Organization\",\"Organization\",\"Organization\",\"Organization\"],\"shape\":[\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"dot\",\"triangle\",\"triangle\",\"triangle\",\"triangle\",\"triangle\",\"triangle\",\"triangle\",\"triangle\",\"triangle\",\"triangle\",\"triangle\",\"triangle\",\"triangle\",\"triangle\",\"box\",\"box\",\"box\",\"box\",\"box\"],\"color\":[\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"orange\",\"forestgreen\",\"forestgreen\",\"forestgreen\",\"forestgreen\",\"forestgreen\",\"forestgreen\",\"forestgreen\",\"forestgreen\",\"forestgreen\",\"forestgreen\",\"forestgreen\",\"forestgreen\",\"forestgreen\",\"forestgreen\",\"pink\",\"pink\",\"pink\",\"pink\",\"pink\"],\"value\":[6.052631578947368,5,15.52631578947368,9.210526315789473,10.26315789473684,8.157894736842106,13.42105263157895,11.31578947368421,5,5,6.052631578947368,10.26315789473684,6.052631578947368,12.36842105263158,8.157894736842106,13.42105263157895,7.105263157894736,13.42105263157895,9.210526315789473,7.105263157894736,25,16.57894736842105,12.36842105263158,9.210526315789473,10.26315789473684,13.42105263157895,5,7.105263157894736,8.157894736842106,15.52631578947368,6.052631578947368,8.157894736842106,15.52631578947368,13.42105263157895,13.42105263157895,10.26315789473684],\"title\":[\"<b>Sam<\\/b><br>Degree: 4<br>Betweenness: 32<br>Closeness: 0.009<br>Eigenvector: 0.032\",\"<b>Kelly<\\/b><br>Degree: 2<br>Betweenness: 0<br>Closeness: 0.007<br>Eigenvector: 0.004\",\"<b>Nadia Conti<\\/b><br>Degree: 22<br>Betweenness: 27.99<br>Closeness: 0.016<br>Eigenvector: 0.635\",\"<b>Elise<\\/b><br>Degree: 10<br>Betweenness: 2.74<br>Closeness: 0.014<br>Eigenvector: 0.364\",\"<b>Liam Thorne<\\/b><br>Degree: 12<br>Betweenness: 16.03<br>Closeness: 0.014<br>Eigenvector: 0.3\",\"<b>Samantha Blake<\\/b><br>Degree: 8<br>Betweenness: 3.87<br>Closeness: 0.014<br>Eigenvector: 0.253\",\"<b>Davis<\\/b><br>Degree: 18<br>Betweenness: 12.14<br>Closeness: 0.015<br>Eigenvector: 0.554\",\"<b>Rodriguez<\\/b><br>Degree: 14<br>Betweenness: 4.41<br>Closeness: 0.014<br>Eigenvector: 0.428\",\"<b>Clepper Jensen<\\/b><br>Degree: 2<br>Betweenness: 0<br>Closeness: 1<br>Eigenvector: 0\",\"<b>Miranda Jordan<\\/b><br>Degree: 2<br>Betweenness: 0<br>Closeness: 1<br>Eigenvector: 0\",\"<b>The Intern<\\/b><br>Degree: 4<br>Betweenness: 9.9<br>Closeness: 0.012<br>Eigenvector: 0.085\",\"<b>The Lookout<\\/b><br>Degree: 12<br>Betweenness: 71.17<br>Closeness: 0.013<br>Eigenvector: 0.275\",\"<b>The Accountant<\\/b><br>Degree: 4<br>Betweenness: 0<br>Closeness: 0.011<br>Eigenvector: 0.067\",\"<b>Mrs. Money<\\/b><br>Degree: 16<br>Betweenness: 37.64<br>Closeness: 0.016<br>Eigenvector: 0.457\",\"<b>The Middleman<\\/b><br>Degree: 8<br>Betweenness: 4.75<br>Closeness: 0.012<br>Eigenvector: 0.146\",\"<b>Boss<\\/b><br>Degree: 18<br>Betweenness: 48.5<br>Closeness: 0.016<br>Eigenvector: 0.433\",\"<b>Small Fry<\\/b><br>Degree: 6<br>Betweenness: 0<br>Closeness: 0.013<br>Eigenvector: 0.255\",\"<b>Neptune<\\/b><br>Degree: 18<br>Betweenness: 13.82<br>Closeness: 0.016<br>Eigenvector: 0.601\",\"<b>Marlin<\\/b><br>Degree: 10<br>Betweenness: 2.22<br>Closeness: 0.015<br>Eigenvector: 0.414\",\"<b>Serenity<\\/b><br>Degree: 6<br>Betweenness: 0<br>Closeness: 0.014<br>Eigenvector: 0.263\",\"<b>Mako<\\/b><br>Degree: 40<br>Betweenness: 191.26<br>Closeness: 0.02<br>Eigenvector: 1\",\"<b>Reef Guardian<\\/b><br>Degree: 24<br>Betweenness: 48.77<br>Closeness: 0.017<br>Eigenvector: 0.658\",\"<b>Horizon<\\/b><br>Degree: 16<br>Betweenness: 15.28<br>Closeness: 0.016<br>Eigenvector: 0.502\",\"<b>Seawatch<\\/b><br>Degree: 10<br>Betweenness: 1.24<br>Closeness: 0.012<br>Eigenvector: 0.288\",\"<b>EcoVigil<\\/b><br>Degree: 12<br>Betweenness: 5.05<br>Closeness: 0.013<br>Eigenvector: 0.37\",\"<b>Sentinel<\\/b><br>Degree: 18<br>Betweenness: 28.42<br>Closeness: 0.016<br>Eigenvector: 0.568\",\"<b>Osprey<\\/b><br>Degree: 2<br>Betweenness: 0<br>Closeness: 0.012<br>Eigenvector: 0.116\",\"<b>Defender<\\/b><br>Degree: 6<br>Betweenness: 2.27<br>Closeness: 0.014<br>Eigenvector: 0.226\",\"<b>Northern Light<\\/b><br>Degree: 8<br>Betweenness: 8.89<br>Closeness: 0.013<br>Eigenvector: 0.197\",\"<b>Remora<\\/b><br>Degree: 22<br>Betweenness: 22.34<br>Closeness: 0.016<br>Eigenvector: 0.638\",\"<b>Knowles<\\/b><br>Degree: 4<br>Betweenness: 0<br>Closeness: 0.013<br>Eigenvector: 0.181\",\"<b>Glitters Team<\\/b><br>Degree: 8<br>Betweenness: 6.27<br>Closeness: 0.013<br>Eigenvector: 0.177\",\"<b>Oceanus City Council<\\/b><br>Degree: 22<br>Betweenness: 30.24<br>Closeness: 0.017<br>Eigenvector: 0.63\",\"<b>Green Guardians<\\/b><br>Degree: 18<br>Betweenness: 30.55<br>Closeness: 0.016<br>Eigenvector: 0.522\",\"<b>V. Miesel Shipping<\\/b><br>Degree: 18<br>Betweenness: 6.04<br>Closeness: 0.015<br>Eigenvector: 0.594\",\"<b>Sailor Shifts Team<\\/b><br>Degree: 12<br>Betweenness: 9.22<br>Closeness: 0.014<br>Eigenvector: 0.366\"]},\"edges\":{\"from\":[16,7,16,32,16,5,16,21,16,14,16,8,16,13,16,15,16,35,9,10,7,31,7,21,7,3,7,18,7,30,7,8,7,17,7,35,28,21,28,22,28,24,25,34,25,23,25,5,25,33,25,22,25,26,4,5,4,21,4,3,4,18,4,35,32,29,32,30,32,6,34,23,34,21,34,29,34,33,34,22,34,24,34,26,34,12,23,21,23,33,23,22,23,24,23,26,23,12,2,1,31,21,5,3,5,33,5,15,21,19,21,14,21,18,21,33,21,27,21,22,21,30,21,36,21,6,21,26,21,20,21,17,21,35,19,3,19,33,19,22,19,30,14,18,14,30,14,8,14,11,14,15,14,35,3,18,3,33,3,30,3,8,3,36,3,26,3,35,18,22,18,30,18,20,18,35,29,33,29,36,33,22,33,6,33,26,22,24,22,26,22,20,22,12,30,8,30,36,30,17,30,35,8,36,8,35,36,6,1,12,24,26,26,12,13,15,11,12],\"to\":[7,16,32,16,5,16,21,16,14,16,8,16,13,16,15,16,35,16,10,9,31,7,21,7,3,7,18,7,30,7,8,7,17,7,35,7,21,28,22,28,24,28,34,25,23,25,5,25,33,25,22,25,26,25,5,4,21,4,3,4,18,4,35,4,29,32,30,32,6,32,23,34,21,34,29,34,33,34,22,34,24,34,26,34,12,34,21,23,33,23,22,23,24,23,26,23,12,23,1,2,21,31,3,5,33,5,15,5,19,21,14,21,18,21,33,21,27,21,22,21,30,21,36,21,6,21,26,21,20,21,17,21,35,21,3,19,33,19,22,19,30,19,18,14,30,14,8,14,11,14,15,14,35,14,18,3,33,3,30,3,8,3,36,3,26,3,35,3,22,18,30,18,20,18,35,18,33,29,36,29,22,33,6,33,26,33,24,22,26,22,20,22,12,22,8,30,36,30,17,30,35,30,36,8,35,8,6,36,12,1,26,24,12,26,15,13,12,11],\"weight\":[1,1,1,1,1,1,3,3,10,10,3,3,2,2,7,7,2,2,38,38,2,2,6,6,5,5,3,3,5,5,3,3,2,2,3,3,1,1,5,5,1,1,3,3,8,8,3,3,2,2,6,6,2,2,2,2,1,1,3,3,3,3,2,2,1,1,1,1,1,1,6,6,2,2,2,2,18,18,6,6,3,3,3,3,3,3,1,1,1,1,4,4,2,2,9,9,5,5,3,3,1,1,4,4,14,14,2,2,2,2,1,1,10,10,3,3,8,8,4,4,14,14,1,1,7,7,9,9,3,3,1,1,2,2,1,1,2,2,4,4,2,2,2,2,1,1,1,1,20,20,6,6,2,2,3,3,2,2,1,1,1,1,1,1,1,1,2,2,2,2,15,15,3,3,12,12,2,2,1,1,6,6,5,5,3,3,4,4,4,4,5,5,1,1,2,2,3,3,4,4,3,3,1,1,1,1,3,3,8,8,1,1,4,4,4,4,20,20],\"arrows\":[\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\"],\"color\":[\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\",\"gray\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\",\"font\":{\"size\":16}},\"manipulation\":{\"enabled\":false},\"edges\":{\"smooth\":false},\"interaction\":{\"hover\":true,\"zoomSpeed\":1},\"layout\":{\"randomSeed\":42}},\"groups\":[\"Person\",\"Vessel\",\"Organization\"],\"width\":null,\"height\":null,\"idselection\":{\"enabled\":true,\"style\":\"width: 150px; height: 26px\",\"useLabels\":true,\"main\":\"Select by id\"},\"byselection\":{\"enabled\":false,\"style\":\"width: 150px; height: 26px\",\"multiple\":false,\"hideColor\":\"rgba(200,200,200,0.5)\",\"highlight\":false},\"main\":null,\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\",\"highlight\":{\"enabled\":true,\"hoverNearest\":true,\"degree\":1,\"algorithm\":\"all\",\"hideColor\":\"rgba(200,200,200,0.5)\",\"labelOnly\":true},\"collapse\":{\"enabled\":false,\"fit\":false,\"resetHighlight\":true,\"clusterOptions\":null,\"keepCoord\":true,\"labelSuffix\":\"(cluster)\"},\"legend\":{\"width\":0.2,\"useGroups\":false,\"position\":\"right\",\"ncol\":1,\"stepX\":100,\"stepY\":100,\"zoom\":true,\"nodes\":{\"label\":[\"Person\",\"Vessel\",\"Organization\"],\"shape\":[\"dot\",\"triangle\",\"box\"],\"color\":[\"orange\",\"forestgreen\",\"pink\"]},\"nodesToDataframe\":true}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n::: {style=\"background-color: #fffbe7; padding: 2em; border-radius: 12px\"}\n**Insights**: This network map illustrates the complex web of communication and co-occurrence among individuals, vessels, and organizations. At the center is a densely connected cluster revolving around vessels such as Mako, Remora, Reef Guardian, and Neptune, suggesting these are frequent topics of discussion.\n\nHighly connected individuals like Nadia Conti, Boss, Davis, and Mrs. Money, along with key organizations such as the Oceanus City Council and Green Guardians, play prominent roles—consistent with their high degree and betweenness centrality observed earlier. In contrast, individuals like Sam, Kelly, and The Lookout appear on the network’s periphery, linked to the core through only one or two connections, indicating more isolated or limited involvement.\n:::\n\n## 6.3. Clustering Analysis\n\nTo better understand the structure of interactions, I conducted two clustering analyses based on communication frequency. The first focused on Person–Organization communication, revealing how individuals cluster around formal entities they frequently communicate with. The second included Vessels to capture broader patterns, highlighting how people and organizations group around frequently discussed or engaged vessels. By comparing both, we can distinguish between clusters formed through institutional communication and those shaped by shared operational or topical focus.\n\n### 6.3.1. Person-Organization Clustering\n\nThis analysis aims to identify clusters of people and organizations that frequently co-occur in communication events. The process begins by filtering the edges to retain only those pairs that have interacted at least twice, ensuring meaningful connections. A graph is then constructed and restricted to its largest connected component to focus on the primary network structure. Centrality metrics (degree, betweenness, eigenvector) are computed to assess node influence. Louvain clustering is applied using edge weights (number of shared communication events) to detect densely connected communities. The resulting network is visualized with node size indicating degree centrality and color representing cluster membership.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Step 1: Filter edges with sufficient communication events\nnetwork_filtered <- network_edges %>%\n  filter(num_comm_events >= 2)\n\n# Step 2: Create graph\npp_graph <- tbl_graph(nodes = network_nodes,\n                      edges = network_filtered,\n                      directed = FALSE) %>%\n  activate(edges) %>%\n  mutate(weight = num_comm_events)\n\n# Step 3: Filter to largest connected component\npp_graph <- pp_graph %>%\n  activate(nodes) %>%\n  filter(!node_is_isolated()) %>%\n  mutate(comp = group_components()) %>%\n  filter(comp == which.max(table(comp)))\n\n# Step 4: Compute centrality + clustering\npp_graph <- pp_graph %>%\n  activate(nodes) %>%\n  mutate(\n    cluster = as_factor(group_louvain(weights = weight)),\n    deg     = centrality_degree(),\n    betw    = centrality_betweenness(),\n    eig     = centrality_eigen()\n  )\n\n# Step 5: Plot with different shapes for Person vs Organization\nset.seed(1234)\nggraph(pp_graph, layout = \"fr\") +\n  geom_edge_link(aes(width = weight), colour = \"grey70\", alpha = 0.4) +\n  geom_node_point(aes(colour = cluster, size = deg, shape = sub_type)) +\n  geom_node_text(aes(label = name, colour = cluster), repel = TRUE, size = 3) +\n  scale_shape_manual(values = c(\n    Person = 16,         # circle\n    Organization = 15    # square\n  )) +\n  scale_edge_width(range = c(0.2, 2.5)) +\n  theme_void() +\n  labs(title = \"People–Organization Clustering (Louvain method)\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-23-1.png){width=576}\n:::\n:::\n\n\n::: {style=\"background-color: #fffbe7; padding: 2em; border-radius: 12px\"}\n**Insights**: The Louvain clustering reveals four distinct communities of people and organizations based on shared communication events:\n\n-   Cluster 1 (Red): Comprising Nadia Conti, Davis, Elise, and V. Miesel Shipping, this group appears to be closely connected, potentially involved in operational or logistical discussions.\n\n-   Cluster 2 (Green): Includes Oceanus City Council, Green Guardians, Samantha Blake, and Sailor Shifts Team, suggesting a coalition focused on environmental or public affairs.\n\n-   Cluster 3 (Blue): Formed by The Lookout, The Intern, Sam, and Kelly, this cluster is more peripheral but tightly knit—possibly playing an observational or low-influence role.\n\n-   Cluster 4 (Purple): Consisting of Boss, Mrs. Money, The Middleman, and The Accountant, this group may represent organizational or administrative coordination within the broader network.\n\nNotably, Liam Thorne and Mrs. Money serve as key connectors, bridging multiple clusters and facilitating cross-group communication. In terms of centrality, The Intern, Mrs. Money, and Nadia Conti stand out as the most well-connected individuals, indicating their critical roles in the network's information flow.\n:::\n\n### 6.3.2. Person-Organization-Vessel Clustering\n\nThe second network graph is constructed to uncover clusters of people, organizations, and vessels that frequently co-occur in communication events. First, only strong connections—those with five or more shared communication events are retained to ensure meaningful interactions. A graph is then built and filtered to include only the largest connected component, focusing the analysis on the most relevant part of the network. Louvain clustering is applied using edge weights to detect community structures, while centrality metrics (degree, betweenness, eigenvector) are computed to identify influential entities. The resulting network is visualized with node size representing degree centrality and color indicating cluster membership, revealing key actors and tightly-knit groups in the communication ecosystem.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Step 1: Filter edges with sufficient communication events\nedges_filtered <- edges_final %>%\n  filter(weight >= 5)\n\n# Step 2: Create graph\nentity_graph <- tbl_graph(nodes = nodes_tbl,\n                          edges = edges_filtered,\n                          directed = FALSE) %>%\n  activate(edges) %>%\n  mutate(weight = weight)\n\n# Step 3: Filter to largest connected component\nentity_graph <- entity_graph %>%\n  activate(nodes) %>%\n  filter(!node_is_isolated()) %>%\n  mutate(comp = group_components()) %>%\n  filter(comp == which.max(table(comp)))\n\n# Step 4: Compute centrality + clustering\nentity_graph <- entity_graph %>%\n  activate(nodes) %>%\n  mutate(\n    cluster = as_factor(group_louvain(weights = weight)),\n    deg     = centrality_degree(),\n    betw    = centrality_betweenness(),\n    eig     = centrality_eigen()\n  )\n\n# Step 5: Plot with shape by sub_type\nset.seed(1234)\nggraph(entity_graph, layout = \"fr\") +\n  geom_edge_link(aes(width = weight), colour = \"grey70\", alpha = 0.4) +\n  geom_node_point(aes(colour = cluster, size = deg, shape = sub_type)) +\n  geom_node_text(aes(label = name, colour = cluster), repel = TRUE, size = 3) +\n  scale_shape_manual(values = c(\n    Person = 16,         # circle\n    Organization = 15,   # square\n    Vessel = 17          # triangle\n  )) +\n  scale_edge_width(range = c(0.2, 2.5)) +\n  theme_void() +\n  labs(title = \"People–Organization–Vessel Clustering (Louvain method)\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n::: {style=\"background-color: #fffbe7; padding: 2em; border-radius: 12px\"}\n**Insights**: The inclusion of vessels reveals distinct communication clusters centered around frequently mentioned ships and their associated entities.\n\n-   Cluster 1 (Red) is dominated by vessels like Mako, Remora, Neptune, and V. Miesel Shipping, alongside individuals like Davis and Nadia Conti. This suggests a group engaged in operational or shipping-related discussions.\n\n-   Cluster 2 (Green) consists entirely of individuals including Mrs. Money, The Intern, The Middleman, and Boss—likely representing a coordinated team, possibly administrative or managerial.\n\n-   Cluster 3 (Blue) centers on Green Guardians, Oceanus City Council, and vessels like Reef Guardian, indicating an environmental or civic coalition involving both institutions and ships.\n\n-   Cluster 4 (Purple) consists entirely of 3 vessels Sentinel, Horizon, and EcoVigil. This suggests the cluster represents a group of vessels that are frequently discussed together or are involved in similar communication contexts.\n:::\n",
    "supporting": [
      "Take-home_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../../site_libs/vis-9.1.0/vis-network.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/vis-9.1.0/vis-network.min.js\"></script>\n<script src=\"../../site_libs/visNetwork-binding-2.1.2/visNetwork.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}