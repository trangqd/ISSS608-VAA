{
  "hash": "81ea9076ba87bd3c4be881c9ae7cc194",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 1 (Part 2)\"\nauthor: \"Quynh Trang Do\"\ndate: \"May 8, 2025\"\ndate-modified: \"last-modified\"\nformat: html\neditor: visual\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n# Load packages and import data\n\n## Load packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse, ggiraph, plotly, \n               patchwork, DT, dplyr, scales, forcats, dplyr, grid) \n```\n:::\n\n\n## Import data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- read_csv(\"respopagesex2024.csv\")\n```\n:::\n\n\n# Original submission\n\nThe original visualization was created by my classmate Andre Ong Jia Kang. Please refer to [this link](https://isss608-ay2025-aprilterm.netlify.app/take-home_ex/take-home_ex01/take-home_ex01) for the original submission.\n\n## Data cleaning and preparation\n\nI follow the same data cleaning and preparation procedure as the original submission to ensure the same output.\n\n### Adding “Region” column\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- df %>%\n  mutate(\n    Region = case_when(\n      # Central Region (Core + Rest)\n      PA %in% c(\n        \"Downtown Core\", \"Outram\", \"Sentosa\", \"Rochor\", \"Orchard\", \"Newton\",\n        \"River Valley\", \"Bukit Timah\", \"Holland Road\", \"Tanglin\", \"Novena\",\n        \"Thomson\", \"Marina East\", \"Marina South\", \"Museum\", \"Singapore River\",\n        \"Bishan\", \"Bukit Merah\", \"Geylang\", \"Kallang\", \"Marine Parade\",\n        \"Queenstown\", \"Southern Islands\", \"Toa Payoh\", \"Straits View\"\n      ) ~ \"Central\",                                                    \n\n      # North Region\n      PA %in% c(\n        \"Central Water Catchment\", \"Lim Chu Kang\", \"Mandai\", \"Sembawang\",\n        \"Simpang\", \"Sungei Kadut\", \"Woodlands\", \"Yishun\"\n      ) ~ \"North\", \n\n      # North-East Region\n      PA %in% c(\n        \"Ang Mo Kio\", \"Hougang\", \"North-Eastern Islands\", \"Punggol\",\n        \"Seletar\", \"Sengkang\", \"Serangoon\"\n      ) ~ \"North-East\",                     \n\n      # East Region\n      PA %in% c(\"Bedok\", \"Changi\", \"Changi Bay\", \"Paya Lebar\", \"Pasir Ris\", \"Tampines\"\n      ) ~ \"East\",           \n      \n      # West Region\n      PA %in% c(\n        \"Bukit Batok\", \"Bukit Panjang\", \"Boon Lay\", \"Pioneer\", \"Choa Chu Kang\",\n        \"Clementi\", \"Jurong East\", \"Jurong West\", \"Tengah\", \"Tuas\",\n        \"Western Islands\", \"Western Water Catchment\", \"Benoi\", \"Ghim Moh\",\n        \"Gul\", \"Pandan Gardens\", \"Jurong Island\", \"Kent Ridge\", \"Nanyang\",\n        \"Teban Gardens\", \"Toh Tuck\", \"Tuas South\", \"West Coast\"\n      ) ~ \"West\", \n\n      # Catch-all for any PAs that didn’t match\n      TRUE ~ NA_character_\n    )\n  )\n```\n:::\n\n\n### Removing all rows with population sum equal to 0\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf2 <- df %>%\n  group_by(PA) %>%\n  filter(sum(Pop, na.rm = TRUE) > 0) %>%\n  ungroup()\n```\n:::\n\n\n## Visualization\n\nThis visualization demonstrates the top 4 sub-zones with highest population in Tampines planning area and their corresponding box plots of age distribution.\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01_P2_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n## Original code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1) Find & alphabetize your top 4 subzones\ntop4_sz <- df2 %>%\n  filter(PA == \"Tampines\") %>%\n  group_by(SZ) %>% \n  summarise(TotalPop = sum(Pop), .groups = \"drop\") %>% \n  slice_max(TotalPop, n = 4) %>% \n  pull(SZ)\n\nalpha_levels <- sort(top4_sz)\n\n# 2) Bar‐chart data (with ordered factor)\nbar_data <- df2 %>% \n  filter(SZ %in% top4_sz) %>% \n  group_by(SZ) %>% \n  summarise(TotalPop = sum(Pop), .groups = \"drop\") %>%\n  mutate(SZ = factor(SZ, levels = alpha_levels))\n\np_bar <- ggplot(bar_data, aes(x = SZ, y = TotalPop)) +\n  geom_col(fill = \"darkorange\") +\n  coord_flip() +\n  scale_y_continuous(labels = comma) +\n  labs(subtitle = \"Total Population – Top 4 Subzones\", x = NULL, y = \"Population\") +\n  theme_ipsum(plot_margin = margin(8, 8, 8, 8))\n\n# 3) Boxplot data (with same ordered factor)\nbox_data <- df2 %>% \n  filter(SZ %in% top4_sz) %>% \n  mutate(\n    Age = as.numeric(Age),\n    SZ  = factor(SZ, levels = alpha_levels)\n  ) %>% \n  select(SZ, Age, Pop) %>% \n  uncount(weights = Pop)\n\np_box <- ggplot(box_data, aes(x = SZ, y = Age, fill = SZ)) +\n  geom_boxplot(alpha = 1.5, show.legend = FALSE) +\n  coord_flip() +\n  labs(subtitle = \"Age Distribution by Subzone\", x = NULL, y = \"Age (years)\") +\n  theme_ipsum(plot_margin = margin(8, 8, 8, 8))\n\n# 4) Combine\n(p_bar / p_box) +\n  plot_annotation(\n    title   = \"Population Size & Age Distributions in Top 4 Subzones (A–Z)\",\n    caption = \"Bars = total pop; Boxes = age spread\"\n  )\n```\n:::\n\n:::\n\n# Comments\n\n## Good design practices\n\n1.  **Suitable choice of visualizations to represent quantity and distribution**\n\n    The use of a horizontal bar chart effectively conveys total population size—an intuitive and direct way to compare the number of residents across subzones. Paired with this is a boxplot showing the age distribution within the same subzones, which illustrates not just the median age but also the range, concentration, and presence of outliers in the population. By combining these two perspectives—how many people live in each area and how their ages are spread—the chart enables a more comprehensive analysis than using either visualization alone.\n\n2.  **Alignment of axis components and use of a horizontal layout**\n\n    Both the bar chart and the boxplot share the same categorical y-axis representing subzones, and the subzones appear in the same order across both visualizations (e.g., Tampines, Simei, Tampines North, etc.). This consistent alignment allows viewers to easily scan across charts and make immediate, accurate comparisons between total population and age distribution for each subzone without reorienting their focus. Additionally, the horizontal layout improves legibility, especially for subzone names, which are quite long and would be harder to read if rotated vertically.\n\n3.  **Logical visual hierarchy**\n\n    The chart’s visual hierarchy reinforces a clear top-down logic that aligns with how viewers naturally process information. By placing the bar chart at the top, it first draws attention to the total population size of each subzone. This is the broad, high-level metric. Beneath it, the boxplot introduces a deeper layer of detail by showing the age distribution, which adds nuance and context to the population figures. This sequence helps direct the viewers to move from general to specific insights: starting with “how many people live here” and then exploring “what is the demographic structure of that population.”\n\n## Areas for improvement\n\n1.  **Sorting sub-zones in a logical order**\n\n    The chart displays the top four subzones with the highest population in Tampines, but their arrangement does not follow a consistent or meaningful order—such as descending population size or alphabetical sequence. For instance, Tampines North is positioned above Simei, even though it has a lower population. This weakens the visual impact and does not fully leverage the bar chart’s strength in showing ranked comparisons at a glance. Reordering the bars by population size would improve readability, enhance pattern recognition, and allow viewers to instantly grasp which subzones are more or less populous.\n\n2.  **Aligning color coding and adding legend**\n\n    In the current design, the boxplot uses distinct colors to represent each subzone, but the bar chart displays all bars in the same color. Applying the same color scheme to the bar chart would help visually link the two components, improving overall cohesion and visual tracking. Furthermore, the chart lacks a legend to explain the color assignments, which can create confusion and reduce interpretability, especially if more subzones are added. Including a clear, consistent legend would make the chart more intuitive, accessible, and self-explanatory.\n\n3.  **Adjusting title and adding data labels**\n\n    The original title, “Population Size & Age Distributions in Top 4 Subzones (A–Z),” lacks clarity and precision in a few key ways. First, it does not specify the basis for selecting the top 4 subzones, leaving viewers uncertain about whether the ranking is based on population, age diversity, or another metric. Furthermore, the title omits any geographical context, such as the fact that all subzones belong to the Tampines planning area, which is essential for interpretation.\n\n    The original chart doesn't include any data label. Adding labels such as total population figures in the bar chart and median age values in the boxplot can help enhance interpretability by providing precise values at a glance, eliminating the need for visual estimation and making the chart more informative and accessible.\n\n4.  **Reveal distribution patterns more clearly with Violin Plots**\n\n    While the boxplot effectively displays the median, interquartile range, and outliers, it does not capture the distribution shape or skewness of the data. Adding a violin plot would address this limitation by showing the full density of the age distribution for each subzone. This allows viewers to better understand how age groups are concentrated—whether the population is skewed toward younger or older ages, or if there are multiple peaks. A violin plot provides richer insight into the underlying demographic patterns, making it a more informative alternative for visualizing population spread.\n\n# Makeover\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01_P2_files/figure-html/unnamed-chunk-7-1.png){width=1536}\n:::\n:::\n\n\n## Code\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Get top 4 sub-zones by population\ntop4_sz <- df2 %>%\n  filter(PA == \"Tampines\") %>%\n  group_by(SZ) %>% \n  summarise(TotalPop = sum(Pop), .groups = \"drop\") %>%\n  slice_max(TotalPop, n = 4)\n\nordered_levels <- top4_sz %>%\n  arrange(desc(TotalPop)) %>%\n  pull(SZ) %>%\n  rev()\n\n# Color palette (match across plots)\nsz_colors <- RColorBrewer::brewer.pal(n = 4, name = \"Set3\")\nnames(sz_colors) <- ordered_levels\n\n# 2. Bar chart\nbar_data <- df2 %>% \n  filter(SZ %in% ordered_levels) %>%\n  group_by(SZ) %>% \n  summarise(TotalPop = sum(Pop), .groups = \"drop\") %>%\n  mutate(SZ = factor(SZ, levels = ordered_levels))\n\np_bar <- ggplot(bar_data, aes(x = SZ, y = TotalPop, fill = SZ)) +\n  geom_col(show.legend = FALSE) +\n  geom_text(aes(label = comma(TotalPop)), \n            hjust = -0.1, \n            size = 4, \n            fontface = \"bold\") +\n  coord_flip() +\n  scale_fill_manual(values = sz_colors, name = \"Subzone\") +\n  scale_y_continuous(labels = comma) +\n  labs(subtitle = \"Total Population – Top 4 Subzones\", x = NULL, y = \"Population\") +\n  theme_ipsum(base_family=\"sans\") +\n  theme(plot.subtitle = element_text(face = \"bold\"), \n        panel.grid.major.y = element_blank())\n\n# 3. Boxplot data\nbox_data <- df2 %>% \n  filter(SZ %in% ordered_levels) %>% \n  mutate(\n    Age = as.numeric(Age),\n    SZ  = factor(SZ, levels = ordered_levels)\n  ) %>% \n  select(SZ, Age, Pop) %>% \n  uncount(weights = Pop)\n\np_box <- ggplot(box_data, aes(x = SZ, y = Age, fill = SZ)) +\n  geom_boxplot(show.legend = TRUE, alpha = 0.8) +\n  stat_summary(fun = median, geom = \"text\", aes(label = round(..y.., 1)), \n               size = 5, fontface = \"bold\", color = \"black\", hjust = -0.3) +\n  coord_flip() +\n  scale_fill_manual(values = sz_colors) +\n  labs(subtitle = \"Age Spread by Subzone\", x = NULL, y = \"Age (years)\") +\n  theme_ipsum(base_family=\"sans\") +\n  theme(plot.subtitle = element_text(face = \"bold\"))\n\n# 4. Violin plot\np_violin <- ggplot(box_data, aes(x = SZ, y = Age, fill = SZ)) +\n  geom_violin(trim = FALSE, show.legend = FALSE, alpha = 0.8) +\n  coord_flip() +\n  scale_fill_manual(values = sz_colors) +\n  labs(subtitle = \"Age Distribution by Subzone\", x = NULL, y = \"Age (years)\") +\n  theme_ipsum(base_family=\"sans\") +\n  theme(plot.subtitle = element_text(face = \"bold\"))\n\n# 5. Combine all three charts \n(p_bar / (p_box | p_violin)) +\n  plot_layout(heights = c(0.6, 1)) +\n  plot_annotation(\n    title = \"Population Size & Age Distributions in Top 4 Most Populous Subzones of Tampines\",\n    caption = \"Bars = total population; Boxes = age spread; Violins = age distribution density\",\n    theme = theme(\n      plot.title = element_text(hjust = 0.5, size = 18, face = \"bold\"),\n      plot.caption = element_text(size = 14)\n    ),\n    tag_levels = \"I\"\n  )\n```\n:::\n\n\n## Key changes made\n\n-   **Changed the title** from a vague and potentially misleading one to\\\n    “Population Size & Age Distributions in Top 4 Most Populous Subzones of Tampines.” This explicitly states the selection criteria (population-based) and adds geographic context.\n\n-   **Subzones are now sorted by** **descending total population**, which makes comparisons more intuitive.\n\n-   Added **population labels** to the bar chart for exact values. Added **median age labels** to the boxplot to highlight central tendency, improving interpretability.\n\n-   Assigned **consistent subzone colors across all three charts** (bar, box, and violin). A shared legend placed centrally on the right helps reinforce this visual mapping.\n\n-   Included a third panel: a **violin plot** beneath the boxplot to reveal the **density and skewness** of age distributions.\n:::\n",
    "supporting": [
      "Take-home_Ex01_P2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}