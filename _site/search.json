[
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1 (Part 1)",
    "section": "",
    "text": "This study provides a comprehensive demographic analysis of Singapore, leveraging multiple visualizations to uncover patterns in population distribution, age structure, dependency ratios, and gender balance across regions and planning areas. The first section presents a suite of five integrated charts that offer both macro and micro perspectives on population distribution—highlighting regional totals, intra-regional variability, the number of administrative units, and the concentration of population within selected planning areas. The second section examines the population structure by age group across regions and quantifies the dependency ratio at the planning area level, which reflects the economic pressure placed on the working-age population by younger and older dependents. The third section investigates the variation in sex ratios across planning areas, identifying gender imbalances and regional trends.\nDataset used: Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex, June 2024"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#install-packages",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#install-packages",
    "title": "Take-home Exercise 1 (Part 1)",
    "section": "Install packages",
    "text": "Install packages\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse, tidytext, scales)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#import-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#import-data",
    "title": "Take-home Exercise 1 (Part 1)",
    "section": "Import data",
    "text": "Import data\n\ndata &lt;- read_csv(\"respopagesex2024.csv\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-discovery-and-cleaning",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-discovery-and-cleaning",
    "title": "Take-home Exercise 1 (Part 1)",
    "section": "Data Discovery and Cleaning",
    "text": "Data Discovery and Cleaning\n\n# Summary statistics\nsummary(data)\n\n      PA                 SZ                Age                Sex           \n Length:60424       Length:60424       Length:60424       Length:60424      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n      Pop              Time     \n Min.   :   0.0   Min.   :2024  \n 1st Qu.:   0.0   1st Qu.:2024  \n Median :  20.0   Median :2024  \n Mean   :  69.4   Mean   :2024  \n 3rd Qu.:  90.0   3rd Qu.:2024  \n Max.   :1180.0   Max.   :2024  \n\n# Count of missing values per column\ncolSums(is.na(data))\n\n  PA   SZ  Age  Sex  Pop Time \n   0    0    0    0    0    0 \n\n# Count of duplicated rows\nsum(duplicated(data))\n\n[1] 0\n\n# View duplicated rows (if any)\ndata[duplicated(data), ]\n\n# A tibble: 0 × 6\n# ℹ 6 variables: PA &lt;chr&gt;, SZ &lt;chr&gt;, Age &lt;chr&gt;, Sex &lt;chr&gt;, Pop &lt;dbl&gt;,\n#   Time &lt;dbl&gt;\n\n\nSummary interpretation:\n\nTotal observations: 60,424 rows. No missing values and duplicates were found.\nCurrent data types: PA, SZ, Age, Sex, Time are character. Pop and Time are numeric.\nIssues to be fixed:\n\n\nThe “Age” column is currently of type character due to the presence of the value “90 and Over”. To convert the column to numeric, this value is transformed into a numeric-compatible format. I replace this with “90” to ensure consistent analysis without assuming more than what the data provides.\n\n\n# Check unique values of Age column \nunique(data$Age)\n\n [1] \"0\"           \"1\"           \"2\"           \"3\"           \"4\"          \n [6] \"5\"           \"6\"           \"7\"           \"8\"           \"9\"          \n[11] \"10\"          \"11\"          \"12\"          \"13\"          \"14\"         \n[16] \"15\"          \"16\"          \"17\"          \"18\"          \"19\"         \n[21] \"20\"          \"21\"          \"22\"          \"23\"          \"24\"         \n[26] \"25\"          \"26\"          \"27\"          \"28\"          \"29\"         \n[31] \"30\"          \"31\"          \"32\"          \"33\"          \"34\"         \n[36] \"35\"          \"36\"          \"37\"          \"38\"          \"39\"         \n[41] \"40\"          \"41\"          \"42\"          \"43\"          \"44\"         \n[46] \"45\"          \"46\"          \"47\"          \"48\"          \"49\"         \n[51] \"50\"          \"51\"          \"52\"          \"53\"          \"54\"         \n[56] \"55\"          \"56\"          \"57\"          \"58\"          \"59\"         \n[61] \"60\"          \"61\"          \"62\"          \"63\"          \"64\"         \n[66] \"65\"          \"66\"          \"67\"          \"68\"          \"69\"         \n[71] \"70\"          \"71\"          \"72\"          \"73\"          \"74\"         \n[76] \"75\"          \"76\"          \"77\"          \"78\"          \"79\"         \n[81] \"80\"          \"81\"          \"82\"          \"83\"          \"84\"         \n[86] \"85\"          \"86\"          \"87\"          \"88\"          \"89\"         \n[91] \"90_and_Over\"\n\n\n\n# Convert Age to numeric\ndata &lt;- data %&gt;%\n  mutate(Age = if_else(Age == \"90_and_Over\", \"90\", Age)) %&gt;%  # Replace string with number\n  mutate(Age = as.numeric(Age))  # Convert to numeric\n\n# Check the new data type\nclass(data$Age)\n\n[1] \"numeric\"\n\n\n\nChange column names for “PA”, “SZ”, and “Pop” to enhance clarity and readability.\n\n\n# Rename columns\ndata &lt;- data %&gt;%\n  rename(\n    Planning_Area = PA,\n    Sub_Zone = SZ,\n    Population = Pop\n  )\n\n\nRemove unnecessary column “Time” since all values are 2024 - the year in which the data was collected.\n\n\ndata &lt;- data %&gt;% select(-Time)\n\n\nRemove planning areas with 0 population since they don’t contribute any demographic information (no age, sex data to analyze). These areas might be undeveloped, industrial, or restricted areas.\n\n\ndata &lt;- data %&gt;%\n  filter(Population &gt; 0)\n\ndata %&gt;%\n  group_by(Planning_Area) %&gt;%\n  summarise(Total_Pop = sum(Population)) \n\n# A tibble: 42 × 2\n   Planning_Area Total_Pop\n   &lt;chr&gt;             &lt;dbl&gt;\n 1 Ang Mo Kio       160450\n 2 Bedok            277660\n 3 Bishan            88210\n 4 Bukit Batok      168390\n 5 Bukit Merah      149390\n 6 Bukit Panjang    138730\n 7 Bukit Timah       84250\n 8 Changi             1830\n 9 Choa Chu Kang    190640\n10 Clementi         102960\n# ℹ 32 more rows\n\n\nAfter removal, 42 planning areas remain in the dataset.\n\nFinal review after cleaning\n\n\nsummary(data)\n\n Planning_Area        Sub_Zone              Age            Sex           \n Length:37243       Length:37243       Min.   : 0.00   Length:37243      \n Class :character   Class :character   1st Qu.:22.00   Class :character  \n Mode  :character   Mode  :character   Median :44.00   Mode  :character  \n                                       Mean   :44.32                     \n                                       3rd Qu.:66.00                     \n                                       Max.   :90.00                     \n   Population    \n Min.   :  10.0  \n 1st Qu.:  30.0  \n Median :  70.0  \n Mean   : 112.6  \n 3rd Qu.: 150.0  \n Max.   :1180.0  \n\ncolSums(is.na(data))\n\nPlanning_Area      Sub_Zone           Age           Sex    Population \n            0             0             0             0             0"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#feature-engineering",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#feature-engineering",
    "title": "Take-home Exercise 1 (Part 1)",
    "section": "Feature Engineering",
    "text": "Feature Engineering\n\nCreate Age Groups\n\n\ndata &lt;- data %&gt;%\n  mutate(\n    Age_Group = cut(\n      Age,\n      breaks = c(-1, 14, 64, Inf),\n      labels = c(\"0-14\", \"15-64\", \"65+\"),\n      right = TRUE\n    )\n  )\n\nThe age groups were defined as 0–14, 15–64, and 65+ to align with the standard demographic classification used in population studies and official statistics. These ranges correspond to:\n\n0–14: Young dependents (not in the workforce).\n15–64: Working-age population (economically active group).\n65+: Elderly dependents (retired).\n\n\nCreate Regions\n\nThe Region column is created to group planning areas into broader zones, enabling regional-level analysis, comparison, and visualization. I referred to this website for the regions and planning areas mapping.\n\n# Region mapping table\nregion_mapping &lt;- tibble::tibble(\n  Planning_Area = c(\n    # Central\n    \"Bishan\", \"Bukit Merah\", \"Bukit Timah\", \"Downtown Core\", \"Geylang\", \"Kallang\",\n    \"Marine Parade\", \"Museum\", \"Newton\", \"Novena\", \"Orchard\", \"Outram\",\n    \"Queenstown\", \"River Valley\", \"Rochor\", \"Singapore River\", \"Southern Islands\",\n    \"Tanglin\", \"Toa Payoh\",\n\n    # East\n    \"Bedok\", \"Changi\", \"Pasir Ris\", \"Tampines\",\n\n    # North-East\n    \"Ang Mo Kio\", \"Hougang\", \"Punggol\", \"Sengkang\", \"Serangoon\", \"Seletar\",\n\n    # North\n    \"Mandai\", \"Sembawang\", \"Sungei Kadut\", \"Woodlands\", \"Yishun\",\n\n    # West\n    \"Bukit Batok\", \"Bukit Panjang\", \"Choa Chu Kang\", \"Clementi\", \"Jurong East\",\n    \"Jurong West\", \"Tengah\", \"Western Water Catchment\"\n  ),\n  Region = c(\n    rep(\"Central\", 19),\n    rep(\"East\", 4),\n    rep(\"North-East\", 6),\n    rep(\"North\", 5),\n    rep(\"West\", 8)\n  )\n)\n\n\n# Join with data\ndata &lt;- data %&gt;%\n  left_join(region_mapping, by = \"Planning_Area\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#singapores-population-distribution-and-density",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#singapores-population-distribution-and-density",
    "title": "Take-home Exercise 1 (Part 1)",
    "section": "1. Singapore’s Population Distribution and Density",
    "text": "1. Singapore’s Population Distribution and Density\nThis full visualization provides a multi-layered view of Singapore’s population landscape, highlighting regional totals, planning area distributions, administrative granularity, and Pareto-based breakdowns of population concentration.\nThe process of creating this visualization is as below:\n\nStep 1: Creating 4 individual plots\n\n\nPlot 1: Total population by Region\n\nData is grouped by Region to get total population per region.\nThe regions are sorted in descending order of population.\nA horizontal bar chart is created using geom_col(). Labels showing total population are added with geom_text() using comma formatting. The chart is flipped horizontally using coord_flip(). Set2 color palette is used for a visually distinct fill and label color per region. The plot uses theme_clean() and custom font styling for clarity.\n\nPlot 2: Distribution of Planning Areas’ population by Region\n\nTotal population is aggregated at the Planning Area level, grouped by Region.\nA boxplot is drawn with geom_boxplot() to show the distribution of planning area populations within each region.\nOutliers are highlighted in tomato red, and median values are labeled using stat_summary() for easier interpretation.\n\nPlot 3: Count of Planning Areas and Sub-Zones by Region\n\nn_distinct() is used to count the number of unique planning areas and sub-zones in each region.\nThe data is then reshaped to a long format using pivot_longer() for grouped plotting\nA grouped bar chart is created using geom_col() to compare the count of Planning Areas & Sub-Zones among Regions.\nLabels show exact counts above each bar, with the same color as the bar type.\n\nPlot 4: Regional Population Breakdown by Planning Area\n\nFor each Region, planning areas are ranked by population.\nThen, cumulative population and cumulative percentage for the Pareto curve.\nA scale factor is computed to align the cumulative percentage line on the same y-axis.\nA Pareto chart is created with:\n\nBars representing population by planning area.\nLine and points representing cumulative % scaled to dual y-axis.\nFacets by Region for side-by-side comparisons.\nTop planning area in each non-Central region is labeled.\n\n\n\n\nStep 2: Combining all plots\nThe four plots are combined into one cohesive layout using patchwork:\n\nTop: Bar chart (Plot 1)\nMiddle: Boxplot and grouped bar chart side-by-side (Plots 2 and 3)\nBottom: Faceted Pareto chart (Plot 4)\nRelative heights = c(0.6, 0.6, 1.8) using plot_layout()are adjusted to give the Pareto chart more visual space.\n\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlibrary(scales)\n# Aggregate population by region, planning area, and sub-zone\npop &lt;- data %&gt;%\n  group_by(Region, Planning_Area, Sub_Zone) %&gt;%\n  summarise(total_pop = sum(Population), .groups=\"drop\")\n\n# (Plot 1) Total population by Region\nregion_pop &lt;- pop %&gt;%\n  group_by(Region) %&gt;%\n  summarise(total_pop = sum(total_pop), .groups=\"drop\") %&gt;%\n  arrange(desc(total_pop))\n\n# Create horizontal bar chart\np1 &lt;- ggplot(region_pop, aes(x = reorder(Region, total_pop), y = total_pop, fill = Region)) +\n  geom_col() +\n  geom_text(aes(label = comma(total_pop), color = Region), \n            hjust = -0.1, size = 4, fontface = \"bold\") +\n  coord_flip() #flip to horizontal +\n  scale_y_continuous(labels = comma, expand = expansion(mult = c(0, 0.1))) +\n  labs(title = \"Total Population by Region\", x = \"Region\", y = \"Total Population\") +\n  scale_fill_brewer(palette = \"Set2\") +\n  scale_color_brewer(palette = \"Set2\") +\n  theme_clean() +\n  theme(plot.title = element_text(face = \"bold\"),\n        axis.title = element_text(face = \"bold\"),\n        axis.text  = element_text(face = \"italic\"),\n        legend.position = \"none\")\n\n# (Plot 2) Distribution of Planning‐Area Populations by Region\nbox_data &lt;- pop %&gt;%\n  group_by(Region, Planning_Area) %&gt;%\n  summarise(total_pop = sum(total_pop), .groups = \"drop\")\n\np2 &lt;- ggplot(box_data, aes(x = Region, y = total_pop, fill = Region, color = Region)) +\n  geom_boxplot(\n    width = 0.7,      # thickness of the boxes\n    alpha = 0.3,      # transparency of the boxes\n    outlier.shape = 16, outlier.size = 1.5, outlier.colour=\"tomato\"\n  ) +\n  \n  # add label for the median \n  stat_summary(\n    fun = median,\n    geom = \"text\",\n    aes(label = comma(..y..)),\n    color   = \"black\",\n    size    = 4,\n    vjust   = -0.5 \n  ) +\n  labs(\n    title = \"Planning Area Population Distribution by Region\",\n    x     = \"Region\",\n    y     = \"Planning Area Population\"\n  ) +\n  scale_y_continuous(labels = scales::comma) + \n  theme_clean() +\n  theme(\n    plot.title  = element_text(face = \"bold\"),\n    axis.text   = element_text(face = \"italic\"),\n    legend.position = \"none\"  \n  )\n\n# (Plot 3) Count of Planning Areas & Sub-Zones by Region\nregion_counts &lt;- pop %&gt;%\n  group_by(Region) %&gt;%\n  summarise(\n    Planning_Areas = n_distinct(Planning_Area),\n    Subzones       = n_distinct(Sub_Zone),\n    .groups=\"drop\"\n  )\n\nregion_long &lt;- region_counts %&gt;%\n  pivot_longer(cols = c(Planning_Areas, Subzones),\n               names_to = \"Type\", values_to = \"Count\")\n\np3 &lt;- ggplot(region_long, aes(x = Region, y = Count, fill = Type)) +\n  geom_col(position = \"dodge\") +\n  geom_text(aes(label = Count, color = Type),\n            position = position_dodge(width = 0.9),\n            vjust = -0.3, size = 4, fontface = \"bold\") +\n  labs(title = \"Number of Planning Areas and Subzones by Region\",\n       x = \"Region\", y = \"Count\") +\n  scale_fill_brewer(palette = \"Set2\", name = \"Type\") +\n  scale_color_brewer(palette = \"Set2\") +\n  theme_clean() +\n  theme(plot.title = element_text(face=\"bold\"),\n        axis.title = element_text(face=\"bold\"),\n        axis.text  = element_text(face=\"italic\"))\n\n# (Plot 4) Regional Population Breakdown by Planning Area\npareto_data &lt;- pop %&gt;%\n  group_by(Region, Planning_Area) %&gt;%\n  summarise(total_pop = sum(total_pop), .groups = \"drop\") %&gt;%\n  group_by(Region) %&gt;%\n  arrange(desc(total_pop), .by_group = TRUE) %&gt;%\n  mutate(\n    rank = row_number(),\n    cum_pop = cumsum(total_pop),\n    cum_pct = cum_pop / sum(total_pop),\n    label = comma(total_pop)\n  ) %&gt;%\n  ungroup()\n\n# Scale factor for dual y-axis\nscale_fac &lt;- max(pareto_data$total_pop)\n\n# Pareto chart with facets\np4 &lt;- ggplot(pareto_data, aes(x = reorder(Planning_Area, -total_pop), y = total_pop)) +\n  geom_col(aes(fill = Region), show.legend = FALSE, alpha = 0.8) +\n  geom_line(aes(y = cum_pct * scale_fac, group = 1), color = \"red\", size = 1) +\n  geom_point(aes(y = cum_pct * scale_fac), color = \"red\", size = 2) +\n  geom_text(data = pareto_data %&gt;% filter(rank == 1 & Region != \"Central\"),\n            aes(label = label), vjust = -0.5, size = 3, color = \"red\", fontface=\"bold\") +\n  scale_y_continuous(\n    name = \"Population\",\n    labels = comma,\n    breaks = seq(0, 350000, by = 50000),\n    sec.axis = sec_axis(~ . / scale_fac,\n                        name = \"Cumulative %\",\n                        labels = percent_format(accuracy = 1))\n  ) +\n  facet_wrap(~ Region, scales = \"free_x\") +\n  labs(\n    title = \"Regional Population Breakdown by Planning Area\",\n    x = \"Planning Area\", y = \"Population\"\n  ) +\n  theme_clean() +\n  theme(panel.spacing  = unit(1, \"cm\"),\n        axis.title = element_text(face=\"bold\"),\n        axis.text.x = element_text(angle = 45, hjust = 1))\n\n# Combine all the charts using patchwork\np1 / (p3 | p2) / p4 +\n  plot_layout(heights = c(0.6, 0.6, 1.8) )\n\n\n\n\n\nKey insights from the visualization:\n\nUrban Structure and Planning Complexity Differ Sharply Across Regions\nAlthough the Central region has a total population similar to the North-East (~973K) and West (~942K), it has significantly more planning areas (19) and sub-zones (111), indicating greater land use diversity and functional complexity. This contrasts with the East and North-East, where fewer planning areas serve large residential populations, indicating more concentrated residential zoning. These differences affect how urban policies, zoning regulations, and public services must be tailored to fit the region’s functional layout.\nPopulation concentration varies by Region\nThe boxplot and Pareto charts together show significant intra-regional variation: East and North have the widest spread, from very low to high planning area populations, while Central, North-East and East have more uniform residential distribution. For instance, Tampines and Bedok alone comprise nearly 60% of the East’s total population.\nThis uneven load places infrastructure and service pressure on a few high-density zones, requiring targeted investments in transport, schools, and healthcare facilities. Meanwhile, lower-population areaspresent opportunities for future development or re-purposing."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#demographic-pressure-and-age-structure-across-singapores-planning-areas",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#demographic-pressure-and-age-structure-across-singapores-planning-areas",
    "title": "Take-home Exercise 1 (Part 1)",
    "section": "2. Demographic Pressure and Age Structure Across Singapore’s Planning Areas",
    "text": "2. Demographic Pressure and Age Structure Across Singapore’s Planning Areas\nThis chart aims to visualize the age composition across regions and assess the economic burden of dependents by comparing dependency ratios across planning areas in Singapore.\nThe process of creating this visualization is as below:\n\nStep 1: Data Preparation – Age Group Aggregation\n\n\nThe population data is grouped by Region, Planning Area, and Age Group.\nThe three broad age categories (children: 0-14, working-age: 15-64 elderly: 65+) are explicitly ordered to ensure correct stacking in charts.\n\n\nStep 2: Creating 2 individual plots\n\n\nPlot 1: Population Structure by Region\n\nFirst, aggregate age-group data at the regional level, then computes the proportion of each age group relative to the region’s total population.\nA stacked bar chart is then created using geom_bar(), with Region as x-axis, Proportion of each group as y-axis, and fill color based on age group.\nEach bar segment is labeled with a percentage for clarity.\nA custom theme (theme_gdocs) and Set2 color palette are used for visual appeal.\n\nPlot 2: Dependency Ratio by Planning Area\n\nThe dataset is reshaped from long to wide format to calculate dependency ratios:\n\nFormula: (children + elderly) / working-age\nA higher ratio means greater economic burden on the working population.\n\nA dot plot is created using geom_point to show the dependency ratio by planning area, sorted in descending order.\n\nPlanning areas with the highest economic burden are shown at the top.\nTitles and subtitle communicate economic implications of aging or youth-heavy populations.\n\n\n\n\nCombining 2 charts into 1 composite plot\n\n\nThe two plots are arranged side by side using the patchwork package.\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Aggregate population data by age group\n\npop_by_age &lt;- data %&gt;%\n  group_by(Region, Planning_Area, Age_Group) %&gt;%\n  summarise(Population = sum(Population), .groups = \"drop\") %&gt;%\n  mutate(Age_Group = factor(Age_Group, levels = c(\"0-14\", \"15-64\", \"65+\")))\n\n# Plot 1 - Population Structure by Region \n\n# Aggregate for regional proportion\nregion_age_prop &lt;- pop_by_age %&gt;%\n  group_by(Region, Age_Group) %&gt;%\n  summarise(Population = sum(Population), .groups = \"drop\") %&gt;%\n  group_by(Region) %&gt;%\n  mutate(Proportion = Population / sum(Population))\n\np1 &lt;- ggplot(region_age_prop, aes(\n  x = Region,\n  y = Proportion,\n  fill = Age_Group\n)) +\n  geom_bar(stat = \"identity\") +\n  geom_text(aes(label = scales::percent(Proportion, accuracy = 0.1)),\n            position = position_stack(vjust = 0.5),  # center within each segment\n            size = 6, color = \"white\") +\n  labs(\n    title = \"Population Structure by Region\",\n    x = \"Region\", y = \"Proportion\"\n  ) +\n  scale_y_continuous(labels = scales::percent) +\n  scale_fill_brewer(palette = \"Set2\") + \n  theme_gdocs() + \n  theme(plot.title = element_text(size = 18, face = \"bold\", color = \"blue\"), \n        axis.title = element_text(face = \"bold\", color = \"blue\"),\n        axis.text = element_text(size = 13, face = \"bold\"))\n\n\n# Plot 2 - Dependency Ratio by Planning Area\n\ndependency_df &lt;- pop_by_age %&gt;%\n  pivot_wider(names_from = Age_Group, values_from = Population, values_fill = 0) %&gt;%\n  filter(`15-64` &gt; 0) %&gt;%\n  mutate(dependency_ratio = (`0-14` + `65+`) / `15-64`) %&gt;%\n  arrange(desc(dependency_ratio))\n\np2 &lt;- ggplot(dependency_df, aes(x = dependency_ratio, y = reorder(Planning_Area, dependency_ratio))) +\n  geom_point(color = \"tomato\", size = 3) +\n  labs(\n    title = \"Dependency Ratio by Planning Area\",\n    subtitle = \"Higher ratio = more economic pressure\",\n    x = \"Dependency Ratio\", y = \"Planning Area\"\n  ) + \n  theme_gdocs() +\n  theme(\n    plot.title = element_text(size= 18, face = \"bold\", color = \"blue\"),\n    plot.subtitle = element_text(size = 15, face = \"italic\", color = \"red\"),\n    axis.title = element_text(face = \"bold\", color=\"blue\"), \n    axis.text = element_text(face = \"bold\")) \n\n# Combine into a composite figure \n\n(p1 | p2) +\n  plot_annotation(tag_levels = \"I\")\n\n\n\n\n\nKey insights from the visualization:\n\nAge structure varies across regions\n\n\nThe working-age group (15–64) dominates across all regions but is highest in the North (71.3%), suggesting a strong labor base.\nThe elderly population (65+) is most prominent in the Central region (21.6%), indicating an aging population and possibly a concentration of older, long-established residential areas. In contrast, the North-East and West have higher proportions of children (0–14), around 15%, suggesting younger family populations and possibly newer housing developments attractive to younger households.\n\n\nDependency Ratios Vary Greatly by Planning Area\n\n\nOutram has the highest dependency ratio (over 0.6), followed closely by Bukit Merah and Ang Mo Kio, indicating that there are more than 60 dependents for every 100 working-age individuals. This suggests greater economic pressure in these areas. In contrast, Seletar, Museum, and Downtown Core have very low dependency ratios (below 0.2), reflecting either a predominantly working-age population or limited residential presence.\nThe Central region not only has the highest share of elderly but also includes multiple planning areas like Outram, Bukit Merah, and Marine Parade with very high dependency ratios. This combination implies that Central Singapore may face greater healthcare, caregiving, and aging-related infrastructure needs than other regions."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#singapores-sex-ratio-by-planning-area",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#singapores-sex-ratio-by-planning-area",
    "title": "Take-home Exercise 1 (Part 1)",
    "section": "3. Singapore’s Sex Ratio by Planning Area",
    "text": "3. Singapore’s Sex Ratio by Planning Area\nThis chart visually compares the sex ratios across Singapore’s planning areas, helping to identify areas with gender imbalances that could have social, economic, or policy implications.\nThe process of creating this plot is as below:\n\nStep 1: Data Preparation: Calculating Sex Ratio by Planning Area\n\n\nThe dataset is grouped by Region and Planning Area.\nFor each planning area, the total population is calculated.\nThe sex ratio is computed as the number of males divided by the number of females.\n\nA ratio &gt; 1 means more males than females.\nA ratio &lt; 1 means more females than males.\n\n\n\nStep 2: Chart Construction: Lollipop Chart\n\n\nThe planning areas are reordered based on their sex ratios, so the chart visually compares areas from lowest to highest ratio.\nPoints and segments are colored by Region to show regional grouping.\nUsing geom_segment() , a horizontal line (stem) is drawn from a baseline of 1 (equal male-female ratio) to each area’s actual sex ratio. A dot (head) is placed at the actual sex ratio value to complete the lollipop visual.\nFinally, the plot is flipped horizontally using coord_flip() , placing planning areas on the y-axis for easier label readability.\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 1. Compute sex ratio per Planning Area\nlollipop_feats &lt;- data %&gt;%\n  group_by(Region, Planning_Area) %&gt;%\n  summarise(\n    total_pop  = sum(Population),\n    sex_ratio  = sum(Population[Sex == \"Males\"]) /\n                 sum(Population[Sex == \"Females\"]),\n    .groups = \"drop\"\n  )\n\nggplot(lollipop_feats, aes(\n    x = reorder(Planning_Area, sex_ratio), \n    y = sex_ratio,\n    color = Region\n  )) +\n  geom_segment(aes(xend = Planning_Area, y = 1, yend = sex_ratio),\n               size = 0.5) +\n  geom_point(size = 3) +\n  coord_flip() +\n  labs(\n    title = \"Sex Ratio by Planning Area\",\n    x     = \"Planning Area\",\n    y     = \"Males per Females\"\n  ) +\n  theme_clean()\n\n\n\n\n\nKey insights from the visualization\n\nMost planning areas have a balanced or female-skewed population. Notable areas with significantly lower male-to-female ratios include: Seletar, Orchard, and Western Water Catchment, with ratios below 0.8, indicating more than 20% fewer males than females.\nOnly a handful of planning areas have sex ratios above 1.0, indicating more males than females: Sungei Kadut has the highest ratio, significantly above 1.1, suggesting it may host male-dominated populations. Changi and Woodlands also have slightly higher male-to-female ratios, which could be influenced by military facilities, and industrial zones."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on Exercise 03",
    "section": "",
    "text": "pacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse) \n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\n\n\n\n\ntooltip_css &lt;- \"background-color:white; #&lt;&lt;\nfont-style:bold; color:black;\" #&lt;&lt;\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)                                        \n\n\n\n\n\n\n\n\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)                                        \n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\n\n\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)                                        \n\n\n\n\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))\n\n\n\n\n\n\n\n\n\n\n\n\nDT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#getting-started",
    "title": "Hands-on Exercise 03",
    "section": "",
    "text": "pacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse) \n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation---ggiraph-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation---ggiraph-methods",
    "title": "Hands-on Exercise 03",
    "section": "",
    "text": "p &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\n\n\n\n\ntooltip_css &lt;- \"background-color:white; #&lt;&lt;\nfont-style:bold; color:black;\" #&lt;&lt;\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)                                        \n\n\n\n\n\n\n\n\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)                                        \n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\n\n\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)                                        \n\n\n\n\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation---plotly-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation---plotly-methods",
    "title": "Hands-on Exercise 03",
    "section": "",
    "text": "plot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation---crosstalk-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation---crosstalk-methods",
    "title": "Hands-on Exercise 03",
    "section": "",
    "text": "DT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#getting-started-1",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#getting-started-1",
    "title": "Hands-on Exercise 03",
    "section": "Getting started",
    "text": "Getting started\n\nInstall packages\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)\n\n\n\nImport data\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate(across(col, as.factor)) %&gt;%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#animated-data-visualisation-gganimate-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#animated-data-visualisation-gganimate-methods",
    "title": "Hands-on Exercise 03",
    "section": "Animated Data Visualisation: gganimate methods",
    "text": "Animated Data Visualisation: gganimate methods\n\nBuilding a static population bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') \n\n\n\n\n\n\n\n\n\n\nBuilding the animated bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#animated-data-visualisation-plotly",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#animated-data-visualisation-plotly",
    "title": "Hands-on Exercise 03",
    "section": "Animated Data Visualisation: plotly",
    "text": "Animated Data Visualisation: plotly\n\nBuilding an animated bubble plot: ggplotly() method\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\nTurn off legends\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)\n\n\n\n\n\n\n\nBuilding an animated bubble plot: plot_ly() method\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#installing-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#installing-and-launching-r-packages",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "exam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-simple-bar-chart",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-simple-bar-chart",
    "title": "Hands-on Exercise 1",
    "section": "Plotting a simple bar chart",
    "text": "Plotting a simple bar chart\n\nggplot(data = exam_data,\n       aes(x=RACE)) +\n  geom_bar()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-dot-plot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-dot-plot",
    "title": "Hands-on Exercise 1",
    "section": "Plotting a dot plot",
    "text": "Plotting a dot plot\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\n\n\n\n\nTurn off the y-axis and add binwidth argument\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-histogram",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-histogram",
    "title": "Hands-on Exercise 1",
    "section": "Plotting a histogram",
    "text": "Plotting a histogram\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()       \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\nChange number of bins, fill, and outline color\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")  \n\n\n\n\n\n\n\n\nChange aes() for sub-group\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-kernel-density-estimate",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-kernel-density-estimate",
    "title": "Hands-on Exercise 1",
    "section": "Plotting kernel density estimate",
    "text": "Plotting kernel density estimate\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()           \n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-boxplot",
    "title": "Hands-on Exercise 1",
    "section": "Plotting a boxplot",
    "text": "Plotting a boxplot\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-notched-plot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-notched-plot",
    "title": "Hands-on Exercise 1",
    "section": "Plotting a notched plot",
    "text": "Plotting a notched plot\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-violin-plot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-violin-plot",
    "title": "Hands-on Exercise 1",
    "section": "Plotting a violin plot",
    "text": "Plotting a violin plot\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-scatterplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-scatterplot",
    "title": "Hands-on Exercise 1",
    "section": "Plotting a scatterplot",
    "text": "Plotting a scatterplot\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#combined-plot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#combined-plot",
    "title": "Hands-on Exercise 1",
    "section": "Combined plot",
    "text": "Combined plot\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#add-mean-value",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#add-mean-value",
    "title": "Hands-on Exercise 1",
    "section": "Add mean value",
    "text": "Add mean value\nstat_summary( ) method\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun = \"mean\",         \n               colour =\"red\",        \n               size=4)               \n\n\n\n\n\n\n\n\ngeom( ) method\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour=\"red\",          \n             size=4)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#add-best-fit-curve",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#add-best-fit-curve",
    "title": "Hands-on Exercise 1",
    "section": "Add best fit curve",
    "text": "Add best fit curve\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_wrap-method",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_wrap-method",
    "title": "Hands-on Exercise 1",
    "section": "facet_wrap method",
    "text": "facet_wrap method\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_grid-method",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_grid-method",
    "title": "Hands-on Exercise 1",
    "section": "facet_grid method",
    "text": "facet_grid method\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#flip-horizontal-bar-chart-into-vertical-bar-chart",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#flip-horizontal-bar-chart-into-vertical-bar-chart",
    "title": "Hands-on Exercise 1",
    "section": "Flip horizontal bar chart into vertical bar chart",
    "text": "Flip horizontal bar chart into vertical bar chart\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#change-y--and-x-axis-range",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#change-y--and-x-axis-range",
    "title": "Hands-on Exercise 1",
    "section": "Change y- and x-axis range",
    "text": "Change y- and x-axis range\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This website showcases my coursework from the Visual Analytics and Applications module during my Master’s program at Singapore Management University."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on_Ex02",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse) \n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-loading-the-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-loading-the-required-libraries",
    "title": "Hands-on_Ex02",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-the-data",
    "title": "Hands-on_Ex02",
    "section": "",
    "text": "exam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#annotation-challenge-when-having-large-number-of-data-points",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#annotation-challenge-when-having-large-number-of-data-points",
    "title": "Hands-on_Ex02",
    "section": "Annotation challenge when having large number of data points",
    "text": "Annotation challenge when having large number of data points\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#solution-ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#solution-ggrepel",
    "title": "Hands-on_Ex02",
    "section": "Solution: ggrepel",
    "text": "Solution: ggrepel\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggplot2-built-in-themes",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggplot2-built-in-themes",
    "title": "Hands-on_Ex02",
    "section": "ggplot2 built-in themes",
    "text": "ggplot2 built-in themes\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Maths scores\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggtheme-package-extra-themes-scales-and-geoms-for-ggplot2",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggtheme-package-extra-themes-scales-and-geoms-for-ggplot2",
    "title": "Hands-on_Ex02",
    "section": "ggtheme package: Extra Themes, Scales and Geoms for ‘ggplot2’",
    "text": "ggtheme package: Extra Themes, Scales and Geoms for ‘ggplot2’\nExample 1: The Economist theme\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\n\n\n\n\nExample 2: Stata theme\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_stata()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#hrbthems-package-additional-themes-theme-components-and-utilities-for-ggplot2",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#hrbthems-package-additional-themes-theme-components-and-utilities-for-ggplot2",
    "title": "Hands-on_Ex02",
    "section": "hrbthems package: Additional Themes, Theme Components and Utilities for ‘ggplot2’",
    "text": "hrbthems package: Additional Themes, Theme Components and Utilities for ‘ggplot2’\n\naxis_title_size: set the font size of the axis title\nbase_size: set base font size for most text elements in the plot, including axis tick labels, legend, etc.\ngrid: indicate whether there are gridlines in the plot or not\nbase_family: specify which font is used\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\",\n              base_family = \"sans\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#create-individual-graph",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#create-individual-graph",
    "title": "Hands-on_Ex02",
    "section": "Create individual graph",
    "text": "Create individual graph\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combine-two-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combine-two-ggplot2-graphs",
    "title": "Hands-on_Ex02",
    "section": "Combine two ggplot2 graphs",
    "text": "Combine two ggplot2 graphs\n\np1 + p2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combine-multiple-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combine-multiple-ggplot2-graphs",
    "title": "Hands-on_Ex02",
    "section": "Combine multiple ggplot2 graphs",
    "text": "Combine multiple ggplot2 graphs\n\n“/” operator to stack two ggplot2 graphs\n“|” operator to place the plots beside each other\n“()” operator the define the sequence of the plotting\n\n\n(p1 / p2) | p3\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#create-a-composite-figure-with-tag",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#create-a-composite-figure-with-tag",
    "title": "Hands-on_Ex02",
    "section": "Create a composite figure with tag",
    "text": "Create a composite figure with tag\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#create-figure-with-insert",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#create-figure-with-insert",
    "title": "Hands-on_Ex02",
    "section": "Create figure with insert",
    "text": "Create figure with insert\n\nPlace one or several plots or graphic elements freely on top or below another plot.\n\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combine-patchwork-and-ggtheme",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combine-patchwork-and-ggtheme",
    "title": "Hands-on_Ex02",
    "section": "Combine patchwork and ggtheme",
    "text": "Combine patchwork and ggtheme\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#boxplot-science-score-distribution-by-class",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#boxplot-science-score-distribution-by-class",
    "title": "Hands-on_Ex02",
    "section": "1. Boxplot: Science Score Distribution by Class",
    "text": "1. Boxplot: Science Score Distribution by Class\n\nmedian_data &lt;- exam_data %&gt;%\n  group_by(CLASS) %&gt;%\n  summarise(median_science = median(SCIENCE, na.rm = TRUE))\n\np1 &lt;- ggplot(exam_data, aes(x = CLASS, y = SCIENCE)) +\n  geom_boxplot(outlier.shape = 16, outlier.size = 1.2, width = 0.7, position = position_dodge(0.8)) +\n  scale_fill_brewer(palette = \"Set2\") +\n  geom_text_repel(data = median_data, \n                  aes(x = CLASS, y = median_science, label = round(median_science, 1)),\n                   fontface = \"bold\",\n                   size = 3,\n                   nudge_y = 0.5) +  # Nudge to avoid overlap\n  theme_solarized_2() +\n  labs(title = \"Boxplot: Science Score by Class\", x = \"Class\", y = \"Science Score\")\n\np1"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#dot-plot-science-score-distribution-by-race",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#dot-plot-science-score-distribution-by-race",
    "title": "Hands-on_Ex02",
    "section": "2. Dot Plot: Science Score Distribution by Race",
    "text": "2. Dot Plot: Science Score Distribution by Race\n\np2 &lt;- ggplot(exam_data, aes(x = RACE, y = SCIENCE, fill = RACE)) +\n  geom_dotplot(\n    binaxis = 'y',\n    stackdir = 'center',\n    dotsize = 0.7,\n    binwidth = 2,         # Try 1 or 2 based on your data's spread\n    method = 'dotdensity'\n  ) +\n  labs(\n    title = \"Dot Plot: Science Score by Race\",\n    x = \"Race\",\n    y = \"Science Score\"\n  ) +\n  scale_fill_brewer(palette = \"Set1\") +\n  theme_clean() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1, size = 12),\n    axis.text.y = element_text(size = 11),\n    plot.title = element_text(size = 15, face = \"bold\", hjust = 0.5),\n    legend.position = \"none\"   # Remove legend since color matches x-axis\n  )\n\np2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#pie-chart-race-proportion-within-each-class",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#pie-chart-race-proportion-within-each-class",
    "title": "Hands-on_Ex02",
    "section": "3. Pie Chart: Race proportion within each Class",
    "text": "3. Pie Chart: Race proportion within each Class\n\nlibrary(scales)\n\n\nAttaching package: 'scales'\n\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\npie_data &lt;- exam_data %&gt;%\n  group_by(CLASS, RACE) %&gt;%\n  summarise(count = n(), .groups = \"drop\") %&gt;%\n  group_by(CLASS) %&gt;%\n  mutate(\n    prop = count/sum(count),\n    percent = percent(prop, accuracy = 1),\n    lab = ifelse(prop &gt; 0.20, percent, \"\")  # only show label if &gt;20% for readability\n  )\n\np3 &lt;- ggplot(pie_data, aes(x = \"\", y = prop, fill = RACE)) +\n  geom_col(width = 1, color = \"white\", show.legend = TRUE) +  # white borders\n  coord_polar(theta = \"y\") +\n  facet_wrap(~CLASS, ncol = 3) +\n  geom_text(\n    aes(label = lab),\n    position = position_stack(vjust = 0.6),\n    size = 2.5,\n    color = \"black\"\n  ) +\n  scale_fill_brewer(palette = \"Pastel1\") +\n  labs(title = \"Pie Chart: Race Proportion by Class\", x = NULL, y = NULL, fill = \"Race\") +\n  theme_excel(base_size = 10) +\n  theme(\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    panel.grid = element_blank(),\n    strip.text = element_text(size = 10, face = \"bold\"),\n    plot.title = element_text(size = 12, face = \"bold\", hjust = 0.5)\n  )\n\np3"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#raincloud-plot-score-distribution-by-subject-malay-students",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#raincloud-plot-score-distribution-by-subject-malay-students",
    "title": "Hands-on_Ex02",
    "section": "4. Raincloud plot: Score Distribution by Subject (Malay Students)",
    "text": "4. Raincloud plot: Score Distribution by Subject (Malay Students)\n\nlibrary(dplyr)\n\nmalay_data &lt;- exam_data %&gt;%\n  filter(RACE == \"Malay\")\n\nlibrary(tidyr)\n\nmalay_long &lt;- malay_data %&gt;%\n  pivot_longer(\n    cols = c(ENGLISH, MATHS, SCIENCE),\n    names_to = \"Subject\",\n    values_to = \"Score\"\n  )\n\nlibrary(ggplot2)\nlibrary(ggdist)\n\nggplot(malay_long, aes(x = Score, y = Subject, fill = Subject, color = Subject)) +\n  ggdist::stat_halfeye(\n    adjust = 0.6,\n    width = 0.7,\n    .width = 0,\n    justification = -0.2,\n    point_color = NA,\n    alpha = 0.5\n  ) +\n  geom_boxplot(\n    width = 0.15,\n    outlier.shape = NA,\n    alpha = 0.7,\n    position = position_nudge(x = 0.15)\n  ) +\n  geom_jitter(\n    width = 0.12,\n    size = 1.6,\n    alpha = 0.5\n  ) +\n  labs(\n    title = \"Raincloud Plot: Scores by Subject (Malay Students)\",\n    x = \"Score\",\n    y = \"Subject\"\n  ) +\n  scale_fill_brewer(palette = \"Set2\") +\n  scale_color_brewer(palette = \"Set2\") +\n  theme_clean()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608 Visual Analytics and Applications",
    "section": "",
    "text": "Welcome to my portfolio for ISSS608 Visual Analytics and Applications at Singapore Management University!"
  },
  {
    "objectID": "index.html#about-me",
    "href": "index.html#about-me",
    "title": "ISSS608 Visual Analytics and Applications",
    "section": "👨‍💻 About Me",
    "text": "👨‍💻 About Me\nHi, I’m Quynh Trang Do. I’m a Master’s student in Data Science & Analytics, passionate about leveraging data to generate insights and create real business value.\nConnect with me on LinkedIn!"
  },
  {
    "objectID": "index.html#check-out-my-latest-work",
    "href": "index.html#check-out-my-latest-work",
    "title": "ISSS608 Visual Analytics and Applications",
    "section": "✨ Check Out My Latest Work!",
    "text": "✨ Check Out My Latest Work!\n\n\n\nProject\nDescription\n\n\n\n\nHands-on Exercise 1\nA Layered Grammar of Graphics: ggplot2 methods\n\n\nHands-on Exercise 2\nBeyond ggplot2 Fundamentals"
  }
]