[
  {
    "objectID": "VAST/MC1.html",
    "href": "VAST/MC1.html",
    "title": "In-class Excercise 5: MC1 Preparation",
    "section": "",
    "text": "pacman::p_load(tidyverse, jsonlite, SmartEDA,\n                 tidygraph, ggraph)"
  },
  {
    "objectID": "VAST/MC1.html#inspect-structure",
    "href": "VAST/MC1.html#inspect-structure",
    "title": "In-class Excercise 5: MC1 Preparation",
    "section": "Inspect structure",
    "text": "Inspect structure\n\nstr(kg, max.level=1)\n\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi TRUE\n $ graph     :List of 2\n $ nodes     :'data.frame': 17412 obs. of  10 variables:\n $ links     :'data.frame': 37857 obs. of  4 variables:"
  },
  {
    "objectID": "VAST/MC1.html#extract-and-inspect",
    "href": "VAST/MC1.html#extract-and-inspect",
    "title": "In-class Excercise 5: MC1 Preparation",
    "section": "Extract and inspect",
    "text": "Extract and inspect\n\nnodes_tbl &lt;- as_tibble(kg$nodes)\nedges_tbl &lt;- as_tibble(kg$links)"
  },
  {
    "objectID": "VAST/MC1.html#step-1-mapping-from-node-id-to-row-index",
    "href": "VAST/MC1.html#step-1-mapping-from-node-id-to-row-index",
    "title": "In-class Excercise 5: MC1 Preparation",
    "section": "Step 1: Mapping from node id to row index",
    "text": "Step 1: Mapping from node id to row index\n\nid_map &lt;- tibble(id = nodes_tbl$id,\n                 index = seq_len(nrow(nodes_tbl)))"
  },
  {
    "objectID": "VAST/MC1.html#step-2-map-source-and-target-ids-to-row-indices",
    "href": "VAST/MC1.html#step-2-map-source-and-target-ids-to-row-indices",
    "title": "In-class Excercise 5: MC1 Preparation",
    "section": "Step 2: Map source and target IDs to row indices",
    "text": "Step 2: Map source and target IDs to row indices\n\nedges_tbl &lt;- edges_tbl %&gt;%\n  left_join(id_map, by = c(\"source\" = \"id\")) %&gt;%\n  rename(from = index) %&gt;%\n  left_join(id_map, by = c(\"target\" = \"id\")) %&gt;%\n  rename(to = index)"
  },
  {
    "objectID": "VAST/MC1.html#step-3-filter-out-any-unmatched-invalid-edges",
    "href": "VAST/MC1.html#step-3-filter-out-any-unmatched-invalid-edges",
    "title": "In-class Excercise 5: MC1 Preparation",
    "section": "Step 3: Filter out any unmatched (invalid) edges",
    "text": "Step 3: Filter out any unmatched (invalid) edges\n\nedges_tbl &lt;- edges_tbl %&gt;%\n  filter(!is.na(from), !is.na(to))"
  },
  {
    "objectID": "VAST/MC1.html#step-4-create-the-graph",
    "href": "VAST/MC1.html#step-4-create-the-graph",
    "title": "In-class Excercise 5: MC1 Preparation",
    "section": "Step 4: Create the graph",
    "text": "Step 4: Create the graph\n\ngraph &lt;- tbl_graph(nodes = nodes_tbl,\n                   edges = edges_tbl,\n                   directed = kg$directed)"
  },
  {
    "objectID": "VAST/MC1.html#visualize-the-knowledge-graph",
    "href": "VAST/MC1.html#visualize-the-knowledge-graph",
    "title": "In-class Excercise 5: MC1 Preparation",
    "section": "Visualize the knowledge graph",
    "text": "Visualize the knowledge graph\n\nset.seed(1234)"
  },
  {
    "objectID": "VAST/MC1.html#visualize-the-whole-graph",
    "href": "VAST/MC1.html#visualize-the-whole-graph",
    "title": "In-class Excercise 5: MC1 Preparation",
    "section": "Visualize the whole graph",
    "text": "Visualize the whole graph\n\nggraph(graph, layout=\"fr\") +\n  geom_edge_link(alpha=0.3, \n                 colour = \"gray\") +\n  geom_node_point(aes(color = `Node Type`), size = 4) +\n  geom_node_text(aes(label=name),\n                 repel=TRUE,\n                 size = 2.5) +\n  theme_void()"
  },
  {
    "objectID": "VAST/MC1.html#visualize-subset",
    "href": "VAST/MC1.html#visualize-subset",
    "title": "In-class Excercise 5: MC1 Preparation",
    "section": "Visualize subset",
    "text": "Visualize subset\n\nStep 1: filter edges to only “Memberof”\n\ngraph_memberof &lt;- graph %&gt;%\n  activate(edges) %&gt;%\n  filter(`Edge Type` == \"MemberOf\")\n\n\n\nStep 2: Extract only connected nodes\n\nused_node_indices &lt;- graph_memberof %&gt;%\n  activate(edges) %&gt;%\n  as_tibble() %&gt;%\n  select(from, to) %&gt;%\n  unlist() %&gt;%\n  unique()\n\n\n\nStep 3: Keep only those nodes\n\ngraph_memberof &lt;- graph_memberof %&gt;%\n  activate(nodes) %&gt;%\n  mutate(row_id = row_number()) %&gt;%\n  filter(row_id %in% used_node_indices) %&gt;%\n  select(-row_id) \n\n\n\nPlot the sub-graph\n\nggraph(graph_memberof, layout = \"fr\") +\n  geom_edge_link(alpha = 0.5, \n                 colour = \"gray\") +\n  geom_node_point(aes(color = `Node Type`), size = 1) +\n  geom_node_text(aes(label=name),\n                 repel=TRUE,\n                 size = 2.5) +\n  theme_void()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-home Assignment 2",
    "section": "",
    "text": "In this exercise, I will tackle Question 2 from Mini-Challenge 3 of the VAST Challenge 2025.\n\nQuestion 2: Clepper has noticed that people often communicate with (or about) the same people or vessels, and that grouping them together may help with the investigation. Use visual analytics to help Clepper understand and explore the interactions and relationships between vessels and people in the knowledge graph. Are there groups that are more closely associated? If so, what are the topic areas that are predominant for each group?"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#load-necessary-packages",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#load-necessary-packages",
    "title": "Take-home Assignment 2",
    "section": "3.1. Load necessary packages",
    "text": "3.1. Load necessary packages\n\n\nCode\npacman::p_load(tidyverse, jsonlite, dplyr, igraph,\n               tidygraph, ggraph, scales, visNetwork,\n               SmartEDA, widyr, ggforce, tidytext)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#import-data",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#import-data",
    "title": "Take-home Assignment 2",
    "section": "3.2. Import data",
    "text": "3.2. Import data\n\nImport data\n\n\nCode\nMC3 &lt;- fromJSON(\"data/MC3_graph.json\")\nMC3_schema &lt;- fromJSON(\"data/MC3_schema.json\")\n\n\n\n\nQuick check on the imported data\n\n\nCode\nglimpse(MC3)\n\n\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi FALSE\n $ graph     :List of 4\n  ..$ mode        : chr \"static\"\n  ..$ edge_default: Named list()\n  ..$ node_default: Named list()\n  ..$ name        : chr \"VAST_MC3_Knowledge_Graph\"\n $ nodes     :'data.frame': 1159 obs. of  31 variables:\n  ..$ type             : chr [1:1159] \"Entity\" \"Entity\" \"Entity\" \"Entity\" ...\n  ..$ label            : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ name             : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ sub_type         : chr [1:1159] \"Person\" \"Person\" \"Person\" \"Person\" ...\n  ..$ id               : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ timestamp        : chr [1:1159] NA NA NA NA ...\n  ..$ monitoring_type  : chr [1:1159] NA NA NA NA ...\n  ..$ findings         : chr [1:1159] NA NA NA NA ...\n  ..$ content          : chr [1:1159] NA NA NA NA ...\n  ..$ assessment_type  : chr [1:1159] NA NA NA NA ...\n  ..$ results          : chr [1:1159] NA NA NA NA ...\n  ..$ movement_type    : chr [1:1159] NA NA NA NA ...\n  ..$ destination      : chr [1:1159] NA NA NA NA ...\n  ..$ enforcement_type : chr [1:1159] NA NA NA NA ...\n  ..$ outcome          : chr [1:1159] NA NA NA NA ...\n  ..$ activity_type    : chr [1:1159] NA NA NA NA ...\n  ..$ participants     : int [1:1159] NA NA NA NA NA NA NA NA NA NA ...\n  ..$ thing_collected  :'data.frame':   1159 obs. of  2 variables:\n  .. ..$ type: chr [1:1159] NA NA NA NA ...\n  .. ..$ name: chr [1:1159] NA NA NA NA ...\n  ..$ reference        : chr [1:1159] NA NA NA NA ...\n  ..$ date             : chr [1:1159] NA NA NA NA ...\n  ..$ time             : chr [1:1159] NA NA NA NA ...\n  ..$ friendship_type  : chr [1:1159] NA NA NA NA ...\n  ..$ permission_type  : chr [1:1159] NA NA NA NA ...\n  ..$ start_date       : chr [1:1159] NA NA NA NA ...\n  ..$ end_date         : chr [1:1159] NA NA NA NA ...\n  ..$ report_type      : chr [1:1159] NA NA NA NA ...\n  ..$ submission_date  : chr [1:1159] NA NA NA NA ...\n  ..$ jurisdiction_type: chr [1:1159] NA NA NA NA ...\n  ..$ authority_level  : chr [1:1159] NA NA NA NA ...\n  ..$ coordination_type: chr [1:1159] NA NA NA NA ...\n  ..$ operational_role : chr [1:1159] NA NA NA NA ...\n $ edges     :'data.frame': 3226 obs. of  5 variables:\n  ..$ id         : chr [1:3226] \"2\" \"3\" \"5\" \"3013\" ...\n  ..$ is_inferred: logi [1:3226] TRUE FALSE TRUE TRUE TRUE TRUE ...\n  ..$ source     : chr [1:3226] \"Sam\" \"Sam\" \"Sam\" \"Sam\" ...\n  ..$ target     : chr [1:3226] \"Relationship_Suspicious_217\" \"Event_Communication_370\" \"Event_Assessment_600\" \"Relationship_Colleagues_430\" ...\n  ..$ type       : chr [1:3226] NA \"sent\" NA NA ...\n\n\n\n\nExtract the node and edge tables\n\n\nCode\nmc3_nodes &lt;- as_tibble(MC3$nodes)\nmc3_edges &lt;- as_tibble(MC3$edges)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#for-nodes",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#for-nodes",
    "title": "Take-home Assignment 2",
    "section": "4.1. For nodes",
    "text": "4.1. For nodes\nThe code chunk below is used to convert values in id field into character data type, exclude records with ID value are NA, exclude records with similar ID values, exclude thing_collected field, and save the cleaned tibble dataframe into a new tibble datatable called mc3_nodes_cleaned.\n\n\nCode\nmc3_nodes_cleaned &lt;- mc3_nodes %&gt;%\n  mutate(id = as.character(id)) %&gt;%\n  filter(!is.na(id)) %&gt;%\n  distinct(id, .keep_all = TRUE) %&gt;%\n  select(-thing_collected)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#for-edges",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#for-edges",
    "title": "Take-home Assignment 2",
    "section": "4.2. For edges",
    "text": "4.2. For edges\nThe code chunk below is used to rename source and target fields to from_id and to_id respectively, convert values in from_id and to_id fields to character data type, exclude values in from_id and to_id which not found in the id field of mc3_nodes_cleaned, exclude records whereby from_id and/or to_id values are missing, and save the cleaned tibble dataframe and called it mc3_edges_cleaned.\n\n\nCode\nmc3_edges_cleaned &lt;- mc3_edges %&gt;%\n  rename(from_id = source, \n         to_id = target) %&gt;%\n  mutate(across(c(from_id, to_id), \n                as.character)) %&gt;%\n  filter(from_id %in% mc3_nodes_cleaned$id, \n         to_id %in% mc3_nodes_cleaned$id) %&gt;%\n  filter(!is.na(from_id), !is.na(to_id))\n\n\nNext, create mapping of character id in mc3_nodes_cleaned to row index.\n\n\nCode\nnode_index_lookup &lt;- mc3_nodes_cleaned %&gt;%\n  mutate(.row_id = row_number()) %&gt;%\n  select(id, .row_id)\n\n\nNext, join and convert from_id and to_id to integer indices. At the same time, drop rows with unmatched nodes.\n\n\nCode\nmc3_edges_indexed &lt;- mc3_edges_cleaned %&gt;%\n  left_join(node_index_lookup, \n            by = c(\"from_id\" = \"id\")) %&gt;%\n  rename(from = .row_id) %&gt;%\n  left_join(node_index_lookup, \n            by = c(\"to_id\" = \"id\")) %&gt;%\n  rename(to = .row_id) %&gt;%\n  select(from, to, is_inferred, type) %&gt;%\n  filter(!is.na(from) & !is.na(to))  \n\n\nNext, subset nodes to only those referenced by edges.\n\n\nCode\nused_node_indices &lt;- sort(\n  unique(c(mc3_edges_indexed$from, \n           mc3_edges_indexed$to)))\n\nmc3_nodes_final &lt;- mc3_nodes_cleaned %&gt;%\n  slice(used_node_indices) %&gt;%\n  mutate(new_index = row_number())\n\n\nThen, rebuild lookup from old index to new index.\n\n\nCode\nold_to_new_index &lt;- tibble(\n  old_index = used_node_indices,\n  new_index = seq_along(\n    used_node_indices))\n\n\nFinally, update edge indices to match new node table.\n\n\nCode\nmc3_edges_final &lt;- mc3_edges_indexed %&gt;%\n  left_join(old_to_new_index, \n            by = c(\"from\" = \"old_index\")) %&gt;%\n  rename(from_new = new_index) %&gt;%\n  left_join(old_to_new_index, \n            by = c(\"to\" = \"old_index\")) %&gt;%\n  rename(to_new = new_index) %&gt;%\n  select(from = from_new, to = to_new, \n         is_inferred, type)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#node-type-distribution",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#node-type-distribution",
    "title": "Take-home Assignment 2",
    "section": "5.1. Node type distribution",
    "text": "5.1. Node type distribution\n\n\nCode\nmc3_nodes_final %&gt;%\n  count(type, sort = TRUE) %&gt;%\n  ggplot(aes(x = reorder(type, n), y = n)) +\n  geom_col(fill = \"forestgreen\") +\n  geom_text(aes(label = n), hjust = -0.2) +\n  coord_flip() +\n  labs(title = \"Node Type Distribution\",\n       x = \"Node Type\", y = \"Count\") +\n  theme_minimal()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#sub-type-distribution-for-entities",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#sub-type-distribution-for-entities",
    "title": "Take-home Assignment 2",
    "section": "5.2. Sub-type Distribution for Entities",
    "text": "5.2. Sub-type Distribution for Entities\n\n\nCode\nmc3_nodes_final %&gt;%\n  filter(type == \"Entity\") %&gt;%\n  count(sub_type, sort = TRUE) %&gt;%\n  ggplot(aes(x = reorder(sub_type, n), y = n)) +\n  geom_col(fill = \"skyblue\") +\n  geom_text(aes(label = n), hjust = -0.2) +\n  coord_flip() +\n  labs(title = \"Entity Subtype Distribution\",\n       x = \"Entity Subtype\", y = \"Count\") +\n  theme_minimal()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#sub-type-distribution-for-event",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#sub-type-distribution-for-event",
    "title": "Take-home Assignment 2",
    "section": "5.3. Sub-type Distribution for Event",
    "text": "5.3. Sub-type Distribution for Event\n\n\nCode\nmc3_nodes_final %&gt;%\n  filter(type == \"Event\") %&gt;%\n  count(sub_type, sort = TRUE) %&gt;%\n  ggplot(aes(x = reorder(sub_type, n), y = n)) +\n  geom_col(fill = \"grey\") +\n  geom_text(aes(label = n), hjust = -0.2) +\n  coord_flip() +\n  labs(title = \"Event Subtype Distribution\",\n       x = \"Event Subtype\", y = \"Count\") +\n  theme_minimal()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#relationship-analysis",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#relationship-analysis",
    "title": "Take-home Assignment 2",
    "section": "6.1. Relationship Analysis",
    "text": "6.1. Relationship Analysis\nThis section focuses on exploring the relationships among involved individuals, organizations, and vessels.\n\n6.1.1. Person-to-Person Relationships\nTo explore social and operational connections among individuals in the Oceanus community, a network visualization is constructed to represent person-to-person relationships mediated by relationship-type nodes. The process involves the following steps:\nIdentifying Relationship Nodes\nNodes labeled as “Relationship” are extracted from the cleaned graph data and split into two categories:\n\nUndirected relationships: Types like “Friends” and “Colleagues” which imply mutual connection.\nDirected relationships: All other types (e.g., “Manager”, “Employee”, “Superior”), which imply directional links.\n\nConstructing Undirected and Directed Person–Person Edges\n\nFor undirected relationships, a table is built to capture all people connected to the same relationship node. These are paired using self-joins to create mutual (bidirectional) person-to-person links.\nFor directed relationships, the graph schema supports a two-step link: a person connects to a relationship node, which then connects to another person. These are joined to create directed edges between people, preserving the direction implied by the intermediate relationship node.\n\n\n\nCode\nnode_lookup &lt;- mc3_nodes_final %&gt;% select(new_index, sub_type, name)\nedges_labeled &lt;- mc3_edges_final %&gt;%\n  left_join(node_lookup, by = c(\"from\" = \"new_index\")) %&gt;%\n  rename(from_type = sub_type, from_name = name) %&gt;%\n  left_join(node_lookup, by = c(\"to\" = \"new_index\")) %&gt;%\n  rename(to_type = sub_type, to_name = name)\n\n# Create non-directional relationships\nnondir_rel_ids &lt;- mc3_nodes_final %&gt;%\n  filter(type == \"Relationship\", sub_type %in% c(\"Friends\", \"Colleagues\")) %&gt;%\n  pull(new_index)\n\n# Get all Entity → Relationship edges (where Entity is a Person)\nnondir_links &lt;- edges_labeled %&gt;%\n  filter(from_type == \"Person\", to %in% nondir_rel_ids) %&gt;%\n  transmute(person = from, rel = to) %&gt;%\n  distinct()\n\n# Pair up people connected to the same relationship\npp_rel_pairs_nondir &lt;- nondir_links %&gt;%\n  inner_join(nondir_links, by = \"rel\") %&gt;%\n  filter(person.x != person.y) %&gt;%\n  distinct(rel, from = person.x, to = person.y)\n\n# Create directional relationships\ndir_rel_ids &lt;- mc3_nodes_final %&gt;%\n  filter(type == \"Relationship\", !sub_type %in% c(\"Friends\", \"Colleagues\")) %&gt;%\n  pull(new_index)\n\n# From person to relationship\npr_links &lt;- edges_labeled %&gt;%\n  filter(from_type == \"Person\", to %in% dir_rel_ids) %&gt;%\n  transmute(person = from, rel = to)\n\n# From relationship to another person\nrp_links &lt;- edges_labeled %&gt;%\n  filter(from %in% dir_rel_ids, to_type == \"Person\") %&gt;%\n  transmute(rel = from, person = to)\n\npp_rel_pairs_dir &lt;- inner_join(pr_links, rp_links, by = \"rel\") %&gt;%\n  filter(person.x != person.y) %&gt;%\n  distinct(rel, from = person.x, to = person.y)\n\n\nCombining and Preparing Network Data\n\nBoth undirected and directed edges are combined into a unified edge list, annotated with a direction label.\nThe relevant subset of nodes (people and relationships involved in these edges) is extracted and labeled with types and visual styles:\n\nPersons were represented as orange dots.\nRelationship nodes were represented as sky-blue boxes.\n\n\nNetwork Visualization\n\nThe graph’s rendered using the visNetwork package in R. Arrows indicate direction of relationships (where applicable).\nNode interaction features are added:\n\nHovering highlights connected nodes.\nA drop-down menu allows selection of specific person nodes.\nA legend was added to clarify node types and styling.\n\n\n\n\nCode\nrel_nodes &lt;- mc3_nodes_final %&gt;%\n  filter(type == \"Relationship\") %&gt;%      \n  select(new_index, rel_subtype = sub_type)\n\nrel_ids &lt;- rel_nodes$new_index\n\n# Combine both types of relationship\npp_rel_pairs_nondir &lt;- pp_rel_pairs_nondir %&gt;%\n  mutate(direction = \"undirected\")\n\npp_rel_pairs_dir &lt;- pp_rel_pairs_dir %&gt;%\n  mutate(direction = \"directed\")\n\npp_rel_pairs &lt;- bind_rows(pp_rel_pairs_nondir, pp_rel_pairs_dir)\n\n# Prepare network data\nused_ids &lt;- unique(c(pp_rel_pairs$from, pp_rel_pairs$to, pp_rel_pairs$rel))\n\nnodes_tbl &lt;- mc3_nodes_final %&gt;%\n  filter(new_index %in% used_ids) %&gt;%\n  mutate(type = if_else(new_index %in% rel_ids, \"Relationship\", \"Person\")) %&gt;%\n  select(node_id = new_index, label, type) %&gt;%\n  mutate(row_id = row_number())\n\nid_map &lt;- nodes_tbl %&gt;% select(node_id, row_id)\n\nedges_vis &lt;- bind_rows(\n  # Person → Relationship\n  pp_rel_pairs %&gt;%\n    left_join(id_map, by = c(\"from\" = \"node_id\")) %&gt;% rename(from_id = row_id) %&gt;%\n    left_join(id_map, by = c(\"rel\"  = \"node_id\")) %&gt;% rename(to_id   = row_id) %&gt;%\n    transmute(from = from_id, to = to_id),\n\n  # Relationship → Person\n  pp_rel_pairs %&gt;%\n    left_join(id_map, by = c(\"rel\"  = \"node_id\")) %&gt;% rename(from_id = row_id) %&gt;%\n    left_join(id_map, by = c(\"to\"   = \"node_id\")) %&gt;% rename(to_id   = row_id) %&gt;%\n    transmute(from = from_id, to = to_id)\n)\n\n# Visualize\nvis_nodes &lt;- nodes_tbl %&gt;%\n  transmute(\n    id    = row_id,\n    label = label,\n    group = type,\n    shape = if_else(type == \"Person\", \"dot\", \"box\"),\n    color = if_else(type == \"Person\", \"orange\", \"skyblue\")\n  )\n\nvis_edges &lt;- edges_vis %&gt;%\n  distinct() %&gt;%\n  mutate(arrows = \"to\", color = \"gray\")\n\nvisNetwork(vis_nodes, vis_edges) %&gt;%\n  visNodes(font = list(size = 18)) %&gt;%\n  visEdges(smooth = FALSE) %&gt;%\n  visOptions(\n    highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n    \n    # restrict ID selection to Person nodes only\n    nodesIdSelection = list(\n      enabled = TRUE,\n      values = vis_nodes %&gt;% filter(group == \"Person\") %&gt;% pull(id)\n    )\n  ) %&gt;%\n  visLayout(randomSeed = 1234) %&gt;%\n  visLegend(\n    addNodes = data.frame(\n      label = c(\"Person\", \"Relationship\"),\n      shape = c(\"dot\", \"box\"),\n      color = c(\"orange\", \"skyblue\")\n    ),\n    useGroups = FALSE,\n    position = \"right\"\n  )\n\n\n\n\n\n\nTo identify key individuals within the communication network, I compute four standard network centrality metrics for all Person nodes:\n\nDegree centrality: Measures the number of direct connections a node has, indicating activity level.\nBetweenness centrality: Quantifies how often a node lies on the shortest paths between others, identifying information brokers or gatekeepers.\nCloseness centrality: Reflects how quickly a node can reach others in the network, showing communication efficiency.\nEigenvector centrality: Captures influence based on being connected to other highly connected nodes.\n\nThe analysis is performed using the igraph package in R, with the full graph including both Person and Relationship nodes. Centrality metrics are calculated on the full graph structure, but filtered to show results only for Person nodes.\n\n\nCode\n# Step 1: Create igraph with all nodes and edges\nigraph_pp &lt;- graph_from_data_frame(\n  d = edges_vis,\n  vertices = nodes_tbl %&gt;% select(name = row_id, label, type),\n  directed = TRUE\n)\n\n# Step 2: Compute centrality metrics\nV(igraph_pp)$degree      &lt;- degree(igraph_pp, mode = \"all\")\nV(igraph_pp)$betweenness &lt;- betweenness(igraph_pp, directed = TRUE)\nV(igraph_pp)$closeness   &lt;- closeness(igraph_pp, normalized = TRUE)\nV(igraph_pp)$eigenvector &lt;- eigen_centrality(igraph_pp, directed = TRUE)$vector\n\n# Step 3: Create centrality table and filter for only Person nodes\ncentrality_tbl &lt;- tibble(\n  id        = as.integer(V(igraph_pp)$name),  # row_id\n  name       = V(igraph_pp)$label,\n  type        = V(igraph_pp)$type,\n  degree      = V(igraph_pp)$degree,\n  betweenness = V(igraph_pp)$betweenness,\n  closeness   = V(igraph_pp)$closeness,\n  eigenvector = V(igraph_pp)$eigenvector\n) %&gt;%\n  filter(type == \"Person\") %&gt;%\n  arrange(desc(degree))\n\nprint(centrality_tbl)\n\n\n# A tibble: 17 × 7\n      id name           type   degree betweenness closeness eigenvector\n   &lt;int&gt; &lt;chr&gt;          &lt;chr&gt;   &lt;dbl&gt;       &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;\n 1    16 Boss           Person     13       938.      0.217    1       \n 2     3 Nadia Conti    Person     11       876.      0.181    0.378   \n 3     6 Davis          Person     10       692.      0.202    0.596   \n 4     1 Sam            Person      8       301.      0.143    0.125   \n 5    11 The Intern     Person      8       580.      0.166    0.0599  \n 6    14 Mrs. Money     Person      8       776.      0.195    0.279   \n 7     7 Rodriguez      Person      7       362.      0.175    0.254   \n 8    15 The Middleman  Person      7       271.      0.198    0.301   \n 9    13 The Accountant Person      6       418.      0.193    0.317   \n10     4 Elise          Person      5        98       0.141    0.0799  \n11    12 The Lookout    Person      5       312.      0.157    0.0190  \n12     2 Kelly          Person      4         1       0.113    0.0397  \n13     9 Clepper Jensen Person      4       310.      0.160    0.00265 \n14    10 Miranda Jordan Person      4       120       0.162    0.000363\n15    17 Small Fry      Person      4        34.7     0.175    0.253   \n16     5 Liam Thorne    Person      2         0       0.135    0.0518  \n17     8 Sailor Shift   Person      2         0       0.146    0.0816  \n\n\n\nInsights: The centrality analysis and network visualization reveal that Boss is the most influential individual in the network, with the highest degree, betweenness, and eigenvector centrality, indicating strong connectivity and a central role in information flow. Nadia Conti and Davis also emerge as key connectors, acting as bridges between subgroups. Despite fewer direct links, The Intern and Mrs. Money exhibit high betweenness, suggesting they serve as strategic intermediaries.\n\n\n\n6.1.2. Person-Vessel Relationships\nTo explore how individuals are connected to vessels, a tripartite network is constructed. The process began by identifying all relationship nodes and linking them to person nodes (Person → Relationship) and vessel nodes (Relationship → Vessel) using the edge table. These two-step connections are joined to form person–relationship–vessel triplets, capturing associations between people and vessels.\nAll involved nodes are extracted and categorized as Person, Relationship, or Vessel, with each assigned a unique row ID. These are used to build a node table (vis_nodes) with customized shapes and colors, and an edge table (vis_edges) to represent directional links.\nThe resulting network is visualized using the visNetwork package in R, where:\n\nPersons appear as orange dots,\nRelationships as sky-blue boxes,\nVessels as green triangles.\nInteractive features allow for node highlighting and filtering, enabling intuitive exploration of how individuals may influence or interact with vessels via intermediary relationship types.\n\n\n\nCode\n# Construct person–relationship–vessel triplet\npr_edges &lt;- edges_labeled %&gt;%\n  filter(from_type == \"Person\", to %in% rel_ids) %&gt;%\n  transmute(person_id = from,          \n            relationship_id = to)\n\nvessel_ids &lt;- mc3_nodes_final %&gt;%\n  filter(sub_type == \"Vessel\") %&gt;% pull(new_index)\n\nrv_edges &lt;- edges_labeled %&gt;%\n  filter(from %in% rel_ids, to %in% vessel_ids) %&gt;%\n  transmute(relationship_id = from,\n            vessel_id       = to)\n\ntriplets &lt;- inner_join(pr_edges, rv_edges, by = \"relationship_id\")\n\nall_ids &lt;- unique(c(triplets$person_id,\n                    triplets$relationship_id,\n                    triplets$vessel_id))\n\n# Node table\nrel_tbl &lt;- mc3_nodes_final %&gt;%\n  filter(new_index %in% all_ids) %&gt;%\n  mutate(type = case_when(\n    new_index %in% vessel_ids ~ \"Vessel\",\n    new_index %in% rel_ids    ~ \"Relationship\",\n    TRUE                      ~ \"Person\"\n  )) %&gt;%\n  select(index = new_index, label, type) %&gt;%\n  distinct() %&gt;%\n  arrange(index) %&gt;%\n  mutate(row_id = row_number()) \n\nid_map &lt;- rel_tbl %&gt;% select(index, row_id)\n\n# Edge table\nedges_tbl &lt;- bind_rows(\n  triplets %&gt;%\n    select(from = person_id, to = relationship_id),\n  triplets %&gt;%\n    select(from = relationship_id, to = vessel_id)\n) %&gt;%\n  left_join(id_map, by = c(\"from\" = \"index\")) %&gt;%\n  rename(.from = row_id) %&gt;%\n  left_join(id_map, by = c(\"to\" = \"index\")) %&gt;%\n  rename(.to = row_id) %&gt;%\n  filter(!is.na(.from) & !is.na(.to)) %&gt;%\n  transmute(from = .from, to = .to)\n\n# Visualize\nvis_nodes &lt;- rel_tbl %&gt;%\n  transmute(\n    id    = row_id,\n    label = label,\n    group = type,\n    shape = case_when(\n      type == \"Person\"      ~ \"dot\",\n      type == \"Relationship\"~ \"box\",\n      type == \"Vessel\"      ~ \"triangle\"\n    ),\n    color = case_when(\n      type == \"Person\"      ~ \"orange\",\n      type == \"Relationship\"~ \"skyblue\",\n      type == \"Vessel\"      ~ \"forestgreen\"\n    )\n  )\n\nvis_edges &lt;- edges_tbl %&gt;%\n  transmute(\n    from = from,\n    to   = to,\n    arrows = \"to\",\n    color  = \"gray\"\n  )\n\nvisNetwork(vis_nodes, vis_edges) %&gt;%\n  visNodes(font = list(size = 20)) %&gt;%\n  visEdges(smooth = FALSE) %&gt;%\n  visOptions(highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE), nodesIdSelection = TRUE) %&gt;%\n  visLayout(randomSeed = 123) %&gt;%\n  visLegend(addNodes = data.frame(\n    label = c(\"Person\", \"Relationship\", \"Vessel\"),\n    shape = c(\"dot\", \"box\", \"triangle\"),\n    color = c(\"orange\", \"skyblue\", \"forestgreen\")\n  ), useGroups = FALSE)\n\n\n\n\n\n\n\nInsights: The Person–Relationship–Vessel network visualization reveals a tightly interconnected operational structure centered around key individuals. Davis and Rodriguez emerge as central figures, each linked to multiple vessels through “Operates” and “Coordinates” relationships, suggesting they play pivotal roles in managing or overseeing maritime activities. Vessels such as Remora, Sentinel, Neptune, and Mako form the core of this network, with multiple people connected to each—indicative of shared usage and coordinated operations. While most links are operational, a few “Suspicious” relationships—such as those involving Defender and Knowles—highlight potential vessels of concern. Notably, individuals like Boss, Clepper Jensen, and Nadia Conti are connected to only one vessel or relationship, indicating they may be responsible for more high-level or strategic roles. Overall, the structure suggests a coordinated network with central command figures, key vessels, and isolated links that may warrant further investigation."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#interaction-analysis",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#interaction-analysis",
    "title": "Take-home Assignment 2",
    "section": "6.2. Interaction Analysis",
    "text": "6.2. Interaction Analysis\nThis analysis focuses solely on communication events between entities to identify patterns of frequent interaction.\n\n6.2.1. Person-Person Communication\nThe process begins by identifying all edges linking Persons and Communication events. From this, all possible pairs of people who appear in the same communication event are extracted. To avoid duplication and self-pairs, only distinct pairs with different individuals are retained.\nThe number of times each person-pair co-occurs in communication events is then counted, forming a weighted edge list (num_comm_events). To standardize the order of pairs, names are alphabetically sorted within each row.\nThese person pairs are used to build a graph where:\n\nNodes represent individuals,\nEdges represent the frequency of shared communication events,\nEdge width is scaled by the number of co-occurrences.\n\nThe resulting network is visualized using ggraph, providing insight into the structure of interpersonal communication patterns.\n\n\nCode\npp_comm &lt;- edges_labeled %&gt;%\n  filter((from_type == \"Person\" & to_type == \"Communication\") |\n         (from_type == \"Communication\" & to_type == \"Person\")) %&gt;%\n  transmute(person = if_else(from_type == \"Person\", from_name, to_name),\n            comm_id = if_else(from_type == \"Communication\", from, to)) \n\nperson_pairs &lt;- pp_comm %&gt;%\n  inner_join(pp_comm, by = \"comm_id\") %&gt;%\n  filter(person.x != person.y) %&gt;%\n  count(person.x, person.y, name = \"num_comm_events\") %&gt;%   # ← new column name\n  rowwise() %&gt;%\n  mutate(p1 = min(person.x, person.y),\n         p2 = max(person.x, person.y)) %&gt;%\n  ungroup() %&gt;%\n  select(from = p1, to = p2, num_comm_events) %&gt;%\n  distinct()\n\nperson_pairs %&gt;%\n  arrange(desc(num_comm_events)) %&gt;%\n  print(n = 10)\n\n\n# A tibble: 22 × 3\n   from           to             num_comm_events\n   &lt;chr&gt;          &lt;chr&gt;                    &lt;int&gt;\n 1 Clepper Jensen Miranda Jordan              38\n 2 Mrs. Money     The Intern                  20\n 3 The Intern     The Lookout                 20\n 4 Boss           Mrs. Money                  10\n 5 Sam            The Lookout                  8\n 6 Boss           The Middleman                7\n 7 Mrs. Money     The Middleman                6\n 8 Davis          Nadia Conti                  5\n 9 Liam Thorne    Nadia Conti                  4\n10 The Accountant The Middleman                4\n# ℹ 12 more rows\n\n\n\n\nCode\npp_nodes &lt;- tibble(name = unique(c(person_pairs$from, person_pairs$to)))\n\nid_lkp &lt;- pp_nodes %&gt;% mutate(row_id = row_number())\n\npp_edges_final &lt;- person_pairs %&gt;%\n  left_join(id_lkp %&gt;% rename(from_id = row_id), by = c(\"from\" = \"name\")) %&gt;%\n  left_join(id_lkp %&gt;% rename(to_id = row_id),   by = c(\"to\"   = \"name\")) %&gt;%\n  select(from = from_id, to = to_id, num_comm_events)\n\nset.seed(42)\nggraph(tbl_graph(nodes = pp_nodes, edges = pp_edges_final, directed = FALSE),\n       layout = \"fr\") +\n  geom_edge_link(aes(width = num_comm_events), alpha = 0.5, color = \"darkgrey\") +\n  geom_node_point(color = \"orange\", size = 4) +\n  geom_node_text(aes(label = name), repel = TRUE, size = 3) +\n  scale_edge_width(range = c(0.3, 2.5)) +\n  theme_void() +\n  labs(title = \"Person–Person Interactions\")\n\n\n\n\n\n\n\n\n\n\nInsights: The person-to-person communication network reveals several high-frequency interaction pairs, with Clepper Jensen and Miranda Jordan—both mentioned in the case as investigators—sharing the most communication events (38). A secondary cluster features Mrs. Money, The Intern, and The Lookout, who are tightly linked through repeated communications, potentially indicating a shared operational or covert role. Boss emerges as a central figure, engaging with both Mrs. Money and The Middleman, and likely playing a coordinating or supervisory role. Additional patterns show Nadia Conti frequently contacted by both Davis and Liam Thorne, while The Middleman serves as a common contact for multiple individuals.\n\n\n\n6.2.2. Person-Organization-Group Interactions\nThis analysis constructs a network to explore how people, organizations, and groups interact based on their co-occurrence in communication events.\nThe process begins by identifying all edges that connect an entity (either a Person, Organization, or Group) to a Communication event. Both directions are considered to capture all valid interactions.\nNext, for each communication event, all unique pairs of co-occurring entities are generated. The number of shared communication events between each pair is counted, forming a weighted edge list.\nEach unique entity is recorded as a node and labeled with its type (Person, Organization, or Group). A numeric ID is assigned to each node for graph construction. The entity pairs and node list are joined to create a graph-compatible edge table with numeric references.\nThe resulting network is visualized using ggraph, where:\n\nEdge width reflects the frequency of shared communications.\nNode color and shape represent entity type: orange circles for Persons, purple diamonds for Organizations, and brown squares for Groups.\nThe Fruchterman–Reingold layout emphasizes structural proximity between frequently co-occurring entities.\n\n\n\nCode\n# Step 1: Get all Entity–Communication edges (Person, Organization, Group)\nentity_comm &lt;- edges_labeled %&gt;%\n  filter((from_type %in% c(\"Person\", \"Organization\", \"Group\") & to_type == \"Communication\") |\n         (from_type == \"Communication\" & to_type %in% c(\"Person\", \"Organization\", \"Group\"))) %&gt;%\n  transmute(\n    entity     = if_else(from_type %in% c(\"Person\", \"Organization\", \"Group\"), from_name, to_name),\n    comm_id    = if_else(from_type == \"Communication\", from, to),\n    entity_type = if_else(from_type %in% c(\"Person\", \"Organization\", \"Group\"), from_type, to_type)\n  )\n\n# Step 2: Create all entity–entity pairs that co-occur in the same communication event\nentity_pairs &lt;- entity_comm %&gt;%\n  inner_join(entity_comm, by = \"comm_id\") %&gt;%\n  filter(entity.x != entity.y) %&gt;%\n  count(entity.x, entity.y, name = \"num_comm_events\") %&gt;%\n  rowwise() %&gt;%\n  mutate(p1 = min(entity.x, entity.y),\n         p2 = max(entity.x, entity.y)) %&gt;%\n  ungroup() %&gt;%\n  select(from = p1, to = p2, num_comm_events) %&gt;%\n  distinct()\n\n# Step 3: Create node table with type info\nnode_types &lt;- entity_comm %&gt;%\n  select(name = entity, sub_type = entity_type) %&gt;%\n  distinct()\n\nnetwork_nodes &lt;- entity_comm %&gt;%                 \n  distinct(name = entity, sub_type = entity_type) %&gt;%\n  arrange(name) %&gt;%                               \n  mutate(row_id = row_number())                   \n\nid_lkp &lt;- network_nodes %&gt;% select(name, row_id)\n\n# Step 4: Build edge table with numeric IDs\nnetwork_edges &lt;- entity_pairs %&gt;%\n  left_join(id_lkp %&gt;% rename(from_id = row_id), by = c(\"from\" = \"name\")) %&gt;%\n  left_join(id_lkp %&gt;% rename(to_id = row_id),   by = c(\"to\"   = \"name\")) %&gt;%\n  select(from = from_id, to = to_id, num_comm_events)\n\n# Step 5: Plot the network with ggraph\nset.seed(42)\nggraph(tbl_graph(nodes = network_nodes, edges = network_edges, directed = FALSE),\n       layout = \"fr\") +\n  geom_edge_link(aes(width = num_comm_events), alpha = 0.5, color = \"grey60\") +\n  geom_node_point(aes(color = sub_type, shape = sub_type), size = 4) +\n  geom_node_text(aes(label = name), repel = TRUE, size = 3) +\n  scale_edge_width(range = c(0.3, 3)) +\n  scale_color_manual(values = c(\n    Person = \"orange\",\n    Organization = \"pink\",\n    Group = \"brown\"\n  )) +\n  scale_shape_manual(values = c(\n    Person = 19,\n    Organization = 18,\n    Group = 15\n  )) +\n  theme_void() +\n  labs(title = \"Person-Organization-Group Interactions\")\n\n\n\n\n\n\n\n\n\n\nInsights: The network reveals a densely connected core of individuals and organizations, suggesting coordinated activity across multiple entities. V-Miesel Shipping appears central, linked to individuals such as Boss, Mrs. Money, Rodriguez, and The Middleman, indicating a potential hub for operational or logistical coordination. Oceanus City Council and Green Guardians also serve as prominent intermediaries, connecting civic actors like Samantha Blake, Liam Thorne, and The Lookout. Nadia Conti stands out as a central bridge across these clusters, linking both activist-aligned and logistics-aligned individuals.\nA notable observation is the presence of only one Group node — “City Officials” — which is completely disconnected from the rest of the network. This suggests that, although the entity exists in the data, it did not participate in any communication event involving the individuals or organizations present in this chart.\n\n\n\n6.2.3. Person-Organzation-Vessel Interactions\nIn this stage, an interactive network visualization is constructed to explore communication-based relationships among people, vessels, and organizations. The process begins with extracting communication links between each entity type and communication events. From these, co-occurrence pairs are formed—entities that appeared together in the same communication event—counted, and converted into a weighted edge list. A node table is created with entity names and types. Using tidygraph, a network graph object is built, and centrality metrics (degree, betweenness, closeness, eigenvector) are computed to assess influence and positioning within the network. Finally, visNetwork is used to generate an interactive plot where node size reflects degree centrality, tooltip text displays all metrics, and nodes are colored and shaped based on their type (person, vessel, or organization). This allows for intuitive exploration of key actors and communication patterns.\n\n\nCode\n# Build Communication tables\npc &lt;- edges_labeled %&gt;%\n  filter((from_type == \"Person\" & to_type == \"Communication\") |\n         (from_type == \"Communication\" & to_type == \"Person\")) %&gt;%\n  transmute(entity = if_else(from_type == \"Person\", from_name, to_name),\n            comm   = if_else(from_type == \"Person\", to, from),\n            type   = \"Person\")\n\nvc &lt;- edges_labeled %&gt;%\n  filter((from_type == \"Vessel\" & to_type == \"Communication\") |\n         (from_type == \"Communication\" & to_type == \"Vessel\")) %&gt;%\n  transmute(entity = if_else(from_type == \"Vessel\", from_name, to_name),\n            comm   = if_else(from_type == \"Vessel\", to, from),\n            type   = \"Vessel\")\n\noc &lt;- edges_labeled %&gt;%\n  filter((from_type == \"Organization\" & to_type == \"Communication\") |\n         (from_type == \"Communication\" & to_type == \"Organization\")) %&gt;%\n  transmute(entity = if_else(from_type == \"Organization\", from_name, to_name),\n            comm   = if_else(from_type == \"Organization\", to, from),\n            type   = \"Organization\")\n\nentity_comm &lt;- bind_rows(pc, vc, oc)\n\n# Pairwise co-occurrences\nedges_raw &lt;- entity_comm %&gt;%\n  inner_join(entity_comm, by = \"comm\", suffix = c(\"_a\", \"_b\")) %&gt;%\n  filter(entity_a != entity_b) %&gt;%\n  mutate(pair_id = map2_chr(entity_a, entity_b, ~ paste(sort(c(.x, .y)), collapse = \"||\"))) %&gt;%\n  count(pair_id, entity_a, entity_b, name = \"weight\")\n\n# Node table\nnodes_tbl &lt;- entity_comm %&gt;%\n  distinct(name = entity, sub_type = type) %&gt;%\n  mutate(row_id = row_number())\n\n# Edge table\nid_lkp &lt;- nodes_tbl %&gt;% select(name, row_id)\nedges_final &lt;- edges_raw %&gt;%\n  left_join(id_lkp, by = c(\"entity_a\" = \"name\")) %&gt;% rename(from = row_id) %&gt;%\n  left_join(id_lkp, by = c(\"entity_b\" = \"name\")) %&gt;% rename(to = row_id) %&gt;%\n  select(from, to, weight)\n\nfull_graph &lt;- tbl_graph(nodes = nodes_tbl, edges = edges_final, directed = FALSE) %&gt;%\n  mutate(\n    degree      = centrality_degree(),\n    betweenness = centrality_betweenness(),\n    closeness   = centrality_closeness(),\n    eigen       = centrality_eigen()\n  )\n\n# Visualize\nvis_nodes &lt;- full_graph %&gt;%\n  as_tibble() %&gt;%\n  mutate(\n    id = row_number(),\n    label = name,\n    value = scales::rescale(degree, to = c(5, 25)),  # Size by degree\n    group = sub_type,\n    color = case_when(\n      sub_type == \"Person\" ~ \"orange\",\n      sub_type == \"Vessel\" ~ \"forestgreen\",\n      sub_type == \"Organization\" ~ \"pink\",\n      TRUE ~ \"lightgray\"\n    ),\n    shape = case_when(\n      sub_type == \"Person\" ~ \"dot\",\n      sub_type == \"Vessel\" ~ \"triangle\",\n      sub_type == \"Organization\" ~ \"box\",\n      TRUE ~ \"ellipse\"\n    ),\n    title = paste0(\n      \"&lt;b&gt;\", name, \"&lt;/b&gt;&lt;br&gt;\",\n      \"Degree: \", degree, \"&lt;br&gt;\",\n      \"Betweenness: \", round(betweenness, 2), \"&lt;br&gt;\",\n      \"Closeness: \", round(closeness, 3), \"&lt;br&gt;\",\n      \"Eigenvector: \", round(eigen, 3)\n    )\n  ) %&gt;%\n  select(id, label, group, shape, color, value, title)\n\nvis_edges &lt;- edges_final %&gt;%\n  mutate(arrows = \"none\", color = \"gray\") %&gt;%\n  distinct()\n\nvisNetwork(vis_nodes, vis_edges) %&gt;%\n  visNodes(font = list(size = 16)) %&gt;%\n  visEdges(smooth = FALSE) %&gt;%\n  visOptions(\n    highlightNearest = list(enabled = TRUE, degree = 1, hover = TRUE),\n    nodesIdSelection = TRUE\n  ) %&gt;%\n  visLayout(randomSeed = 42) %&gt;%\n  visLegend(addNodes = data.frame(\n    label = c(\"Person\", \"Vessel\", \"Organization\"),\n    shape = c(\"dot\", \"triangle\", \"box\"),\n    color = c(\"orange\", \"forestgreen\", \"pink\")\n  ), useGroups = FALSE, position = \"right\")\n\n\n\n\n\n\n\nInsights: This network map illustrates the complex web of communication and co-occurrence among individuals, vessels, and organizations. At the center is a densely connected cluster revolving around vessels such as Mako, Remora, Reef Guardian, and Neptune, suggesting these are frequent topics of discussion.\nHighly connected individuals like Nadia Conti, Boss, Davis, and Mrs. Money, along with key organizations such as the Oceanus City Council and Green Guardians, play prominent roles—consistent with their high degree and betweenness centrality observed earlier. In contrast, individuals like Sam, Kelly, and The Lookout appear on the network’s periphery, linked to the core through only one or two connections, indicating more isolated or limited involvement."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#clustering-analysis",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#clustering-analysis",
    "title": "Take-home Assignment 2",
    "section": "6.3. Clustering Analysis",
    "text": "6.3. Clustering Analysis\nTo better understand the structure of interactions, I conducted two clustering analyses based on communication frequency. The first focused on Person–Organization communication, revealing how individuals cluster around formal entities they frequently communicate with. The second included Vessels to capture broader patterns, highlighting how people and organizations group around frequently discussed or engaged vessels. By comparing both, we can distinguish between clusters formed through institutional communication and those shaped by shared operational or topical focus.\n\n6.3.1. Person-Organization Clustering\nThis analysis aims to identify clusters of people and organizations that frequently co-occur in communication events. The process begins by filtering the edges to retain only those pairs that have interacted at least twice, ensuring meaningful connections. A graph is then constructed and restricted to its largest connected component to focus on the primary network structure. Centrality metrics (degree, betweenness, eigenvector) are computed to assess node influence. Louvain clustering is applied using edge weights (number of shared communication events) to detect densely connected communities. The resulting network is visualized with node size indicating degree centrality and color representing cluster membership.\n\n\nCode\n# Step 1: Filter edges with sufficient communication events\nnetwork_filtered &lt;- network_edges %&gt;%\n  filter(num_comm_events &gt;= 2)\n\n# Step 2: Create graph\npp_graph &lt;- tbl_graph(nodes = network_nodes,\n                      edges = network_filtered,\n                      directed = FALSE) %&gt;%\n  activate(edges) %&gt;%\n  mutate(weight = num_comm_events)\n\n# Step 3: Filter to largest connected component\npp_graph &lt;- pp_graph %&gt;%\n  activate(nodes) %&gt;%\n  filter(!node_is_isolated()) %&gt;%\n  mutate(comp = group_components()) %&gt;%\n  filter(comp == which.max(table(comp)))\n\n# Step 4: Compute centrality + clustering\npp_graph &lt;- pp_graph %&gt;%\n  activate(nodes) %&gt;%\n  mutate(\n    cluster = as_factor(group_louvain(weights = weight)),\n    deg     = centrality_degree(),\n    betw    = centrality_betweenness(),\n    eig     = centrality_eigen()\n  )\n\n# Step 5: Plot with different shapes for Person vs Organization\nset.seed(1234)\nggraph(pp_graph, layout = \"fr\") +\n  geom_edge_link(aes(width = weight), colour = \"grey70\", alpha = 0.4) +\n  geom_node_point(aes(colour = cluster, size = deg, shape = sub_type)) +\n  geom_node_text(aes(label = name, colour = cluster), repel = TRUE, size = 3) +\n  scale_shape_manual(values = c(\n    Person = 16,         # circle\n    Organization = 15    # square\n  )) +\n  scale_edge_width(range = c(0.2, 2.5)) +\n  theme_void() +\n  labs(title = \"People–Organization Clustering (Louvain method)\")\n\n\n\n\n\n\n\n\n\n\nInsights: The Louvain clustering reveals four distinct communities of people and organizations based on shared communication events:\n\nCluster 1 (Red): Comprising Nadia Conti, Davis, Elise, and V. Miesel Shipping, this group appears to be closely connected, potentially involved in operational or logistical discussions.\nCluster 2 (Green): Includes Oceanus City Council, Green Guardians, Samantha Blake, and Sailor Shifts Team, suggesting a coalition focused on environmental or public affairs.\nCluster 3 (Blue): Formed by The Lookout, The Intern, Sam, and Kelly, this cluster is more peripheral but tightly knit—possibly playing an observational or low-influence role.\nCluster 4 (Purple): Consisting of Boss, Mrs. Money, The Middleman, and The Accountant, this group may represent organizational or administrative coordination within the broader network.\n\nNotably, Liam Thorne and Mrs. Money serve as key connectors, bridging multiple clusters and facilitating cross-group communication. In terms of centrality, The Intern, Mrs. Money, and Nadia Conti stand out as the most well-connected individuals, indicating their critical roles in the network’s information flow.\n\n\n\n6.3.2. Person-Organization-Vessel Clustering\nThe second network graph is constructed to uncover clusters of people, organizations, and vessels that frequently co-occur in communication events. First, only strong connections—those with five or more shared communication events are retained to ensure meaningful interactions. A graph is then built and filtered to include only the largest connected component, focusing the analysis on the most relevant part of the network. Louvain clustering is applied using edge weights to detect community structures, while centrality metrics (degree, betweenness, eigenvector) are computed to identify influential entities. The resulting network is visualized with node size representing degree centrality and color indicating cluster membership, revealing key actors and tightly-knit groups in the communication ecosystem.\n\n\nCode\n# Step 1: Filter edges with sufficient communication events\nedges_filtered &lt;- edges_final %&gt;%\n  filter(weight &gt;= 5)\n\n# Step 2: Create graph\nentity_graph &lt;- tbl_graph(nodes = nodes_tbl,\n                          edges = edges_filtered,\n                          directed = FALSE) %&gt;%\n  activate(edges) %&gt;%\n  mutate(weight = weight)\n\n# Step 3: Filter to largest connected component\nentity_graph &lt;- entity_graph %&gt;%\n  activate(nodes) %&gt;%\n  filter(!node_is_isolated()) %&gt;%\n  mutate(comp = group_components()) %&gt;%\n  filter(comp == which.max(table(comp)))\n\n# Step 4: Compute centrality + clustering\nentity_graph &lt;- entity_graph %&gt;%\n  activate(nodes) %&gt;%\n  mutate(\n    cluster = as_factor(group_louvain(weights = weight)),\n    deg     = centrality_degree(),\n    betw    = centrality_betweenness(),\n    eig     = centrality_eigen()\n  )\n\n# Step 5: Plot with shape by sub_type\nset.seed(1234)\nggraph(entity_graph, layout = \"fr\") +\n  geom_edge_link(aes(width = weight), colour = \"grey70\", alpha = 0.4) +\n  geom_node_point(aes(colour = cluster, size = deg, shape = sub_type)) +\n  geom_node_text(aes(label = name, colour = cluster), repel = TRUE, size = 3) +\n  scale_shape_manual(values = c(\n    Person = 16,         # circle\n    Organization = 15,   # square\n    Vessel = 17          # triangle\n  )) +\n  scale_edge_width(range = c(0.2, 2.5)) +\n  theme_void() +\n  labs(title = \"People–Organization–Vessel Clustering (Louvain method)\")\n\n\n\n\n\n\n\n\n\n\nInsights: The inclusion of vessels reveals distinct communication clusters centered around frequently mentioned ships and their associated entities.\n\nCluster 1 (Red) is dominated by vessels like Mako, Remora, Neptune, and V. Miesel Shipping, alongside individuals like Davis and Nadia Conti. This suggests a group engaged in operational or shipping-related discussions.\nCluster 2 (Green) consists entirely of individuals including Mrs. Money, The Intern, The Middleman, and Boss—likely representing a coordinated team, possibly administrative or managerial.\nCluster 3 (Blue) centers on Green Guardians, Oceanus City Council, and vessels like Reef Guardian, indicating an environmental or civic coalition involving both institutions and ships.\nCluster 4 (Purple) consists entirely of 3 vessels Sentinel, Horizon, and EcoVigil. This suggests the cluster represents a group of vessels that are frequently discussed together or are involved in similar communication contexts."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_P2.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_P2.html",
    "title": "Take-home Exercise 1 (Part 2)",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse, ggiraph, plotly, \n               patchwork, DT, dplyr, scales, forcats, dplyr, grid) \n\n\n\n\n\ndf &lt;- read_csv(\"respopagesex2024.csv\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_P2.html#load-packages",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_P2.html#load-packages",
    "title": "Take-home Exercise 1 (Part 2)",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse, ggiraph, plotly, \n               patchwork, DT, dplyr, scales, forcats, dplyr, grid)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_P2.html#import-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_P2.html#import-data",
    "title": "Take-home Exercise 1 (Part 2)",
    "section": "",
    "text": "df &lt;- read_csv(\"respopagesex2024.csv\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_P2.html#data-cleaning-and-preparation",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_P2.html#data-cleaning-and-preparation",
    "title": "Take-home Exercise 1 (Part 2)",
    "section": "Data cleaning and preparation",
    "text": "Data cleaning and preparation\nI follow the same data cleaning and preparation procedure as the original submission to ensure the same output.\n\nAdding “Region” column\n\ndf &lt;- df %&gt;%\n  mutate(\n    Region = case_when(\n      # Central Region (Core + Rest)\n      PA %in% c(\n        \"Downtown Core\", \"Outram\", \"Sentosa\", \"Rochor\", \"Orchard\", \"Newton\",\n        \"River Valley\", \"Bukit Timah\", \"Holland Road\", \"Tanglin\", \"Novena\",\n        \"Thomson\", \"Marina East\", \"Marina South\", \"Museum\", \"Singapore River\",\n        \"Bishan\", \"Bukit Merah\", \"Geylang\", \"Kallang\", \"Marine Parade\",\n        \"Queenstown\", \"Southern Islands\", \"Toa Payoh\", \"Straits View\"\n      ) ~ \"Central\",                                                    \n\n      # North Region\n      PA %in% c(\n        \"Central Water Catchment\", \"Lim Chu Kang\", \"Mandai\", \"Sembawang\",\n        \"Simpang\", \"Sungei Kadut\", \"Woodlands\", \"Yishun\"\n      ) ~ \"North\", \n\n      # North-East Region\n      PA %in% c(\n        \"Ang Mo Kio\", \"Hougang\", \"North-Eastern Islands\", \"Punggol\",\n        \"Seletar\", \"Sengkang\", \"Serangoon\"\n      ) ~ \"North-East\",                     \n\n      # East Region\n      PA %in% c(\"Bedok\", \"Changi\", \"Changi Bay\", \"Paya Lebar\", \"Pasir Ris\", \"Tampines\"\n      ) ~ \"East\",           \n      \n      # West Region\n      PA %in% c(\n        \"Bukit Batok\", \"Bukit Panjang\", \"Boon Lay\", \"Pioneer\", \"Choa Chu Kang\",\n        \"Clementi\", \"Jurong East\", \"Jurong West\", \"Tengah\", \"Tuas\",\n        \"Western Islands\", \"Western Water Catchment\", \"Benoi\", \"Ghim Moh\",\n        \"Gul\", \"Pandan Gardens\", \"Jurong Island\", \"Kent Ridge\", \"Nanyang\",\n        \"Teban Gardens\", \"Toh Tuck\", \"Tuas South\", \"West Coast\"\n      ) ~ \"West\", \n\n      # Catch-all for any PAs that didn’t match\n      TRUE ~ NA_character_\n    )\n  )\n\n\n\nRemoving all rows with population sum equal to 0\n\ndf2 &lt;- df %&gt;%\n  group_by(PA) %&gt;%\n  filter(sum(Pop, na.rm = TRUE) &gt; 0) %&gt;%\n  ungroup()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_P2.html#visualization",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_P2.html#visualization",
    "title": "Take-home Exercise 1 (Part 2)",
    "section": "Visualization",
    "text": "Visualization\nThis visualization demonstrates the top 4 sub-zones with highest population in Tampines planning area and their corresponding box plots of age distribution.\n\nPlotOriginal code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 1) Find & alphabetize your top 4 subzones\ntop4_sz &lt;- df2 %&gt;%\n  filter(PA == \"Tampines\") %&gt;%\n  group_by(SZ) %&gt;% \n  summarise(TotalPop = sum(Pop), .groups = \"drop\") %&gt;% \n  slice_max(TotalPop, n = 4) %&gt;% \n  pull(SZ)\n\nalpha_levels &lt;- sort(top4_sz)\n\n# 2) Bar‐chart data (with ordered factor)\nbar_data &lt;- df2 %&gt;% \n  filter(SZ %in% top4_sz) %&gt;% \n  group_by(SZ) %&gt;% \n  summarise(TotalPop = sum(Pop), .groups = \"drop\") %&gt;%\n  mutate(SZ = factor(SZ, levels = alpha_levels))\n\np_bar &lt;- ggplot(bar_data, aes(x = SZ, y = TotalPop)) +\n  geom_col(fill = \"darkorange\") +\n  coord_flip() +\n  scale_y_continuous(labels = comma) +\n  labs(subtitle = \"Total Population – Top 4 Subzones\", x = NULL, y = \"Population\") +\n  theme_ipsum(plot_margin = margin(8, 8, 8, 8))\n\n# 3) Boxplot data (with same ordered factor)\nbox_data &lt;- df2 %&gt;% \n  filter(SZ %in% top4_sz) %&gt;% \n  mutate(\n    Age = as.numeric(Age),\n    SZ  = factor(SZ, levels = alpha_levels)\n  ) %&gt;% \n  select(SZ, Age, Pop) %&gt;% \n  uncount(weights = Pop)\n\np_box &lt;- ggplot(box_data, aes(x = SZ, y = Age, fill = SZ)) +\n  geom_boxplot(alpha = 1.5, show.legend = FALSE) +\n  coord_flip() +\n  labs(subtitle = \"Age Distribution by Subzone\", x = NULL, y = \"Age (years)\") +\n  theme_ipsum(plot_margin = margin(8, 8, 8, 8))\n\n# 4) Combine\n(p_bar / p_box) +\n  plot_annotation(\n    title   = \"Population Size & Age Distributions in Top 4 Subzones (A–Z)\",\n    caption = \"Bars = total pop; Boxes = age spread\"\n  )"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_P2.html#good-design-practices",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_P2.html#good-design-practices",
    "title": "Take-home Exercise 1 (Part 2)",
    "section": "Good design practices",
    "text": "Good design practices\n\nSuitable choice of visualizations to represent quantity and distribution\nThe use of a horizontal bar chart effectively conveys total population size—an intuitive and direct way to compare the number of residents across subzones. Paired with this is a boxplot showing the age distribution within the same subzones, which illustrates not just the median age but also the range, concentration, and presence of outliers in the population. By combining these two perspectives—how many people live in each area and how their ages are spread—the chart enables a more comprehensive analysis than using either visualization alone.\nAlignment of axis components and use of a horizontal layout\nBoth the bar chart and the boxplot share the same categorical y-axis representing subzones, and the subzones appear in the same order across both visualizations (e.g., Tampines, Simei, Tampines North, etc.). This consistent alignment allows viewers to easily scan across charts and make immediate, accurate comparisons between total population and age distribution for each subzone without reorienting their focus. Additionally, the horizontal layout improves legibility, especially for subzone names, which are quite long and would be harder to read if rotated vertically.\nLogical visual hierarchy\nThe chart’s visual hierarchy reinforces a clear top-down logic that aligns with how viewers naturally process information. By placing the bar chart at the top, it first draws attention to the total population size of each subzone. This is the broad, high-level metric. Beneath it, the boxplot introduces a deeper layer of detail by showing the age distribution, which adds nuance and context to the population figures. This sequence helps direct the viewers to move from general to specific insights: starting with “how many people live here” and then exploring “what is the demographic structure of that population.”"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_P2.html#areas-for-improvement",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01_P2.html#areas-for-improvement",
    "title": "Take-home Exercise 1 (Part 2)",
    "section": "Areas for improvement",
    "text": "Areas for improvement\n\nSorting sub-zones in a logical order\nThe chart displays the top four subzones with the highest population in Tampines, but their arrangement does not follow a consistent or meaningful order—such as descending population size or alphabetical sequence. For instance, Tampines North is positioned above Simei, even though it has a lower population. This weakens the visual impact and does not fully leverage the bar chart’s strength in showing ranked comparisons at a glance. Reordering the bars by population size would improve readability, enhance pattern recognition, and allow viewers to instantly grasp which subzones are more or less populous.\nAligning color coding and adding legend\nIn the current design, the boxplot uses distinct colors to represent each subzone, but the bar chart displays all bars in the same color. Applying the same color scheme to the bar chart would help visually link the two components, improving overall cohesion and visual tracking. Furthermore, the chart lacks a legend to explain the color assignments, which can create confusion and reduce interpretability, especially if more subzones are added. Including a clear, consistent legend would make the chart more intuitive, accessible, and self-explanatory.\nAdjusting title and adding data labels\nThe original title, “Population Size & Age Distributions in Top 4 Subzones (A–Z),” lacks clarity and precision in a few key ways. First, it does not specify the basis for selecting the top 4 subzones, leaving viewers uncertain about whether the ranking is based on population, age diversity, or another metric. Furthermore, the title omits any geographical context, such as the fact that all subzones belong to the Tampines planning area, which is essential for interpretation.\nThe original chart doesn’t include any data label. Adding labels such as total population figures in the bar chart and median age values in the boxplot can help enhance interpretability by providing precise values at a glance, eliminating the need for visual estimation and making the chart more informative and accessible.\nReveal distribution patterns more clearly with Violin Plots\nWhile the boxplot effectively displays the median, interquartile range, and outliers, it does not capture the distribution shape or skewness of the data. Adding a violin plot would address this limitation by showing the full density of the age distribution for each subzone. This allows viewers to better understand how age groups are concentrated—whether the population is skewed toward younger or older ages, or if there are multiple peaks. A violin plot provides richer insight into the underlying demographic patterns, making it a more informative alternative for visualizing population spread."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608 Visual Analytics and Applications",
    "section": "",
    "text": "Welcome to my portfolio for ISSS608 Visual Analytics and Applications at Singapore Management University!"
  },
  {
    "objectID": "index.html#about-me",
    "href": "index.html#about-me",
    "title": "ISSS608 Visual Analytics and Applications",
    "section": "👨‍💻 About Me",
    "text": "👨‍💻 About Me\nHi, I’m Quynh Trang Do. I’m a Master’s student in Data Science & Analytics, passionate about leveraging data to generate insights and create real business value.\nConnect with me on LinkedIn!"
  },
  {
    "objectID": "index.html#check-out-my-latest-work",
    "href": "index.html#check-out-my-latest-work",
    "title": "ISSS608 Visual Analytics and Applications",
    "section": "✨ Check Out My Latest Work!",
    "text": "✨ Check Out My Latest Work!\n\n\n\nProject\nDescription\n\n\n\n\nTake-home Ex3\nStoryboard Design\n\n\nHands-on Ex08 (P1)\nChoropleth Mapping with R\n\n\nHands-on Ex08 (P2)\nVisualising Geospatial Point Data\n\n\nHands-on Ex08 (P3)\nAnalytical mapping"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_P2.html",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_P2.html",
    "title": "Hands-on Exercise 8 - Part 2",
    "section": "",
    "text": "pacman::p_load(sf, tmap, tidyverse)\n\n\n\n\n\nsgpools &lt;- read_csv(\"data/aspatial/SGPools_svy21.csv\")\n\nlist(sgpools) \n\n[[1]]\n# A tibble: 306 × 7\n   NAME           ADDRESS POSTCODE XCOORD YCOORD `OUTLET TYPE` `Gp1Gp2 Winnings`\n   &lt;chr&gt;          &lt;chr&gt;      &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;                     &lt;dbl&gt;\n 1 Livewire (Mar… 2 Bayf…    18972 30842. 29599. Branch                        5\n 2 Livewire (Res… 26 Sen…    98138 26704. 26526. Branch                       11\n 3 SportsBuzz (K… Lotus …   738078 20118. 44888. Branch                        0\n 4 SportsBuzz (P… 1 Sele…   188306 29777. 31382. Branch                       44\n 5 Prime Serango… Blk 54…   552542 32239. 39519. Branch                        0\n 6 Singapore Poo… 1A Woo…   731001 21012. 46987. Branch                        3\n 7 Singapore Poo… Blk 64…   370064 33990. 34356. Branch                       17\n 8 Singapore Poo… Blk 88…   370088 33847. 33976. Branch                       16\n 9 Singapore Poo… Blk 30…   540308 33910. 41275. Branch                       21\n10 Singapore Poo… Blk 20…   560202 29246. 38943. Branch                       25\n# ℹ 296 more rows\n\n\nConvert sgpools data frame into a simple feature data frame by using st_as_sf() of sf packages\n\nsgpools_sf &lt;- st_as_sf(sgpools, \n                       coords = c(\"XCOORD\", \"YCOORD\"),\n                       crs= 3414)\n\nlist(sgpools_sf)\n\n[[1]]\nSimple feature collection with 306 features and 5 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 7844.194 ymin: 26525.7 xmax: 45176.57 ymax: 47987.13\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 306 × 6\n   NAME                         ADDRESS POSTCODE `OUTLET TYPE` `Gp1Gp2 Winnings`\n * &lt;chr&gt;                        &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;                     &lt;dbl&gt;\n 1 Livewire (Marina Bay Sands)  2 Bayf…    18972 Branch                        5\n 2 Livewire (Resorts World Sen… 26 Sen…    98138 Branch                       11\n 3 SportsBuzz (Kranji)          Lotus …   738078 Branch                        0\n 4 SportsBuzz (PoMo)            1 Sele…   188306 Branch                       44\n 5 Prime Serangoon North        Blk 54…   552542 Branch                        0\n 6 Singapore Pools Woodlands C… 1A Woo…   731001 Branch                        3\n 7 Singapore Pools 64 Circuit … Blk 64…   370064 Branch                       17\n 8 Singapore Pools 88 Circuit … Blk 88…   370088 Branch                       16\n 9 Singapore Pools Anchorvale … Blk 30…   540308 Branch                       21\n10 Singapore Pools Ang Mo Kio … Blk 20…   560202 Branch                       25\n# ℹ 296 more rows\n# ℹ 1 more variable: geometry &lt;POINT [m]&gt;\n\n\n\n\n\nTurn on the interactive mode of tmap\n\ntmap_mode(\"view\")\n\n\n\n\ntm_shape(sgpools_sf) + \n  tm_bubbles(fill = \"red\",\n           size = 1,\n           col = \"black\",\n           lwd = 1)\n\n\n\n\n\n\n\n\n\ntm_shape(sgpools_sf) + \n  tm_bubbles(fill = \"red\",\n             size = \"Gp1Gp2 Winnings\",\n             col = \"black\",\n             lwd = 1)\n\n\n\n\n\n\n\n\n\n\ntm_shape(sgpools_sf) + \n  tm_bubbles(fill = \"OUTLET TYPE\", \n             size = \"Gp1Gp2 Winnings\",\n             col = \"black\",\n             lwd = 1)\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(sgpools_sf) + \n  tm_bubbles(fill = \"OUTLET TYPE\", \n             size = \"Gp1Gp2 Winnings\",\n             col = \"black\",\n             lwd = 1) + \n  tm_facets(by= \"OUTLET TYPE\",\n            nrow = 1,\n            sync = TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_P2.html#load-necessary-packages",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_P2.html#load-necessary-packages",
    "title": "Hands-on Exercise 8 - Part 2",
    "section": "",
    "text": "pacman::p_load(sf, tmap, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_P2.html#data-import-and-preparation",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_P2.html#data-import-and-preparation",
    "title": "Hands-on Exercise 8 - Part 2",
    "section": "",
    "text": "sgpools &lt;- read_csv(\"data/aspatial/SGPools_svy21.csv\")\n\nlist(sgpools) \n\n[[1]]\n# A tibble: 306 × 7\n   NAME           ADDRESS POSTCODE XCOORD YCOORD `OUTLET TYPE` `Gp1Gp2 Winnings`\n   &lt;chr&gt;          &lt;chr&gt;      &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;                     &lt;dbl&gt;\n 1 Livewire (Mar… 2 Bayf…    18972 30842. 29599. Branch                        5\n 2 Livewire (Res… 26 Sen…    98138 26704. 26526. Branch                       11\n 3 SportsBuzz (K… Lotus …   738078 20118. 44888. Branch                        0\n 4 SportsBuzz (P… 1 Sele…   188306 29777. 31382. Branch                       44\n 5 Prime Serango… Blk 54…   552542 32239. 39519. Branch                        0\n 6 Singapore Poo… 1A Woo…   731001 21012. 46987. Branch                        3\n 7 Singapore Poo… Blk 64…   370064 33990. 34356. Branch                       17\n 8 Singapore Poo… Blk 88…   370088 33847. 33976. Branch                       16\n 9 Singapore Poo… Blk 30…   540308 33910. 41275. Branch                       21\n10 Singapore Poo… Blk 20…   560202 29246. 38943. Branch                       25\n# ℹ 296 more rows\n\n\nConvert sgpools data frame into a simple feature data frame by using st_as_sf() of sf packages\n\nsgpools_sf &lt;- st_as_sf(sgpools, \n                       coords = c(\"XCOORD\", \"YCOORD\"),\n                       crs= 3414)\n\nlist(sgpools_sf)\n\n[[1]]\nSimple feature collection with 306 features and 5 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 7844.194 ymin: 26525.7 xmax: 45176.57 ymax: 47987.13\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 306 × 6\n   NAME                         ADDRESS POSTCODE `OUTLET TYPE` `Gp1Gp2 Winnings`\n * &lt;chr&gt;                        &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;                     &lt;dbl&gt;\n 1 Livewire (Marina Bay Sands)  2 Bayf…    18972 Branch                        5\n 2 Livewire (Resorts World Sen… 26 Sen…    98138 Branch                       11\n 3 SportsBuzz (Kranji)          Lotus …   738078 Branch                        0\n 4 SportsBuzz (PoMo)            1 Sele…   188306 Branch                       44\n 5 Prime Serangoon North        Blk 54…   552542 Branch                        0\n 6 Singapore Pools Woodlands C… 1A Woo…   731001 Branch                        3\n 7 Singapore Pools 64 Circuit … Blk 64…   370064 Branch                       17\n 8 Singapore Pools 88 Circuit … Blk 88…   370088 Branch                       16\n 9 Singapore Pools Anchorvale … Blk 30…   540308 Branch                       21\n10 Singapore Pools Ang Mo Kio … Blk 20…   560202 Branch                       25\n# ℹ 296 more rows\n# ℹ 1 more variable: geometry &lt;POINT [m]&gt;"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_P2.html#drawing-proportional-symbol-map",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_P2.html#drawing-proportional-symbol-map",
    "title": "Hands-on Exercise 8 - Part 2",
    "section": "",
    "text": "Turn on the interactive mode of tmap\n\ntmap_mode(\"view\")\n\n\n\n\ntm_shape(sgpools_sf) + \n  tm_bubbles(fill = \"red\",\n           size = 1,\n           col = \"black\",\n           lwd = 1)\n\n\n\n\n\n\n\n\n\ntm_shape(sgpools_sf) + \n  tm_bubbles(fill = \"red\",\n             size = \"Gp1Gp2 Winnings\",\n             col = \"black\",\n             lwd = 1)\n\n\n\n\n\n\n\n\n\n\ntm_shape(sgpools_sf) + \n  tm_bubbles(fill = \"OUTLET TYPE\", \n             size = \"Gp1Gp2 Winnings\",\n             col = \"black\",\n             lwd = 1)\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(sgpools_sf) + \n  tm_bubbles(fill = \"OUTLET TYPE\", \n             size = \"Gp1Gp2 Winnings\",\n             col = \"black\",\n             lwd = 1) + \n  tm_facets(by= \"OUTLET TYPE\",\n            nrow = 1,\n            sync = TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "title": "Hands-on Exercise 6",
    "section": "",
    "text": "pacman::p_load(scales, viridis, lubridate, ggthemes,\n               gridExtra, readxl, knitr, data.table,\n               CGPfunctions, ggHoriPlot, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#import-data",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#import-data",
    "title": "Hands-on Exercise 6",
    "section": "Import data",
    "text": "Import data\n\nattacks &lt;- read_csv(\"data/eventlog.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#examine-data",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#examine-data",
    "title": "Hands-on Exercise 6",
    "section": "Examine data",
    "text": "Examine data\n\nkable(head(attacks))\n\n\n\n\ntimestamp\nsource_country\ntz\n\n\n\n\n2015-03-12 15:59:16\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:00:48\nFR\nEurope/Paris\n\n\n2015-03-12 16:02:26\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:02:38\nUS\nAmerica/Chicago\n\n\n2015-03-12 16:03:22\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:03:45\nCN\nAsia/Shanghai"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#prepare-data",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#prepare-data",
    "title": "Hands-on Exercise 6",
    "section": "Prepare data",
    "text": "Prepare data\nStep 1: Deriving weekday and hour of day fields\n\nmake_hr_wkday &lt;- function(ts, sc, tz) {\n  real_times &lt;- ymd_hms(ts, \n                        tz = tz[1], \n                        quiet = TRUE)\n  dt &lt;- data.table(source_country = sc,\n                   wkday = weekdays(real_times),\n                   hour = hour(real_times))\n  return(dt)\n}\n\nStep 2: Deriving the attacks tibble data frame\n\nwkday_levels &lt;- c('Saturday', 'Friday', \n                  'Thursday', 'Wednesday', \n                  'Tuesday', 'Monday', \n                  'Sunday')\n\nattacks &lt;- attacks %&gt;%\n  group_by(tz) %&gt;%\n  do(make_hr_wkday(.$timestamp, \n                   .$source_country, \n                   .$tz)) %&gt;% \n  ungroup() %&gt;% \n  mutate(wkday = factor(\n    wkday, levels = wkday_levels),\n    hour  = factor(\n      hour, levels = 0:23))\n\n\nkable(head(attacks))\n\n\n\n\ntz\nsource_country\nwkday\nhour\n\n\n\n\nAfrica/Cairo\nBG\nSaturday\n20\n\n\nAfrica/Cairo\nTW\nSunday\n6\n\n\nAfrica/Cairo\nTW\nSunday\n8\n\n\nAfrica/Cairo\nCN\nSunday\n11\n\n\nAfrica/Cairo\nUS\nSunday\n15\n\n\nAfrica/Cairo\nCA\nMonday\n11"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#build-the-calendar-heatmap",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#build-the-calendar-heatmap",
    "title": "Hands-on Exercise 6",
    "section": "Build the calendar heatmap",
    "text": "Build the calendar heatmap\n\ngrouped &lt;- attacks %&gt;% \n  count(wkday, hour) %&gt;% \n  ungroup() %&gt;%\n  na.omit()\n\nggplot(grouped, \n       aes(hour, \n           wkday, \n           fill = n)) + \ngeom_tile(color = \"white\", \n          size = 0.1) + \ntheme_tufte(base_family = \"Helvetica\") + \ncoord_equal() +\nscale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\nlabs(x = NULL, \n     y = NULL, \n     title = \"Attacks by weekday and time of day\") +\ntheme(axis.ticks = element_blank(),\n      plot.title = element_text(hjust = 0.5),\n      legend.title = element_text(size = 8),\n      legend.text = element_text(size = 6) )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#build-multiple-calendar-heatmaps",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#build-multiple-calendar-heatmaps",
    "title": "Hands-on Exercise 6",
    "section": "Build Multiple Calendar Heatmaps",
    "text": "Build Multiple Calendar Heatmaps\n\nSelf Attempt\nPrepare data\n\n# Step 1: Identify top 4 countries by number of attacks\ntop_countries &lt;- attacks %&gt;%\n  count(source_country, sort = TRUE) %&gt;%\n  slice_max(n, n = 4) %&gt;%\n  pull(source_country)\n\n# Step 2: Filter attacks for those top countries\nattacks_top4 &lt;- attacks %&gt;%\n  filter(source_country %in% top_countries) %&gt;%\n  mutate(source_country = factor(source_country, levels = top_countries))\n\n# Step 3: Aggregate count per hour and weekday for each country\ngrouped_top4 &lt;- attacks_top4 %&gt;%\n  count(source_country, wkday, hour) %&gt;%\n  ungroup() %&gt;%\n  na.omit()\n\nVisualize data\n\nggplot(grouped_top4, \n       aes(hour, wkday, fill = n)) +\n  geom_tile(color = \"white\", size = 0.1) +\n  theme_tufte(base_family = \"Helvetica\") +\n  coord_equal() +\n  facet_wrap(~ source_country, ncol = 2) +\n  scale_fill_gradient(name = \"# of attacks\",\n                      low = \"sky blue\", \n                      high = \"dark blue\") +\n  labs(x = NULL, \n       y = NULL, \n       title = \"Top 4 Attacked Countries: Attacks by Weekday and Hour\") +\n  theme(axis.ticks = element_blank(),\n        plot.title = element_text(hjust = 0.5),\n        legend.title = element_text(size = 8),\n        legend.text = element_text(size = 6))\n\n\n\n\n\n\n\n\n\n\nFollow provided sample code\n\nattacks_by_country &lt;- count(\n  attacks, source_country) %&gt;%\n  mutate(percent = percent(n/sum(n))) %&gt;%\n  arrange(desc(n))\n\ntop4 &lt;- attacks_by_country$source_country[1:4]\ntop4_attacks &lt;- attacks %&gt;%\n  filter(source_country %in% top4) %&gt;%\n  count(source_country, wkday, hour) %&gt;%\n  ungroup() %&gt;%\n  mutate(source_country = factor(\n    source_country, levels = top4)) %&gt;%\n  na.omit()\n\n\nggplot(top4_attacks, \n       aes(hour, \n           wkday, \n           fill = n)) + \n  geom_tile(color = \"white\", \n          size = 0.1) + \n  theme_tufte(base_family = \"Helvetica\") + \n  coord_equal() +\n  scale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\n  facet_wrap(~source_country, ncol = 2) +\n  labs(x = NULL, y = NULL, \n     title = \"Attacks on top 4 countries by weekday and time of day\") +\n  theme(axis.ticks = element_blank(),\n        axis.text.x = element_text(size = 7),\n        plot.title = element_text(hjust = 0.5),\n        legend.title = element_text(size = 8),\n        legend.text = element_text(size = 6) )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-1-import-data",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-1-import-data",
    "title": "Hands-on Exercise 6",
    "section": "Step 1: Import data",
    "text": "Step 1: Import data\n\nair &lt;- read_excel(\"data/arrivals_by_air.xlsx\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-2-deriving-month-and-year-fields",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-2-deriving-month-and-year-fields",
    "title": "Hands-on Exercise 6",
    "section": "Step 2: Deriving month and year fields",
    "text": "Step 2: Deriving month and year fields\n\nair$month &lt;- factor(month(air$`Month-Year`), \n                    levels=1:12, \n                    labels=month.abb, \n                    ordered=TRUE) \nair$year &lt;- year(ymd(air$`Month-Year`))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-3-extracting-the-target-country",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-3-extracting-the-target-country",
    "title": "Hands-on Exercise 6",
    "section": "Step 3: Extracting the target country",
    "text": "Step 3: Extracting the target country\n\nVietnam &lt;- air %&gt;% \n  select(`Vietnam`, \n         month, \n         year) %&gt;%\n  filter(year &gt;= 2010)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-4-computing-year-average-arrivals-by-month",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-4-computing-year-average-arrivals-by-month",
    "title": "Hands-on Exercise 6",
    "section": "Step 4: Computing year average arrivals by month",
    "text": "Step 4: Computing year average arrivals by month\n\nhline.data &lt;- Vietnam %&gt;% \n  group_by(month) %&gt;%\n  summarise(avgvalue = mean(`Vietnam`))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-5-plotting-the-cycle-plot",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-5-plotting-the-cycle-plot",
    "title": "Hands-on Exercise 6",
    "section": "Step 5: Plotting the cycle plot",
    "text": "Step 5: Plotting the cycle plot\n\nggplot() + \n  geom_line(data=Vietnam,\n            aes(x=year, \n                y=`Vietnam`, \n                group=month), \n            colour=\"black\") +\n  geom_hline(aes(yintercept=avgvalue), \n             data=hline.data, \n             linetype=6, \n             colour=\"red\", \n             size=0.5) + \n  facet_grid(~month) +\n  labs(axis.text.x = element_blank(),\n       title = \"Visitor arrivals from Vietnam by air, Jan 2010-Dec 2019\") +\n  xlab(\"\") +\n  ylab(\"No. of Visitors\") +\n  theme_tufte(base_family = \"Helvetica\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-1-import-data-1",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-1-import-data-1",
    "title": "Hands-on Exercise 6",
    "section": "Step 1: Import data",
    "text": "Step 1: Import data\n\nrice &lt;- read_csv(\"data/rice.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-2-plot-the-slopegraph",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-2-plot-the-slopegraph",
    "title": "Hands-on Exercise 6",
    "section": "Step 2: Plot the slopegraph",
    "text": "Step 2: Plot the slopegraph\n\nrice %&gt;% \n  mutate(Year = factor(Year)) %&gt;%\n  filter(Year %in% c(1961, 1980)) %&gt;%\n  newggslopegraph(Year, Yield, Country,\n                Title = \"Rice Yield of Top 11 Asian Counties\",\n                SubTitle = \"1961-1980\",\n                Caption = \"Prepared by: Quynh Trang Do\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands-on Exercise 04",
    "section": "",
    "text": "pacman::p_load(ggdist, ggridges, ggthemes,\n               colorspace, tidyverse)\n\n\n\n\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA)\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA)\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2)\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#getting-started",
    "title": "Hands-on Exercise 04",
    "section": "",
    "text": "pacman::p_load(ggdist, ggridges, ggthemes,\n               colorspace, tidyverse)\n\n\n\n\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-distribution-with-ridgeline-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-distribution-with-ridgeline-plot",
    "title": "Hands-on Exercise 04",
    "section": "",
    "text": "ggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-distribution-with-raincloud-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-distribution-with-raincloud-plot",
    "title": "Hands-on Exercise 04",
    "section": "",
    "text": "ggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA)\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA)\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2)\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#getting-started-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#getting-started-1",
    "title": "Hands-on Exercise 04",
    "section": "Getting Started",
    "text": "Getting Started\n\nInstall and launch packages\n\npacman::p_load(ggstatsplot, tidyverse)\n\n\n\nImport data\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#one-sample-test-gghistostats-method",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#one-sample-test-gghistostats-method",
    "title": "Hands-on Exercise 04",
    "section": "One-sample test: gghistostats() method",
    "text": "One-sample test: gghistostats() method\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#two-sample-mean-test-ggbetweenstats",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#two-sample-mean-test-ggbetweenstats",
    "title": "Hands-on Exercise 04",
    "section": "Two-sample mean test: ggbetweenstats()",
    "text": "Two-sample mean test: ggbetweenstats()\n\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#oneway-anova-test-ggbetweenstats-method",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#oneway-anova-test-ggbetweenstats-method",
    "title": "Hands-on Exercise 04",
    "section": "Oneway ANOVA Test: ggbetweenstats() method",
    "text": "Oneway ANOVA Test: ggbetweenstats() method\n\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#significant-test-of-correlation-ggscatterstats",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#significant-test-of-correlation-ggscatterstats",
    "title": "Hands-on Exercise 04",
    "section": "Significant Test of Correlation: ggscatterstats()",
    "text": "Significant Test of Correlation: ggscatterstats()\n\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#significant-test-of-association-depedence-ggbarstats-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#significant-test-of-association-depedence-ggbarstats-methods",
    "title": "Hands-on Exercise 04",
    "section": "Significant Test of Association (Depedence) : ggbarstats() methods",
    "text": "Significant Test of Association (Depedence) : ggbarstats() methods\n\nexam1 &lt;- exam %&gt;% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#get-started",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#get-started",
    "title": "Hands-on Exercise 04",
    "section": "Get started",
    "text": "Get started\n\nInstall and load packages\n\npacman::p_load(plotly, crosstalk, DT, \n               ggdist, ggridges, colorspace,\n               gganimate, tidyverse)\n\n\n\nImport data\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods",
    "title": "Hands-on Exercise 04",
    "section": "Visualizing the uncertainty of point estimates: ggplot2 methods",
    "text": "Visualizing the uncertainty of point estimates: ggplot2 methods\n\nmy_sum &lt;- exam %&gt;%\n  group_by(RACE) %&gt;%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %&gt;%\n  mutate(se=sd/sqrt(n-1))\n\nknitr::kable(head(my_sum), format = 'html')\n\n\n\n\nRACE\nn\nmean\nsd\nse\n\n\n\n\nChinese\n193\n76.50777\n15.69040\n1.132357\n\n\nIndian\n12\n60.66667\n23.35237\n7.041005\n\n\nMalay\n108\n57.44444\n21.13478\n2.043177\n\n\nOthers\n9\n69.66667\n10.72381\n3.791438\n\n\n\n\n\n\nPlotting standard error bars of point estimates\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    linewidth=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean maths score by rac\")\n\n\n\n\n\n\n\n\n\n\nPlotting confidence interval of point estimates\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE, -mean), \n        ymin=mean-1.96*se, \n        ymax=mean+1.96*se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    linewidth=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x = \"Maths score\",\n       title = \"95% confidence interval of mean maths score by race\")\n\n\n\n\n\n\n\n\n\n\nVisualizing the uncertainty of point estimates with interactive error bars\n\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(4,8),\n       ggplotly((ggplot(shared_df) +\n                   geom_errorbar(aes(\n                     x=reorder(RACE, -mean),\n                     ymin=mean-2.58*se, \n                     ymax=mean+2.58*se), \n                     width=0.2, \n                     colour=\"black\", \n                     alpha=0.9, \n                     size=0.5) +\n                   geom_point(aes(\n                     x=RACE, \n                     y=mean, \n                     text = paste(\"Race:\", `RACE`, \n                                  \"&lt;br&gt;N:\", `n`,\n                                  \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                                  \"&lt;br&gt;95% CI:[\", \n                                  round((mean-2.58*se), digits = 2), \",\",\n                                  round((mean+2.58*se), digits = 2),\"]\")),\n                     stat=\"identity\", \n                     color=\"red\", \n                     size = 1.5, \n                     alpha=1) + \n                   xlab(\"Race\") + \n                   ylab(\"Average Scores\") + \n                   theme_minimal() + \n                   theme(axis.text.x = element_text(\n                     angle = 45, vjust = 0.5, hjust=1)) +\n                   ggtitle(\"99% Confidence interval of average /&lt;br&gt;maths scores by race\")), \n                tooltip = \"text\"), \n       DT::datatable(shared_df, \n                     rownames = FALSE, \n                     class=\"compact\", \n                     width=\"100%\", \n                     options = list(pageLength = 10,\n                                    scrollX=T), \n                     colnames = c(\"No. of pupils\", \n                                  \"Avg Scores\",\n                                  \"Std Dev\",\n                                  \"Std Error\")) %&gt;%\n         formatRound(columns=c('mean', 'sd', 'se'),\n                     digits=2))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-uncertainty-ggdist-package",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-uncertainty-ggdist-package",
    "title": "Hands-on Exercise 04",
    "section": "Visualising Uncertainty: ggdist package",
    "text": "Visualising Uncertainty: ggdist package\n\nVisualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval() +\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = 0.95,\n  .point = median,\n  .interval = qi) +\n  labs(\n    title = \"Visualising confidence intervals of median math score\",\n    subtitle = \"Median Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\n\nAdd confidence interval argument\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval(.width = 0.95, .point = mean,\n    show.legend = FALSE) +   \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval(.width = 0.99, .point = mean,\n    show.legend = FALSE) +   \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval(.width = 0.99, .point = median,\n    show.legend = FALSE) +   \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Median Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\n\nAdd fill color and turn on legends\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops",
    "title": "Hands-on Exercise 04",
    "section": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)",
    "text": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)\n\nInstall ungeviz package\n\ndevtools::install_github(\"wilkelab/ungeviz\")\n\n\n\nLaunch the application\n\nlibrary(ungeviz)\n\n\n\nVisualising Uncertainty with Hypothetical Outcome Plots (HOPs)\n\nggplot(data = exam, \n       (aes(x = factor(RACE), \n            y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, \n    width = 0.05), \n    size = 0.4, \n    color = \"#0072B2\", \n    alpha = 1/2) +\n  geom_hpline(data = sampler(25, \n                             group = RACE), \n              height = 0.6, \n              color = \"#D55E00\") +\n  theme_bw() + \n  transition_states(.draw, 1, 3)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#install-and-launch-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#install-and-launch-r-packages",
    "title": "Hands-on Exercise 04",
    "section": "Install and launch R packages",
    "text": "Install and launch R packages\n\npacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#import-data-3",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#import-data-3",
    "title": "Hands-on Exercise 04",
    "section": "Import data",
    "text": "Import data\n\ncovid19 &lt;- read_csv(\"COVID-19_DKI_Jakarta.csv\") %&gt;%\n  mutate_if(is.character, as.factor)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnelplotr-methods",
    "title": "Hands-on Exercise 04",
    "section": "FunnelPlotR methods",
    "text": "FunnelPlotR methods\n\nThe basic plot\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Positive,\n  denominator = Death,\n  group = `Sub-district`\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\nMakeover 1\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",     #&lt;&lt;\n  xrange = c(0, 6500),  #&lt;&lt;\n  yrange = c(0, 0.05)   #&lt;&lt;\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\nMakeover 2\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",   \n  xrange = c(0, 6500),  \n  yrange = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative Total Number of COVID-19 Positive Cases\", #&lt;&lt;           \n  x_label = \"Cumulative COVID-19 Positive Cases\", #&lt;&lt;\n  y_label = \"Cumulative Fatality Rate\"  #&lt;&lt;\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnel-plot-for-fair-visual-comparison-ggplot2-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnel-plot-for-fair-visual-comparison-ggplot2-methods",
    "title": "Hands-on Exercise 04",
    "section": "Funnel Plot for Fair Visual Comparison: ggplot2 methods",
    "text": "Funnel Plot for Fair Visual Comparison: ggplot2 methods\n\nComputing the basic derived fields\n\ndf &lt;- covid19 %&gt;%\n  mutate(rate = Death / Positive) %&gt;%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %&gt;%\n  filter(rate &gt; 0)\n\n\nfit.mean &lt;- weighted.mean(df$rate, 1/df$rate.se^2)\n\n\n\nCalculate lower and upper limits for 95% and 99.9% CI\n\nnumber.seq &lt;- seq(1, max(df$Positive), 1)\nnumber.ll95 &lt;- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 &lt;- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 &lt;- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 &lt;- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI &lt;- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)\n\n\n\nPlotting a static funnel plot\n\np &lt;- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np\n\n\n\n\n\n\n\n\n\n\nInteractive Funnel Plot: plotly + ggplot2\n\nfp_ggplotly &lt;- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\")) %&gt;%\n  layout(title = list(font = list( size = 14)))\nfp_ggplotly"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#error-bar-chart",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#error-bar-chart",
    "title": "Hands-on Exercise 04",
    "section": "Error bar chart",
    "text": "Error bar chart\n\n# Convert exam data to long format\nexam_long &lt;- exam %&gt;%\n  pivot_longer(cols = c(MATHS, ENGLISH, SCIENCE),\n               names_to = \"Subject\",\n               values_to = \"Score\")\n\n# Compute mean and SD by RACE and Subject\nscore_summary &lt;- exam_long %&gt;%\n  group_by(RACE, Subject) %&gt;%\n  summarise(\n    mean_score = mean(Score, na.rm = TRUE),\n    sd_score = sd(Score, na.rm = TRUE),\n    .groups = \"drop\"\n  )\n\n# Create error bar plot like your reference\nggplot(score_summary, aes(x = Subject, y = mean_score, fill = RACE)) +\n  geom_col(position = position_dodge(0.9), width = 0.7) +\n  geom_errorbar(\n    aes(ymin = mean_score - sd_score, ymax = mean_score + sd_score),\n    position = position_dodge(0.9), width = 0.25, color = \"black\"\n  ) +\n  labs(title = \"Mean Exam Scores by Subject and Race\",\n       x = \"Subject\", y = \"Mean Score\", fill = \"Race\") +\n  scale_fill_brewer(palette = \"Pastel1\") +  # Or Set2, Paired, etc.\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\", hjust = 0.5),\n    axis.title = element_text(face = \"bold\")\n  )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on_Ex02",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse) \n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-loading-the-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-loading-the-required-libraries",
    "title": "Hands-on_Ex02",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-the-data",
    "title": "Hands-on_Ex02",
    "section": "",
    "text": "exam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#annotation-challenge-when-having-large-number-of-data-points",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#annotation-challenge-when-having-large-number-of-data-points",
    "title": "Hands-on_Ex02",
    "section": "Annotation challenge when having large number of data points",
    "text": "Annotation challenge when having large number of data points\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#solution-ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#solution-ggrepel",
    "title": "Hands-on_Ex02",
    "section": "Solution: ggrepel",
    "text": "Solution: ggrepel\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggplot2-built-in-themes",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggplot2-built-in-themes",
    "title": "Hands-on_Ex02",
    "section": "ggplot2 built-in themes",
    "text": "ggplot2 built-in themes\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Maths scores\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggtheme-package-extra-themes-scales-and-geoms-for-ggplot2",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggtheme-package-extra-themes-scales-and-geoms-for-ggplot2",
    "title": "Hands-on_Ex02",
    "section": "ggtheme package: Extra Themes, Scales and Geoms for ‘ggplot2’",
    "text": "ggtheme package: Extra Themes, Scales and Geoms for ‘ggplot2’\nExample 1: The Economist theme\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\n\n\n\n\nExample 2: Stata theme\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_stata()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#hrbthems-package-additional-themes-theme-components-and-utilities-for-ggplot2",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#hrbthems-package-additional-themes-theme-components-and-utilities-for-ggplot2",
    "title": "Hands-on_Ex02",
    "section": "hrbthems package: Additional Themes, Theme Components and Utilities for ‘ggplot2’",
    "text": "hrbthems package: Additional Themes, Theme Components and Utilities for ‘ggplot2’\n\naxis_title_size: set the font size of the axis title\nbase_size: set base font size for most text elements in the plot, including axis tick labels, legend, etc.\ngrid: indicate whether there are gridlines in the plot or not\nbase_family: specify which font is used\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\",\n              base_family = \"sans\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#create-individual-graph",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#create-individual-graph",
    "title": "Hands-on_Ex02",
    "section": "Create individual graph",
    "text": "Create individual graph\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combine-two-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combine-two-ggplot2-graphs",
    "title": "Hands-on_Ex02",
    "section": "Combine two ggplot2 graphs",
    "text": "Combine two ggplot2 graphs\n\np1 + p2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combine-multiple-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combine-multiple-ggplot2-graphs",
    "title": "Hands-on_Ex02",
    "section": "Combine multiple ggplot2 graphs",
    "text": "Combine multiple ggplot2 graphs\n\n“/” operator to stack two ggplot2 graphs\n“|” operator to place the plots beside each other\n“()” operator the define the sequence of the plotting\n\n\n(p1 / p2) | p3\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#create-a-composite-figure-with-tag",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#create-a-composite-figure-with-tag",
    "title": "Hands-on_Ex02",
    "section": "Create a composite figure with tag",
    "text": "Create a composite figure with tag\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#create-figure-with-insert",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#create-figure-with-insert",
    "title": "Hands-on_Ex02",
    "section": "Create figure with insert",
    "text": "Create figure with insert\n\nPlace one or several plots or graphic elements freely on top or below another plot.\n\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combine-patchwork-and-ggtheme",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combine-patchwork-and-ggtheme",
    "title": "Hands-on_Ex02",
    "section": "Combine patchwork and ggtheme",
    "text": "Combine patchwork and ggtheme\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#boxplot-science-score-distribution-by-class",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#boxplot-science-score-distribution-by-class",
    "title": "Hands-on_Ex02",
    "section": "1. Boxplot: Science Score Distribution by Class",
    "text": "1. Boxplot: Science Score Distribution by Class\n\nmedian_data &lt;- exam_data %&gt;%\n  group_by(CLASS) %&gt;%\n  summarise(median_science = median(SCIENCE, na.rm = TRUE))\n\np1 &lt;- ggplot(exam_data, aes(x = CLASS, y = SCIENCE)) +\n  geom_boxplot(outlier.shape = 16, outlier.size = 1.2, width = 0.7, position = position_dodge(0.8)) +\n  scale_fill_brewer(palette = \"Set2\") +\n  geom_text_repel(data = median_data, \n                  aes(x = CLASS, y = median_science, label = round(median_science, 1)),\n                   fontface = \"bold\",\n                   size = 3,\n                   nudge_y = 0.5) +  # Nudge to avoid overlap\n  theme_solarized_2() +\n  labs(title = \"Boxplot: Science Score by Class\", x = \"Class\", y = \"Science Score\")\n\np1"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#dot-plot-science-score-distribution-by-race",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#dot-plot-science-score-distribution-by-race",
    "title": "Hands-on_Ex02",
    "section": "2. Dot Plot: Science Score Distribution by Race",
    "text": "2. Dot Plot: Science Score Distribution by Race\n\np2 &lt;- ggplot(exam_data, aes(x = RACE, y = SCIENCE, fill = RACE)) +\n  geom_dotplot(\n    binaxis = 'y',\n    stackdir = 'center',\n    dotsize = 0.7,\n    binwidth = 2,         # Try 1 or 2 based on your data's spread\n    method = 'dotdensity'\n  ) +\n  labs(\n    title = \"Dot Plot: Science Score by Race\",\n    x = \"Race\",\n    y = \"Science Score\"\n  ) +\n  scale_fill_brewer(palette = \"Set1\") +\n  theme_clean() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1, size = 12),\n    axis.text.y = element_text(size = 11),\n    plot.title = element_text(size = 15, face = \"bold\", hjust = 0.5),\n    legend.position = \"none\"   # Remove legend since color matches x-axis\n  )\n\np2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#pie-chart-race-proportion-within-each-class",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#pie-chart-race-proportion-within-each-class",
    "title": "Hands-on_Ex02",
    "section": "3. Pie Chart: Race proportion within each Class",
    "text": "3. Pie Chart: Race proportion within each Class\n\nlibrary(scales)\n\n\nAttaching package: 'scales'\n\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\npie_data &lt;- exam_data %&gt;%\n  group_by(CLASS, RACE) %&gt;%\n  summarise(count = n(), .groups = \"drop\") %&gt;%\n  group_by(CLASS) %&gt;%\n  mutate(\n    prop = count/sum(count),\n    percent = percent(prop, accuracy = 1),\n    lab = ifelse(prop &gt; 0.20, percent, \"\")  # only show label if &gt;20% for readability\n  )\n\np3 &lt;- ggplot(pie_data, aes(x = \"\", y = prop, fill = RACE)) +\n  geom_col(width = 1, color = \"white\", show.legend = TRUE) +  # white borders\n  coord_polar(theta = \"y\") +\n  facet_wrap(~CLASS, ncol = 3) +\n  geom_text(\n    aes(label = lab),\n    position = position_stack(vjust = 0.6),\n    size = 2.5,\n    color = \"black\"\n  ) +\n  scale_fill_brewer(palette = \"Pastel1\") +\n  labs(title = \"Pie Chart: Race Proportion by Class\", x = NULL, y = NULL, fill = \"Race\") +\n  theme_excel(base_size = 10) +\n  theme(\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    panel.grid = element_blank(),\n    strip.text = element_text(size = 10, face = \"bold\"),\n    plot.title = element_text(size = 12, face = \"bold\", hjust = 0.5)\n  )\n\np3"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#raincloud-plot-score-distribution-by-subject-malay-students",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#raincloud-plot-score-distribution-by-subject-malay-students",
    "title": "Hands-on_Ex02",
    "section": "4. Raincloud plot: Score Distribution by Subject (Malay Students)",
    "text": "4. Raincloud plot: Score Distribution by Subject (Malay Students)\n\nlibrary(dplyr)\n\nmalay_data &lt;- exam_data %&gt;%\n  filter(RACE == \"Malay\")\n\nlibrary(tidyr)\n\nmalay_long &lt;- malay_data %&gt;%\n  pivot_longer(\n    cols = c(ENGLISH, MATHS, SCIENCE),\n    names_to = \"Subject\",\n    values_to = \"Score\"\n  )\n\nlibrary(ggplot2)\nlibrary(ggdist)\n\nggplot(malay_long, aes(x = Score, y = Subject, fill = Subject, color = Subject)) +\n  ggdist::stat_halfeye(\n    adjust = 0.6,\n    width = 0.7,\n    .width = 0,\n    justification = -0.2,\n    point_color = NA,\n    alpha = 0.5\n  ) +\n  geom_boxplot(\n    width = 0.15,\n    outlier.shape = NA,\n    alpha = 0.7,\n    position = position_nudge(x = 0.15)\n  ) +\n  geom_jitter(\n    width = 0.12,\n    size = 1.6,\n    alpha = 0.5\n  ) +\n  labs(\n    title = \"Raincloud Plot: Scores by Subject (Malay Students)\",\n    x = \"Score\",\n    y = \"Subject\"\n  ) +\n  scale_fill_brewer(palette = \"Set2\") +\n  scale_color_brewer(palette = \"Set2\") +\n  theme_clean()"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This website showcases my coursework from the Visual Analytics and Applications module during my Master’s program at Singapore Management University."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#installing-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#installing-and-launching-r-packages",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "exam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-simple-bar-chart",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-simple-bar-chart",
    "title": "Hands-on Exercise 1",
    "section": "Plotting a simple bar chart",
    "text": "Plotting a simple bar chart\n\nggplot(data = exam_data,\n       aes(x=RACE)) +\n  geom_bar()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-dot-plot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-dot-plot",
    "title": "Hands-on Exercise 1",
    "section": "Plotting a dot plot",
    "text": "Plotting a dot plot\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\n\n\n\n\nTurn off the y-axis and add binwidth argument\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-histogram",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-histogram",
    "title": "Hands-on Exercise 1",
    "section": "Plotting a histogram",
    "text": "Plotting a histogram\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()       \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\nChange number of bins, fill, and outline color\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")  \n\n\n\n\n\n\n\n\nChange aes() for sub-group\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-kernel-density-estimate",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-kernel-density-estimate",
    "title": "Hands-on Exercise 1",
    "section": "Plotting kernel density estimate",
    "text": "Plotting kernel density estimate\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()           \n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-boxplot",
    "title": "Hands-on Exercise 1",
    "section": "Plotting a boxplot",
    "text": "Plotting a boxplot\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-notched-plot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-notched-plot",
    "title": "Hands-on Exercise 1",
    "section": "Plotting a notched plot",
    "text": "Plotting a notched plot\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-violin-plot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-violin-plot",
    "title": "Hands-on Exercise 1",
    "section": "Plotting a violin plot",
    "text": "Plotting a violin plot\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-scatterplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-scatterplot",
    "title": "Hands-on Exercise 1",
    "section": "Plotting a scatterplot",
    "text": "Plotting a scatterplot\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#combined-plot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#combined-plot",
    "title": "Hands-on Exercise 1",
    "section": "Combined plot",
    "text": "Combined plot\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#add-mean-value",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#add-mean-value",
    "title": "Hands-on Exercise 1",
    "section": "Add mean value",
    "text": "Add mean value\nstat_summary( ) method\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun = \"mean\",         \n               colour =\"red\",        \n               size=4)               \n\n\n\n\n\n\n\n\ngeom( ) method\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour=\"red\",          \n             size=4)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#add-best-fit-curve",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#add-best-fit-curve",
    "title": "Hands-on Exercise 1",
    "section": "Add best fit curve",
    "text": "Add best fit curve\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_wrap-method",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_wrap-method",
    "title": "Hands-on Exercise 1",
    "section": "facet_wrap method",
    "text": "facet_wrap method\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_grid-method",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_grid-method",
    "title": "Hands-on Exercise 1",
    "section": "facet_grid method",
    "text": "facet_grid method\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#flip-horizontal-bar-chart-into-vertical-bar-chart",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#flip-horizontal-bar-chart-into-vertical-bar-chart",
    "title": "Hands-on Exercise 1",
    "section": "Flip horizontal bar chart into vertical bar chart",
    "text": "Flip horizontal bar chart into vertical bar chart\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#change-y--and-x-axis-range",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#change-y--and-x-axis-range",
    "title": "Hands-on Exercise 1",
    "section": "Change y- and x-axis range",
    "text": "Change y- and x-axis range\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on Exercise 03",
    "section": "",
    "text": "pacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse) \n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\n\n\n\n\ntooltip_css &lt;- \"background-color:white; #&lt;&lt;\nfont-style:bold; color:black;\" #&lt;&lt;\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)                                        \n\n\n\n\n\n\n\n\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)                                        \n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\n\n\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)                                        \n\n\n\n\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))\n\n\n\n\n\n\n\n\n\n\n\n\nDT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#getting-started",
    "title": "Hands-on Exercise 03",
    "section": "",
    "text": "pacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse) \n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation---ggiraph-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation---ggiraph-methods",
    "title": "Hands-on Exercise 03",
    "section": "",
    "text": "p &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\n\n\n\n\ntooltip_css &lt;- \"background-color:white; #&lt;&lt;\nfont-style:bold; color:black;\" #&lt;&lt;\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)                                        \n\n\n\n\n\n\n\n\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)                                        \n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\n\n\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)                                        \n\n\n\n\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation---plotly-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation---plotly-methods",
    "title": "Hands-on Exercise 03",
    "section": "",
    "text": "plot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation---crosstalk-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-visualisation---crosstalk-methods",
    "title": "Hands-on Exercise 03",
    "section": "",
    "text": "DT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#getting-started-1",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#getting-started-1",
    "title": "Hands-on Exercise 03",
    "section": "Getting started",
    "text": "Getting started\n\nInstall packages\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)\n\n\n\nImport data\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate(across(col, as.factor)) %&gt;%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#animated-data-visualisation-gganimate-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#animated-data-visualisation-gganimate-methods",
    "title": "Hands-on Exercise 03",
    "section": "Animated Data Visualisation: gganimate methods",
    "text": "Animated Data Visualisation: gganimate methods\n\nBuilding a static population bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') \n\n\n\n\n\n\n\n\n\n\nBuilding the animated bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#animated-data-visualisation-plotly",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#animated-data-visualisation-plotly",
    "title": "Hands-on Exercise 03",
    "section": "Animated Data Visualisation: plotly",
    "text": "Animated Data Visualisation: plotly\n\nBuilding an animated bubble plot: ggplotly() method\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\nTurn off legends\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)\n\n\n\n\n\n\n\nBuilding an animated bubble plot: plot_ly() method\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "title": "Hands-on_Ex05",
    "section": "",
    "text": "pacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts, \n               concaveman, ggforce)\n\n\n\n\n\nGAStech_nodes &lt;- read_csv(\"GAStech_email_node.csv\")\nGAStech_edges &lt;- read_csv(\"GAStech_email_edge-v2.csv\")\n\n\n\n\n\nglimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 8\n$ source      &lt;dbl&gt; 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      &lt;dbl&gt; 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    &lt;chr&gt; \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    &lt;time&gt; 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     &lt;chr&gt; \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject &lt;chr&gt; \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel &lt;chr&gt; \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel &lt;chr&gt; \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n\n\n\n\n\n\n\n\nGAStech_edges &lt;- GAStech_edges %&gt;%\n  mutate(SendDate = dmy(SentDate)) %&gt;%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\n\n\nglimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 10\n$ source      &lt;dbl&gt; 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      &lt;dbl&gt; 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    &lt;chr&gt; \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    &lt;time&gt; 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     &lt;chr&gt; \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject &lt;chr&gt; \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel &lt;chr&gt; \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel &lt;chr&gt; \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n$ SendDate    &lt;date&gt; 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-0…\n$ Weekday     &lt;ord&gt; Friday, Friday, Friday, Friday, Friday, Friday, Friday, Fr…\n\n\n\n\n\n\nGAStech_edges_aggregated &lt;- GAStech_edges %&gt;%\n  filter(MainSubject == \"Work related\") %&gt;%\n  group_by(source, target, Weekday) %&gt;%\n    summarise(Weight = n()) %&gt;%\n  filter(source!=target) %&gt;%\n  filter(Weight &gt; 1) %&gt;%\n  ungroup()\n\n\nglimpse(GAStech_edges_aggregated)\n\nRows: 1,372\nColumns: 4\n$ source  &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ target  &lt;dbl&gt; 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6,…\n$ Weekday &lt;ord&gt; Sunday, Monday, Tuesday, Wednesday, Friday, Sunday, Monday, Tu…\n$ Weight  &lt;int&gt; 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5,…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#install-and-launch-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#install-and-launch-r-packages",
    "title": "Hands-on_Ex05",
    "section": "",
    "text": "pacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts, \n               concaveman, ggforce)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#import-network-data",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#import-network-data",
    "title": "Hands-on_Ex05",
    "section": "",
    "text": "GAStech_nodes &lt;- read_csv(\"GAStech_email_node.csv\")\nGAStech_edges &lt;- read_csv(\"GAStech_email_edge-v2.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#review-the-imported-data",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#review-the-imported-data",
    "title": "Hands-on_Ex05",
    "section": "",
    "text": "glimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 8\n$ source      &lt;dbl&gt; 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      &lt;dbl&gt; 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    &lt;chr&gt; \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    &lt;time&gt; 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     &lt;chr&gt; \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject &lt;chr&gt; \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel &lt;chr&gt; \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel &lt;chr&gt; \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#data-wrangling",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#data-wrangling",
    "title": "Hands-on_Ex05",
    "section": "",
    "text": "GAStech_edges &lt;- GAStech_edges %&gt;%\n  mutate(SendDate = dmy(SentDate)) %&gt;%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\n\n\nglimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 10\n$ source      &lt;dbl&gt; 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      &lt;dbl&gt; 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    &lt;chr&gt; \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    &lt;time&gt; 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     &lt;chr&gt; \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject &lt;chr&gt; \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel &lt;chr&gt; \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel &lt;chr&gt; \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n$ SendDate    &lt;date&gt; 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-0…\n$ Weekday     &lt;ord&gt; Friday, Friday, Friday, Friday, Friday, Friday, Friday, Fr…\n\n\n\n\n\n\nGAStech_edges_aggregated &lt;- GAStech_edges %&gt;%\n  filter(MainSubject == \"Work related\") %&gt;%\n  group_by(source, target, Weekday) %&gt;%\n    summarise(Weight = n()) %&gt;%\n  filter(source!=target) %&gt;%\n  filter(Weight &gt; 1) %&gt;%\n  ungroup()\n\n\nglimpse(GAStech_edges_aggregated)\n\nRows: 1,372\nColumns: 4\n$ source  &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ target  &lt;dbl&gt; 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6,…\n$ Weekday &lt;ord&gt; Sunday, Monday, Tuesday, Wednesday, Friday, Sunday, Monday, Tu…\n$ Weight  &lt;int&gt; 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5,…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#using-tbl_graph-to-build-tidygraph-data-model",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#using-tbl_graph-to-build-tidygraph-data-model",
    "title": "Hands-on_Ex05",
    "section": "Using tbl_graph() to build tidygraph data model",
    "text": "Using tbl_graph() to build tidygraph data model\n\nGAStech_graph &lt;- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)\n\nGAStech_graph\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# Node Data: 54 × 4 (active)\n      id label               Department     Title                               \n   &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;          &lt;chr&gt;                               \n 1     1 Mat.Bramar          Administration Assistant to CEO                    \n 2     2 Anda.Ribera         Administration Assistant to CFO                    \n 3     3 Rachel.Pantanal     Administration Assistant to CIO                    \n 4     4 Linda.Lagos         Administration Assistant to COO                    \n 5     5 Ruscella.Mies.Haber Administration Assistant to Engineering Group Mana…\n 6     6 Carla.Forluniau     Administration Assistant to IT Group Manager       \n 7     7 Cornelia.Lais       Administration Assistant to Security Group Manager \n 8    44 Kanon.Herrero       Security       Badging Office                      \n 9    45 Varja.Lagos         Security       Badging Office                      \n10    46 Stenig.Fusil        Security       Building Control                    \n# ℹ 44 more rows\n#\n# Edge Data: 1,372 × 4\n   from    to Weekday Weight\n  &lt;int&gt; &lt;int&gt; &lt;ord&gt;    &lt;int&gt;\n1     1     2 Sunday       5\n2     1     2 Monday       2\n3     1     2 Tuesday      3\n# ℹ 1,369 more rows"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-active-object",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-active-object",
    "title": "Hands-on_Ex05",
    "section": "Changing the active object",
    "text": "Changing the active object\n\nGAStech_graph %&gt;%\n  activate(edges) %&gt;%\n  arrange(desc(Weight))\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# Edge Data: 1,372 × 4 (active)\n    from    to Weekday   Weight\n   &lt;int&gt; &lt;int&gt; &lt;ord&gt;      &lt;int&gt;\n 1    40    41 Saturday      13\n 2    41    43 Monday        11\n 3    35    31 Tuesday       10\n 4    40    41 Monday        10\n 5    40    43 Monday        10\n 6    36    32 Sunday         9\n 7    40    43 Saturday       9\n 8    41    40 Monday         9\n 9    19    15 Wednesday      8\n10    35    38 Tuesday        8\n# ℹ 1,362 more rows\n#\n# Node Data: 54 × 4\n     id label           Department     Title           \n  &lt;dbl&gt; &lt;chr&gt;           &lt;chr&gt;          &lt;chr&gt;           \n1     1 Mat.Bramar      Administration Assistant to CEO\n2     2 Anda.Ribera     Administration Assistant to CFO\n3     3 Rachel.Pantanal Administration Assistant to CIO\n# ℹ 51 more rows"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-a-basic-network-graph",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-a-basic-network-graph",
    "title": "Hands-on_Ex05",
    "section": "Plotting a basic network graph",
    "text": "Plotting a basic network graph\n\nggraph(GAStech_graph) +\n  geom_edge_link() +\n  geom_node_point()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-default-network-graph-theme",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-default-network-graph-theme",
    "title": "Hands-on_Ex05",
    "section": "Changing the default network graph theme",
    "text": "Changing the default network graph theme\n\ng &lt;- ggraph(GAStech_graph) + \n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-coloring-of-the-plot",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-coloring-of-the-plot",
    "title": "Hands-on_Ex05",
    "section": "Changing the coloring of the plot",
    "text": "Changing the coloring of the plot\n\ng &lt;- ggraph(GAStech_graph) + \n  geom_edge_link(aes(colour = 'grey50')) +\n  geom_node_point(aes(colour = 'grey40'))\n\ng + theme_graph(background = 'grey10',\n                text_colour = 'white')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-ggraphs-layouts",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-ggraphs-layouts",
    "title": "Hands-on_Ex05",
    "section": "Working with ggraph’s layouts",
    "text": "Working with ggraph’s layouts\n\nSample layouts (self-practice)\n\ng1 &lt;- ggraph(GAStech_graph, layout=\"star\") + \n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng2 &lt;- ggraph(GAStech_graph, layout=\"gem\") + \n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng3 &lt;- ggraph(GAStech_graph, layout=\"grid\") + \n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\nprint(g1)\n\n\n\n\n\n\n\n\n\nprint(g2)\n\n\n\n\n\n\n\n\n\nprint(g3)\n\n\n\n\n\n\n\n\n\n\nFruchterman and Reingold layout\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"fr\") +\n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#modifying-network-nodes",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#modifying-network-nodes",
    "title": "Hands-on_Ex05",
    "section": "Modifying network nodes",
    "text": "Modifying network nodes\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes()) +\n  geom_node_point(aes(colour = Department, \n                      size = 3))\n\ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#modifying-edges",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#modifying-edges",
    "title": "Hands-on_Ex05",
    "section": "Modifying edges",
    "text": "Modifying edges\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 3)\n\ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_edges",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_edges",
    "title": "Hands-on_Ex05",
    "section": "Working with facet_edges()",
    "text": "Working with facet_edges()\n\nset_graph_style()\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n\ng + facet_edges(~Weekday)\n\n\n\n\n\n\n\n\nChange position of the legend\n\nset_graph_style()\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2) +\n  theme(legend.position = 'bottom')\n  \ng + facet_edges(~Weekday)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#a-framed-facet-graph",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#a-framed-facet-graph",
    "title": "Hands-on_Ex05",
    "section": "A framed facet graph",
    "text": "A framed facet graph\n\nset_graph_style() \n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_edges(~Weekday) +\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_nodes",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_nodes",
    "title": "Hands-on_Ex05",
    "section": "Working with facet_nodes()",
    "text": "Working with facet_nodes()\n\nset_graph_style()\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_nodes(~Department)+\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#computing-centrality-indices",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#computing-centrality-indices",
    "title": "Hands-on_Ex05",
    "section": "Computing centrality indices",
    "text": "Computing centrality indices\n\ng &lt;- GAStech_graph %&gt;%\n  mutate(betweenness_centrality = centrality_betweenness()) %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department,\n            size=betweenness_centrality))\ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualising-network-metrics",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualising-network-metrics",
    "title": "Hands-on_Ex05",
    "section": "Visualising network metrics",
    "text": "Visualising network metrics\n\ng &lt;- GAStech_graph %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department, \n                      size = centrality_betweenness()))\ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualising-community",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualising-community",
    "title": "Hands-on_Ex05",
    "section": "Visualising Community",
    "text": "Visualising Community\n\ng &lt;- GAStech_graph %&gt;%\n  mutate(community = as.factor(\n    group_edge_betweenness(\n      weights = Weight, \n      directed = TRUE))) %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(\n    aes(\n      width=Weight), \n    alpha=0.2) +\n  scale_edge_width(\n    range = c(0.1, 5)) +\n  geom_node_point(\n    aes(colour = community))  \n\ng + theme_graph()\n\n\n\n\n\n\n\n\nRevised version\n\ng &lt;- GAStech_graph %&gt;%\n  activate(nodes) %&gt;%\n  mutate(community = as.factor(\n    group_optimal(weights = Weight)),\n         betweenness_measure = centrality_betweenness()) %&gt;%\n  ggraph(layout = \"fr\") +\n  geom_mark_hull(\n    aes(x, y, \n        group = community, \n        fill = community),  \n    alpha = 0.2,  \n    expand = unit(0.3, \"cm\"),  # Expand\n    radius = unit(0.3, \"cm\")  # Smoothness\n  ) + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(fill = Department,\n                      size = betweenness_measure),\n                      color = \"black\",\n                      shape = 21)\n  \ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#data-preparation",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#data-preparation",
    "title": "Hands-on_Ex05",
    "section": "Data preparation",
    "text": "Data preparation\n\nGAStech_edges_aggregated &lt;- GAStech_edges %&gt;%\n  left_join(GAStech_nodes, by = c(\"sourceLabel\" = \"label\")) %&gt;%\n  rename(from = id) %&gt;%\n  left_join(GAStech_nodes, by = c(\"targetLabel\" = \"label\")) %&gt;%\n  rename(to = id) %&gt;%\n  filter(MainSubject == \"Work related\") %&gt;%\n  group_by(from, to) %&gt;%\n    summarise(weight = n()) %&gt;%\n  filter(from!=to) %&gt;%\n  filter(weight &gt; 1) %&gt;%\n  ungroup()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-the-first-interactive-network-graph",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-the-first-interactive-network-graph",
    "title": "Hands-on_Ex05",
    "section": "Plotting the first interactive network graph",
    "text": "Plotting the first interactive network graph\n\nvisNetwork(GAStech_nodes, \n           GAStech_edges_aggregated)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-layout",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-layout",
    "title": "Hands-on_Ex05",
    "section": "Working with layout",
    "text": "Working with layout\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") \n\n\n\n\n\n\nSelf-practice\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated, \n           height = \"500px\") %&gt;%\n  visIgraphLayout(layout = \"layout_in_circle\") %&gt;%\n  visNodes(size = 10) %&gt;%\n  visOptions(highlightNearest = list(enabled = T, hover = T), \n             nodesIdSelection = T)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-visual-attributes---nodes",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-visual-attributes---nodes",
    "title": "Hands-on_Ex05",
    "section": "Working with visual attributes - Nodes",
    "text": "Working with visual attributes - Nodes\n\nGAStech_nodes &lt;- GAStech_nodes %&gt;%\n  rename(group = Department) \n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-visual-attributes---edges",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-visual-attributes---edges",
    "title": "Hands-on_Ex05",
    "section": "Working with visual attributes - Edges",
    "text": "Working with visual attributes - Edges\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#interactivity",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#interactivity",
    "title": "Hands-on_Ex05",
    "section": "Interactivity",
    "text": "Interactivity\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_P1.html",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_P1.html",
    "title": "Hands-on Exercise 8 - Part 1",
    "section": "",
    "text": "pacman::p_load(sf, tmap, tidyverse)\n\n\n\n\n\n\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\Mylaptop\\OneDrive\\Documents\\trangqd\\ISSS608-VAA\\Hands-on_Ex\\Hands-on_Ex08\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\nmpsz\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n\n\n\n\n\n\npopdata &lt;- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")\n\n\n\n\n\npopdata2020 &lt;- popdata %&gt;%\n  filter(Time == 2020) %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup() %&gt;%\n  pivot_wider(names_from=AG, \n              values_from=POP) %&gt;%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %&gt;%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%&gt;%\nmutate(`AGED`=rowSums(.[16:21])) %&gt;%\nmutate(`TOTAL`=rowSums(.[3:21])) %&gt;%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %&gt;%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n\n\n\n\n\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate(across(c(PA, SZ), toupper)) %&gt;%\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(fill = \"DEPENDENCY\", \n              fill.scale = tm_scale_intervals(\n                style = \"quantile\",\n                n = 5,\n                values = \"brewer.blues\"),\n              fill.legend = tm_legend(\n                title = \"Dependency ratio\")) +\n  tm_title(\"Distribution of Dependency Ratio by planning subzone\") +\n  tm_layout(frame = TRUE) +\n  tm_borders(fill_alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020) +\n  tm_polygons()\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(fill = \"DEPENDENCY\") +\n  tm_borders(lwd = 0.01,  \n             fill_alpha = 0.1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nn=5\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"jenks\",\n        n = 5)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\nn=3\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"jenks\",\n        n = 3)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\nn=10\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"jenks\",\n        n = 10)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\nn=20\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"jenks\",\n        n = 20)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\nObservation: increasing the number of classes reveals more spatial detail and variation, while fewer classes provide a more simplified, high-level view. As the number of classes increases (Maps 3 and 4), subtle differences in dependency ratios become more visible, allowing for more granular insights. However, this comes with a trade-off, showing more complex legends and overwhelming detail.\n\n\n\n\nequal method\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"equal\",\n        n = 5)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\nquantile method\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"quantile\",\n        n = 5)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\nkmeans method\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"kmeans\",\n        n = 5)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\nbclust method\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"bclust\",\n        n = 5)) +\n  tm_borders(fill_alpha = 0.5)\n\nCommittee Member: 1(1) 2(1) 3(1) 4(1) 5(1) 6(1) 7(1) 8(1) 9(1) 10(1)\nComputing Hierarchical Clustering\n\n\n\n\n\n\n\n\n\nObservation: For mapping dependency ratios, Jenks and Quantile are the most suitable methods. Jenks highlights natural groupings in skewed data, making it ideal for identifying areas with unusually high dependency. Quantile ensures equal numbers of areas per class, offering balanced visual representation, but it may group dissimilar values. Equal interval is not effective since the data is unevenly distributed, as it can obscure variation. K-means creates statistically distinct clusters but lacks interpretability. Bclust is least suitable, as it’s designed for binary or hierarchical clustering, not continuous spatial data.\n\n\n\n\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.1111  0.7147  0.7867  0.8585  0.8763 19.0000      92 \n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"quantile\",\n        n = 5,\n        values = \"brewer.greens\")) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\nReverse color scale\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"quantile\",\n        n = 5,\n        values = \"-brewer.greens\")) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"jenks\",\n        n = 5,\n        values = \"brewer.greens\"),\n      fill.legend = tm_legend(\n        title = \"Dependency ratio\")) +\n  tm_borders(fill_alpha = 0.5) +\n  tm_title(\"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\")\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(fill = \"DEPENDENCY\", \n              fill.scale = tm_scale_intervals(\n                style = \"quantile\",\n                n = 5,\n                values = \"brewer.blues\"),\n              fill.legend = tm_legend(\n                title = \"Dependency ratio\")) +\n  tm_title(\"Distribution of Dependency Ratio by planning subzone\") +\n  tm_layout(frame = TRUE) +\n  tm_borders(fill_alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\n\n\n\nDefine ncols in tm_fill()\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\n\n\n\n\n\n\n\nAssign multiple values to at least one of the aesthetic arguments\n\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))\n\n\n\n\n\n\n\n\nUse tm_facets()\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\nCreate multiple stand-alone maps with tmap_arrange()\n\nyoungmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_P1.html#load-necessary-packages",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_P1.html#load-necessary-packages",
    "title": "Hands-on Exercise 8 - Part 1",
    "section": "",
    "text": "pacman::p_load(sf, tmap, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_P1.html#import-data",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_P1.html#import-data",
    "title": "Hands-on Exercise 8 - Part 1",
    "section": "",
    "text": "mpsz &lt;- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\Mylaptop\\OneDrive\\Documents\\trangqd\\ISSS608-VAA\\Hands-on_Ex\\Hands-on_Ex08\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\nmpsz\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n\n\n\n\n\n\npopdata &lt;- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")\n\n\n\n\n\npopdata2020 &lt;- popdata %&gt;%\n  filter(Time == 2020) %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup() %&gt;%\n  pivot_wider(names_from=AG, \n              values_from=POP) %&gt;%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %&gt;%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%&gt;%\nmutate(`AGED`=rowSums(.[16:21])) %&gt;%\nmutate(`TOTAL`=rowSums(.[3:21])) %&gt;%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %&gt;%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n\n\n\n\n\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate(across(c(PA, SZ), toupper)) %&gt;%\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_P1.html#choropleth-mapping-geospatial-data-using-tmap",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_P1.html#choropleth-mapping-geospatial-data-using-tmap",
    "title": "Hands-on Exercise 8 - Part 1",
    "section": "",
    "text": "tmap_mode(\"plot\")\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(fill = \"DEPENDENCY\", \n              fill.scale = tm_scale_intervals(\n                style = \"quantile\",\n                n = 5,\n                values = \"brewer.blues\"),\n              fill.legend = tm_legend(\n                title = \"Dependency ratio\")) +\n  tm_title(\"Distribution of Dependency Ratio by planning subzone\") +\n  tm_layout(frame = TRUE) +\n  tm_borders(fill_alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020) +\n  tm_polygons()\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(fill = \"DEPENDENCY\") +\n  tm_borders(lwd = 0.01,  \n             fill_alpha = 0.1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nn=5\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"jenks\",\n        n = 5)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\nn=3\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"jenks\",\n        n = 3)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\nn=10\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"jenks\",\n        n = 10)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\nn=20\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"jenks\",\n        n = 20)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\nObservation: increasing the number of classes reveals more spatial detail and variation, while fewer classes provide a more simplified, high-level view. As the number of classes increases (Maps 3 and 4), subtle differences in dependency ratios become more visible, allowing for more granular insights. However, this comes with a trade-off, showing more complex legends and overwhelming detail.\n\n\n\n\nequal method\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"equal\",\n        n = 5)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\nquantile method\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"quantile\",\n        n = 5)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\nkmeans method\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"kmeans\",\n        n = 5)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\nbclust method\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"bclust\",\n        n = 5)) +\n  tm_borders(fill_alpha = 0.5)\n\nCommittee Member: 1(1) 2(1) 3(1) 4(1) 5(1) 6(1) 7(1) 8(1) 9(1) 10(1)\nComputing Hierarchical Clustering\n\n\n\n\n\n\n\n\n\nObservation: For mapping dependency ratios, Jenks and Quantile are the most suitable methods. Jenks highlights natural groupings in skewed data, making it ideal for identifying areas with unusually high dependency. Quantile ensures equal numbers of areas per class, offering balanced visual representation, but it may group dissimilar values. Equal interval is not effective since the data is unevenly distributed, as it can obscure variation. K-means creates statistically distinct clusters but lacks interpretability. Bclust is least suitable, as it’s designed for binary or hierarchical clustering, not continuous spatial data.\n\n\n\n\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.1111  0.7147  0.7867  0.8585  0.8763 19.0000      92 \n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"quantile\",\n        n = 5,\n        values = \"brewer.greens\")) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\nReverse color scale\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"quantile\",\n        n = 5,\n        values = \"-brewer.greens\")) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"jenks\",\n        n = 5,\n        values = \"brewer.greens\"),\n      fill.legend = tm_legend(\n        title = \"Dependency ratio\")) +\n  tm_borders(fill_alpha = 0.5) +\n  tm_title(\"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\")\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(fill = \"DEPENDENCY\", \n              fill.scale = tm_scale_intervals(\n                style = \"quantile\",\n                n = 5,\n                values = \"brewer.blues\"),\n              fill.legend = tm_legend(\n                title = \"Dependency ratio\")) +\n  tm_title(\"Distribution of Dependency Ratio by planning subzone\") +\n  tm_layout(frame = TRUE) +\n  tm_borders(fill_alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\n\n\n\nDefine ncols in tm_fill()\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\n\n\n\n\n\n\n\nAssign multiple values to at least one of the aesthetic arguments\n\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))\n\n\n\n\n\n\n\n\nUse tm_facets()\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\nCreate multiple stand-alone maps with tmap_arrange()\n\nyoungmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_P3.html",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_P3.html",
    "title": "Hands-on Exercise 8 - Part 3",
    "section": "",
    "text": "pacman::p_load(tmap, tidyverse, sf)\n\n\n\n\n\nNGA_wp &lt;- read_rds(\"data/rds/NGA_wp.rds\")\n\n\n\n\n\n\n\np1 &lt;- tm_shape(NGA_wp) +\n  tm_polygons(fill = \"wp_functional\",\n             fill.scale = tm_scale_intervals(\n               style = \"equal\",\n               n = 10,\n               values = \"brewer.blues\"),\n             fill.legend = tm_legend(\n               position = c(\"right\", \"bottom\"))) +\n  tm_borders(lwd = 0.1,\n             fill_alpha = 1) +\n  tm_title(\"Distribution of functional water point by LGAs\")\n\np2 &lt;- tm_shape(NGA_wp) + \n  tm_polygons(fill = \"total_wp\", \n              fill.scale = tm_scale_intervals(\n                style = \"equal\",\n                n = 10,\n                values = \"brewer.blues\"),\n              fill.legend = tm_legend(\n                position = c(\"right\", \"bottom\"))) +\n  tm_borders(lwd = 0.1, \n             fill_alpha = 1) + \n  tm_title(\"Distribution of total  water point by LGAs\")\n\ntmap_arrange(p2, p1, nrow = 1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNGA_wp &lt;- NGA_wp %&gt;%\n  mutate(pct_functional = wp_functional/total_wp) %&gt;%\n  mutate(pct_nonfunctional = wp_nonfunctional/total_wp)\n\n\n\n\n\ntm_shape(NGA_wp) +\n  tm_polygons(\"pct_functional\",\n              fill.scale = tm_scale_intervals(\n                style = \"equal\",\n                n = 10,\n                values = \"brewer.blues\"),\n              fill.legend = tm_legend(\n                position = c(\"right\", \"bottom\"))) + \n  tm_borders(lwd = 0.1,\n             fill_alpha = 1) +\n  tm_title(\"Rate map of functional water point by LGAs\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Step 1: Exclude records with NA\nNGA_wp &lt;- NGA_wp %&gt;%\n  drop_na()\n\n# Step 2: Create customized classification and extract values\npercent &lt;- c(0,.01,.1,.5,.9,.99,1)\nvar &lt;- NGA_wp[\"pct_functional\"] %&gt;%\n  st_set_geometry(NULL)\nquantile(var[,1], percent)\n\n       0%        1%       10%       50%       90%       99%      100% \n0.0000000 0.0000000 0.2169811 0.4791667 0.8611111 1.0000000 1.0000000 \n\n\n\n\n\n\n# get.var function to extract variable\nget.var &lt;- function(vname,df) {\n  v &lt;- df[vname] %&gt;% \n    st_set_geometry(NULL)\n  v &lt;- unname(v[,1])\n  return(v)\n}\n\n# percentile mapping function\npercentmap &lt;- function(vnam, df, legtitle=NULL, mtitle=\"Percentile Map\"){\n  percent &lt;- c(0,.01,.1,.5,.9,.99,1)\n  var &lt;- get.var(vnam, df)\n  bperc &lt;- quantile(var, percent)\n  tm_shape(df) +\n  tm_polygons() +\n  tm_shape(df) +\n     tm_polygons(vnam,\n             title=legtitle,\n             breaks=bperc,\n             palette=\"Blues\",\n          labels=c(\"&lt; 1%\", \"1% - 10%\", \"10% - 50%\", \"50% - 90%\", \"90% - 99%\", \"&gt; 99%\"))  +\n  tm_borders() +\n  tm_title(mtitle)\n}\n\n\npercentmap(\"total_wp\", NGA_wp)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = NGA_wp,\n       aes(x = \"\",\n           y = wp_nonfunctional)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\n\n\n\nboxbreaks &lt;- function(v,mult=1.5) {\n  qv &lt;- unname(quantile(v))\n  iqr &lt;- qv[4] - qv[2]\n  upfence &lt;- qv[4] + mult * iqr\n  lofence &lt;- qv[2] - mult * iqr\n  # initialize break points vector\n  bb &lt;- vector(mode=\"numeric\",length=7)\n  # logic for lower and upper fences\n  if (lofence &lt; qv[1]) {  # no lower outliers\n    bb[1] &lt;- lofence\n    bb[2] &lt;- floor(qv[1])\n  } else {\n    bb[2] &lt;- lofence\n    bb[1] &lt;- qv[1]\n  }\n  if (upfence &gt; qv[5]) { # no upper outliers\n    bb[7] &lt;- upfence\n    bb[6] &lt;- ceiling(qv[5])\n  } else {\n    bb[6] &lt;- upfence\n    bb[7] &lt;- qv[5]\n  }\n  bb[3:5] &lt;- qv[2:4]\n  return(bb)\n}\n\n\n\n\n\nget.var &lt;- function(vname,df) {\n  v &lt;- df[vname] %&gt;% st_set_geometry(NULL)\n  v &lt;- unname(v[,1])\n  return(v)}\n\nvar &lt;- get.var(\"wp_nonfunctional\", NGA_wp) \nboxbreaks(var)\n\n[1] -56.5   0.0  14.0  34.0  61.0 131.5 278.0\n\n\n\n\n\n\nboxmap &lt;- function(vnam, df, \n                   legtitle=NA,\n                   mtitle=\"Box Map\",\n                   mult=1.5){\n  var &lt;- get.var(vnam,df)\n  bb &lt;- boxbreaks(var)\n  tm_shape(df) +\n    tm_polygons() +\n  tm_shape(df) +\n     tm_fill(vnam,title=legtitle,\n             breaks=bb,\n             palette=\"Blues\",\n          labels = c(\"lower outlier\", \n                     \"&lt; 25%\", \n                     \"25% - 50%\", \n                     \"50% - 75%\",\n                     \"&gt; 75%\", \n                     \"upper outlier\"))  +\n  tm_borders() +\n  tm_layout(main.title = mtitle, \n            title.position = c(\"left\",\n                               \"top\"))\n}\n\ntmap_mode(\"plot\")\nboxmap(\"wp_nonfunctional\", NGA_wp)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_P3.html#load-packages",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_P3.html#load-packages",
    "title": "Hands-on Exercise 8 - Part 3",
    "section": "",
    "text": "pacman::p_load(tmap, tidyverse, sf)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_P3.html#import-data",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_P3.html#import-data",
    "title": "Hands-on Exercise 8 - Part 3",
    "section": "",
    "text": "NGA_wp &lt;- read_rds(\"data/rds/NGA_wp.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_P3.html#basic-choropleth-mapping",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_P3.html#basic-choropleth-mapping",
    "title": "Hands-on Exercise 8 - Part 3",
    "section": "",
    "text": "p1 &lt;- tm_shape(NGA_wp) +\n  tm_polygons(fill = \"wp_functional\",\n             fill.scale = tm_scale_intervals(\n               style = \"equal\",\n               n = 10,\n               values = \"brewer.blues\"),\n             fill.legend = tm_legend(\n               position = c(\"right\", \"bottom\"))) +\n  tm_borders(lwd = 0.1,\n             fill_alpha = 1) +\n  tm_title(\"Distribution of functional water point by LGAs\")\n\np2 &lt;- tm_shape(NGA_wp) + \n  tm_polygons(fill = \"total_wp\", \n              fill.scale = tm_scale_intervals(\n                style = \"equal\",\n                n = 10,\n                values = \"brewer.blues\"),\n              fill.legend = tm_legend(\n                position = c(\"right\", \"bottom\"))) +\n  tm_borders(lwd = 0.1, \n             fill_alpha = 1) + \n  tm_title(\"Distribution of total  water point by LGAs\")\n\ntmap_arrange(p2, p1, nrow = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_P3.html#choropleth-map-for-rates",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_P3.html#choropleth-map-for-rates",
    "title": "Hands-on Exercise 8 - Part 3",
    "section": "",
    "text": "NGA_wp &lt;- NGA_wp %&gt;%\n  mutate(pct_functional = wp_functional/total_wp) %&gt;%\n  mutate(pct_nonfunctional = wp_nonfunctional/total_wp)\n\n\n\n\n\ntm_shape(NGA_wp) +\n  tm_polygons(\"pct_functional\",\n              fill.scale = tm_scale_intervals(\n                style = \"equal\",\n                n = 10,\n                values = \"brewer.blues\"),\n              fill.legend = tm_legend(\n                position = c(\"right\", \"bottom\"))) + \n  tm_borders(lwd = 0.1,\n             fill_alpha = 1) +\n  tm_title(\"Rate map of functional water point by LGAs\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_P3.html#extreme-value-maps",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_P3.html#extreme-value-maps",
    "title": "Hands-on Exercise 8 - Part 3",
    "section": "",
    "text": "# Step 1: Exclude records with NA\nNGA_wp &lt;- NGA_wp %&gt;%\n  drop_na()\n\n# Step 2: Create customized classification and extract values\npercent &lt;- c(0,.01,.1,.5,.9,.99,1)\nvar &lt;- NGA_wp[\"pct_functional\"] %&gt;%\n  st_set_geometry(NULL)\nquantile(var[,1], percent)\n\n       0%        1%       10%       50%       90%       99%      100% \n0.0000000 0.0000000 0.2169811 0.4791667 0.8611111 1.0000000 1.0000000 \n\n\n\n\n\n\n# get.var function to extract variable\nget.var &lt;- function(vname,df) {\n  v &lt;- df[vname] %&gt;% \n    st_set_geometry(NULL)\n  v &lt;- unname(v[,1])\n  return(v)\n}\n\n# percentile mapping function\npercentmap &lt;- function(vnam, df, legtitle=NULL, mtitle=\"Percentile Map\"){\n  percent &lt;- c(0,.01,.1,.5,.9,.99,1)\n  var &lt;- get.var(vnam, df)\n  bperc &lt;- quantile(var, percent)\n  tm_shape(df) +\n  tm_polygons() +\n  tm_shape(df) +\n     tm_polygons(vnam,\n             title=legtitle,\n             breaks=bperc,\n             palette=\"Blues\",\n          labels=c(\"&lt; 1%\", \"1% - 10%\", \"10% - 50%\", \"50% - 90%\", \"90% - 99%\", \"&gt; 99%\"))  +\n  tm_borders() +\n  tm_title(mtitle)\n}\n\n\npercentmap(\"total_wp\", NGA_wp)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_P3.html#box-map",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08_P3.html#box-map",
    "title": "Hands-on Exercise 8 - Part 3",
    "section": "",
    "text": "ggplot(data = NGA_wp,\n       aes(x = \"\",\n           y = wp_nonfunctional)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\n\n\n\nboxbreaks &lt;- function(v,mult=1.5) {\n  qv &lt;- unname(quantile(v))\n  iqr &lt;- qv[4] - qv[2]\n  upfence &lt;- qv[4] + mult * iqr\n  lofence &lt;- qv[2] - mult * iqr\n  # initialize break points vector\n  bb &lt;- vector(mode=\"numeric\",length=7)\n  # logic for lower and upper fences\n  if (lofence &lt; qv[1]) {  # no lower outliers\n    bb[1] &lt;- lofence\n    bb[2] &lt;- floor(qv[1])\n  } else {\n    bb[2] &lt;- lofence\n    bb[1] &lt;- qv[1]\n  }\n  if (upfence &gt; qv[5]) { # no upper outliers\n    bb[7] &lt;- upfence\n    bb[6] &lt;- ceiling(qv[5])\n  } else {\n    bb[6] &lt;- upfence\n    bb[7] &lt;- qv[5]\n  }\n  bb[3:5] &lt;- qv[2:4]\n  return(bb)\n}\n\n\n\n\n\nget.var &lt;- function(vname,df) {\n  v &lt;- df[vname] %&gt;% st_set_geometry(NULL)\n  v &lt;- unname(v[,1])\n  return(v)}\n\nvar &lt;- get.var(\"wp_nonfunctional\", NGA_wp) \nboxbreaks(var)\n\n[1] -56.5   0.0  14.0  34.0  61.0 131.5 278.0\n\n\n\n\n\n\nboxmap &lt;- function(vnam, df, \n                   legtitle=NA,\n                   mtitle=\"Box Map\",\n                   mult=1.5){\n  var &lt;- get.var(vnam,df)\n  bb &lt;- boxbreaks(var)\n  tm_shape(df) +\n    tm_polygons() +\n  tm_shape(df) +\n     tm_fill(vnam,title=legtitle,\n             breaks=bb,\n             palette=\"Blues\",\n          labels = c(\"lower outlier\", \n                     \"&lt; 25%\", \n                     \"25% - 50%\", \n                     \"50% - 75%\",\n                     \"&gt; 75%\", \n                     \"upper outlier\"))  +\n  tm_borders() +\n  tm_layout(main.title = mtitle, \n            title.position = c(\"left\",\n                               \"top\"))\n}\n\ntmap_mode(\"plot\")\nboxmap(\"wp_nonfunctional\", NGA_wp)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1 (Part 1)",
    "section": "",
    "text": "This study provides a comprehensive demographic analysis of Singapore, leveraging multiple visualizations to uncover patterns in population distribution, age structure, dependency ratios, and gender balance across regions and planning areas. The first section presents a suite of five integrated charts that offer both macro and micro perspectives on population distribution—highlighting regional totals, intra-regional variability, the number of administrative units, and the concentration of population within selected planning areas. The second section examines the population structure by age group across regions and quantifies the dependency ratio at the planning area level, which reflects the economic pressure placed on the working-age population by younger and older dependents. The third section investigates the variation in sex ratios across planning areas, identifying gender imbalances and regional trends.\nDataset used: Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex, June 2024"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#install-packages",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#install-packages",
    "title": "Take-home Exercise 1 (Part 1)",
    "section": "Install packages",
    "text": "Install packages\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse, tidytext, scales)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#import-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#import-data",
    "title": "Take-home Exercise 1 (Part 1)",
    "section": "Import data",
    "text": "Import data\n\ndata &lt;- read_csv(\"respopagesex2024.csv\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-discovery-and-cleaning",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-discovery-and-cleaning",
    "title": "Take-home Exercise 1 (Part 1)",
    "section": "Data Discovery and Cleaning",
    "text": "Data Discovery and Cleaning\n\n# Summary statistics\nsummary(data)\n\n      PA                 SZ                Age                Sex           \n Length:60424       Length:60424       Length:60424       Length:60424      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n      Pop              Time     \n Min.   :   0.0   Min.   :2024  \n 1st Qu.:   0.0   1st Qu.:2024  \n Median :  20.0   Median :2024  \n Mean   :  69.4   Mean   :2024  \n 3rd Qu.:  90.0   3rd Qu.:2024  \n Max.   :1180.0   Max.   :2024  \n\n# Count of missing values per column\ncolSums(is.na(data))\n\n  PA   SZ  Age  Sex  Pop Time \n   0    0    0    0    0    0 \n\n# Count of duplicated rows\nsum(duplicated(data))\n\n[1] 0\n\n# View duplicated rows (if any)\ndata[duplicated(data), ]\n\n# A tibble: 0 × 6\n# ℹ 6 variables: PA &lt;chr&gt;, SZ &lt;chr&gt;, Age &lt;chr&gt;, Sex &lt;chr&gt;, Pop &lt;dbl&gt;,\n#   Time &lt;dbl&gt;\n\n\nSummary interpretation:\n\nTotal observations: 60,424 rows. No missing values and duplicates were found.\nCurrent data types: PA, SZ, Age, Sex, Time are character. Pop and Time are numeric.\nIssues to be fixed:\n\n\nThe “Age” column is currently of type character due to the presence of the value “90 and Over”. To convert the column to numeric, this value is transformed into a numeric-compatible format. I replace this with “90” to ensure consistent analysis without assuming more than what the data provides.\n\n\n# Check unique values of Age column \nunique(data$Age)\n\n [1] \"0\"           \"1\"           \"2\"           \"3\"           \"4\"          \n [6] \"5\"           \"6\"           \"7\"           \"8\"           \"9\"          \n[11] \"10\"          \"11\"          \"12\"          \"13\"          \"14\"         \n[16] \"15\"          \"16\"          \"17\"          \"18\"          \"19\"         \n[21] \"20\"          \"21\"          \"22\"          \"23\"          \"24\"         \n[26] \"25\"          \"26\"          \"27\"          \"28\"          \"29\"         \n[31] \"30\"          \"31\"          \"32\"          \"33\"          \"34\"         \n[36] \"35\"          \"36\"          \"37\"          \"38\"          \"39\"         \n[41] \"40\"          \"41\"          \"42\"          \"43\"          \"44\"         \n[46] \"45\"          \"46\"          \"47\"          \"48\"          \"49\"         \n[51] \"50\"          \"51\"          \"52\"          \"53\"          \"54\"         \n[56] \"55\"          \"56\"          \"57\"          \"58\"          \"59\"         \n[61] \"60\"          \"61\"          \"62\"          \"63\"          \"64\"         \n[66] \"65\"          \"66\"          \"67\"          \"68\"          \"69\"         \n[71] \"70\"          \"71\"          \"72\"          \"73\"          \"74\"         \n[76] \"75\"          \"76\"          \"77\"          \"78\"          \"79\"         \n[81] \"80\"          \"81\"          \"82\"          \"83\"          \"84\"         \n[86] \"85\"          \"86\"          \"87\"          \"88\"          \"89\"         \n[91] \"90_and_Over\"\n\n\n\n# Convert Age to numeric\ndata &lt;- data %&gt;%\n  mutate(Age = if_else(Age == \"90_and_Over\", \"90\", Age)) %&gt;%  # Replace string with number\n  mutate(Age = as.numeric(Age))  # Convert to numeric\n\n# Check the new data type\nclass(data$Age)\n\n[1] \"numeric\"\n\n\n\nChange column names for “PA”, “SZ”, and “Pop” to enhance clarity and readability.\n\n\n# Rename columns\ndata &lt;- data %&gt;%\n  rename(\n    Planning_Area = PA,\n    Sub_Zone = SZ,\n    Population = Pop\n  )\n\n\nRemove unnecessary column “Time” since all values are 2024 - the year in which the data was collected.\n\n\ndata &lt;- data %&gt;% select(-Time)\n\n\nRemove planning areas with 0 population since they don’t contribute any demographic information (no age, sex data to analyze). These areas might be undeveloped, industrial, or restricted areas.\n\n\ndata &lt;- data %&gt;%\n  filter(Population &gt; 0)\n\ndata %&gt;%\n  group_by(Planning_Area) %&gt;%\n  summarise(Total_Pop = sum(Population)) \n\n# A tibble: 42 × 2\n   Planning_Area Total_Pop\n   &lt;chr&gt;             &lt;dbl&gt;\n 1 Ang Mo Kio       160450\n 2 Bedok            277660\n 3 Bishan            88210\n 4 Bukit Batok      168390\n 5 Bukit Merah      149390\n 6 Bukit Panjang    138730\n 7 Bukit Timah       84250\n 8 Changi             1830\n 9 Choa Chu Kang    190640\n10 Clementi         102960\n# ℹ 32 more rows\n\n\nAfter removal, 42 planning areas remain in the dataset.\n\nFinal review after cleaning\n\n\nsummary(data)\n\n Planning_Area        Sub_Zone              Age            Sex           \n Length:37243       Length:37243       Min.   : 0.00   Length:37243      \n Class :character   Class :character   1st Qu.:22.00   Class :character  \n Mode  :character   Mode  :character   Median :44.00   Mode  :character  \n                                       Mean   :44.32                     \n                                       3rd Qu.:66.00                     \n                                       Max.   :90.00                     \n   Population    \n Min.   :  10.0  \n 1st Qu.:  30.0  \n Median :  70.0  \n Mean   : 112.6  \n 3rd Qu.: 150.0  \n Max.   :1180.0  \n\ncolSums(is.na(data))\n\nPlanning_Area      Sub_Zone           Age           Sex    Population \n            0             0             0             0             0"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#feature-engineering",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#feature-engineering",
    "title": "Take-home Exercise 1 (Part 1)",
    "section": "Feature Engineering",
    "text": "Feature Engineering\n\nCreate Age Groups\n\n\ndata &lt;- data %&gt;%\n  mutate(\n    Age_Group = cut(\n      Age,\n      breaks = c(-1, 14, 64, Inf),\n      labels = c(\"0-14\", \"15-64\", \"65+\"),\n      right = TRUE\n    )\n  )\n\nThe age groups were defined as 0–14, 15–64, and 65+ to align with the standard demographic classification used in population studies and official statistics. These ranges correspond to:\n\n0–14: Young dependents (not in the workforce).\n15–64: Working-age population (economically active group).\n65+: Elderly dependents (retired).\n\n\nCreate Regions\n\nThe Region column is created to group planning areas into broader zones, enabling regional-level analysis, comparison, and visualization. I referred to this website for the regions and planning areas mapping.\n\n# Region mapping table\nregion_mapping &lt;- tibble::tibble(\n  Planning_Area = c(\n    # Central\n    \"Bishan\", \"Bukit Merah\", \"Bukit Timah\", \"Downtown Core\", \"Geylang\", \"Kallang\",\n    \"Marine Parade\", \"Museum\", \"Newton\", \"Novena\", \"Orchard\", \"Outram\",\n    \"Queenstown\", \"River Valley\", \"Rochor\", \"Singapore River\", \"Southern Islands\",\n    \"Tanglin\", \"Toa Payoh\",\n\n    # East\n    \"Bedok\", \"Changi\", \"Pasir Ris\", \"Tampines\",\n\n    # North-East\n    \"Ang Mo Kio\", \"Hougang\", \"Punggol\", \"Sengkang\", \"Serangoon\", \"Seletar\",\n\n    # North\n    \"Mandai\", \"Sembawang\", \"Sungei Kadut\", \"Woodlands\", \"Yishun\",\n\n    # West\n    \"Bukit Batok\", \"Bukit Panjang\", \"Choa Chu Kang\", \"Clementi\", \"Jurong East\",\n    \"Jurong West\", \"Tengah\", \"Western Water Catchment\"\n  ),\n  Region = c(\n    rep(\"Central\", 19),\n    rep(\"East\", 4),\n    rep(\"North-East\", 6),\n    rep(\"North\", 5),\n    rep(\"West\", 8)\n  )\n)\n\n\n# Join with data\ndata &lt;- data %&gt;%\n  left_join(region_mapping, by = \"Planning_Area\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#singapores-population-distribution-and-density",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#singapores-population-distribution-and-density",
    "title": "Take-home Exercise 1 (Part 1)",
    "section": "1. Singapore’s Population Distribution and Density",
    "text": "1. Singapore’s Population Distribution and Density\nThis full visualization provides a multi-layered view of Singapore’s population landscape, highlighting regional totals, planning area distributions, administrative granularity, and Pareto-based breakdowns of population concentration.\nThe process of creating this visualization is as below:\n\nStep 1: Creating 4 individual plots\n\n\nPlot 1: Total population by Region\n\nData is grouped by Region to get total population per region.\nThe regions are sorted in descending order of population.\nA horizontal bar chart is created using geom_col(). Labels showing total population are added with geom_text() using comma formatting. The chart is flipped horizontally using coord_flip(). Set2 color palette is used for a visually distinct fill and label color per region. The plot uses theme_clean() and custom font styling for clarity.\n\nPlot 2: Distribution of Planning Areas’ population by Region\n\nTotal population is aggregated at the Planning Area level, grouped by Region.\nA boxplot is drawn with geom_boxplot() to show the distribution of planning area populations within each region.\nOutliers are highlighted in tomato red, and median values are labeled using stat_summary() for easier interpretation.\n\nPlot 3: Count of Planning Areas and Sub-Zones by Region\n\nn_distinct() is used to count the number of unique planning areas and sub-zones in each region.\nThe data is then reshaped to a long format using pivot_longer() for grouped plotting\nA grouped bar chart is created using geom_col() to compare the count of Planning Areas & Sub-Zones among Regions.\nLabels show exact counts above each bar, with the same color as the bar type.\n\nPlot 4: Regional Population Breakdown by Planning Area\n\nFor each Region, planning areas are ranked by population.\nThen, cumulative population and cumulative percentage for the Pareto curve.\nA scale factor is computed to align the cumulative percentage line on the same y-axis.\nA Pareto chart is created with:\n\nBars representing population by planning area.\nLine and points representing cumulative % scaled to dual y-axis.\nFacets by Region for side-by-side comparisons.\nTop planning area in each non-Central region is labeled.\n\n\n\n\nStep 2: Combining all plots\nThe four plots are combined into one cohesive layout using patchwork:\n\nTop: Bar chart (Plot 1)\nMiddle: Boxplot and grouped bar chart side-by-side (Plots 2 and 3)\nBottom: Faceted Pareto chart (Plot 4)\nRelative heights = c(0.6, 0.6, 1.8) using plot_layout()are adjusted to give the Pareto chart more visual space.\n\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlibrary(scales)\n# Aggregate population by region, planning area, and sub-zone\npop &lt;- data %&gt;%\n  group_by(Region, Planning_Area, Sub_Zone) %&gt;%\n  summarise(total_pop = sum(Population), .groups=\"drop\")\n\n# (Plot 1) Total population by Region\nregion_pop &lt;- pop %&gt;%\n  group_by(Region) %&gt;%\n  summarise(total_pop = sum(total_pop), .groups=\"drop\") %&gt;%\n  arrange(desc(total_pop))\n\n# Create horizontal bar chart\np1 &lt;- ggplot(region_pop, aes(x = reorder(Region, total_pop), y = total_pop, fill = Region)) +\n  geom_col() +\n  geom_text(aes(label = comma(total_pop), color = Region), \n            hjust = -0.1, size = 4, fontface = \"bold\") +\n  coord_flip() #flip to horizontal +\n  scale_y_continuous(labels = comma, expand = expansion(mult = c(0, 0.1))) +\n  labs(title = \"Total Population by Region\", x = \"Region\", y = \"Total Population\") +\n  scale_fill_brewer(palette = \"Set2\") +\n  scale_color_brewer(palette = \"Set2\") +\n  theme_clean() +\n  theme(plot.title = element_text(face = \"bold\"),\n        axis.title = element_text(face = \"bold\"),\n        axis.text  = element_text(face = \"italic\"),\n        legend.position = \"none\")\n\n# (Plot 2) Distribution of Planning‐Area Populations by Region\nbox_data &lt;- pop %&gt;%\n  group_by(Region, Planning_Area) %&gt;%\n  summarise(total_pop = sum(total_pop), .groups = \"drop\")\n\np2 &lt;- ggplot(box_data, aes(x = Region, y = total_pop, fill = Region, color = Region)) +\n  geom_boxplot(\n    width = 0.7,      # thickness of the boxes\n    alpha = 0.3,      # transparency of the boxes\n    outlier.shape = 16, outlier.size = 1.5, outlier.colour=\"tomato\"\n  ) +\n  \n  # add label for the median \n  stat_summary(\n    fun = median,\n    geom = \"text\",\n    aes(label = comma(..y..)),\n    color   = \"black\",\n    size    = 4,\n    vjust   = -0.5 \n  ) +\n  labs(\n    title = \"Planning Area Population Distribution by Region\",\n    x     = \"Region\",\n    y     = \"Planning Area Population\"\n  ) +\n  scale_y_continuous(labels = scales::comma) + \n  theme_clean() +\n  theme(\n    plot.title  = element_text(face = \"bold\"),\n    axis.text   = element_text(face = \"italic\"),\n    legend.position = \"none\"  \n  )\n\n# (Plot 3) Count of Planning Areas & Sub-Zones by Region\nregion_counts &lt;- pop %&gt;%\n  group_by(Region) %&gt;%\n  summarise(\n    Planning_Areas = n_distinct(Planning_Area),\n    Subzones       = n_distinct(Sub_Zone),\n    .groups=\"drop\"\n  )\n\nregion_long &lt;- region_counts %&gt;%\n  pivot_longer(cols = c(Planning_Areas, Subzones),\n               names_to = \"Type\", values_to = \"Count\")\n\np3 &lt;- ggplot(region_long, aes(x = Region, y = Count, fill = Type)) +\n  geom_col(position = \"dodge\") +\n  geom_text(aes(label = Count, color = Type),\n            position = position_dodge(width = 0.9),\n            vjust = -0.3, size = 4, fontface = \"bold\") +\n  labs(title = \"Number of Planning Areas and Subzones by Region\",\n       x = \"Region\", y = \"Count\") +\n  scale_fill_brewer(palette = \"Set2\", name = \"Type\") +\n  scale_color_brewer(palette = \"Set2\") +\n  theme_clean() +\n  theme(plot.title = element_text(face=\"bold\"),\n        axis.title = element_text(face=\"bold\"),\n        axis.text  = element_text(face=\"italic\"))\n\n# (Plot 4) Regional Population Breakdown by Planning Area\npareto_data &lt;- pop %&gt;%\n  group_by(Region, Planning_Area) %&gt;%\n  summarise(total_pop = sum(total_pop), .groups = \"drop\") %&gt;%\n  group_by(Region) %&gt;%\n  arrange(desc(total_pop), .by_group = TRUE) %&gt;%\n  mutate(\n    rank = row_number(),\n    cum_pop = cumsum(total_pop),\n    cum_pct = cum_pop / sum(total_pop),\n    label = comma(total_pop)\n  ) %&gt;%\n  ungroup()\n\n# Scale factor for dual y-axis\nscale_fac &lt;- max(pareto_data$total_pop)\n\n# Pareto chart with facets\np4 &lt;- ggplot(pareto_data, aes(x = reorder(Planning_Area, -total_pop), y = total_pop)) +\n  geom_col(aes(fill = Region), show.legend = FALSE, alpha = 0.8) +\n  geom_line(aes(y = cum_pct * scale_fac, group = 1), color = \"red\", size = 1) +\n  geom_point(aes(y = cum_pct * scale_fac), color = \"red\", size = 2) +\n  geom_text(data = pareto_data %&gt;% filter(rank == 1 & Region != \"Central\"),\n            aes(label = label), vjust = -0.5, size = 3, color = \"red\", fontface=\"bold\") +\n  scale_y_continuous(\n    name = \"Population\",\n    labels = comma,\n    breaks = seq(0, 350000, by = 50000),\n    sec.axis = sec_axis(~ . / scale_fac,\n                        name = \"Cumulative %\",\n                        labels = percent_format(accuracy = 1))\n  ) +\n  facet_wrap(~ Region, scales = \"free_x\") +\n  labs(\n    title = \"Regional Population Breakdown by Planning Area\",\n    x = \"Planning Area\", y = \"Population\"\n  ) +\n  theme_clean() +\n  theme(panel.spacing  = unit(1, \"cm\"),\n        axis.title = element_text(face=\"bold\"),\n        axis.text.x = element_text(angle = 45, hjust = 1))\n\n# Combine all the charts using patchwork\np1 / (p3 | p2) / p4 +\n  plot_layout(heights = c(0.6, 0.6, 1.8) )\n\n\n\n\n\nKey insights from the visualization:\n\nUrban Structure and Planning Complexity Differ Sharply Across Regions\nAlthough the Central region has a total population similar to the North-East (~973K) and West (~942K), it has significantly more planning areas (19) and sub-zones (111), indicating greater land use diversity and functional complexity. This contrasts with the East and North-East, where fewer planning areas serve large residential populations, indicating more concentrated residential zoning. These differences affect how urban policies, zoning regulations, and public services must be tailored to fit the region’s functional layout.\nPopulation concentration varies by Region\nThe boxplot and Pareto charts together show significant intra-regional variation: East and North have the widest spread, from very low to high planning area populations, while Central, North-East and East have more uniform residential distribution. For instance, Tampines and Bedok alone comprise nearly 60% of the East’s total population.\nThis uneven load places infrastructure and service pressure on a few high-density zones, requiring targeted investments in transport, schools, and healthcare facilities. Meanwhile, lower-population areaspresent opportunities for future development or re-purposing."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#demographic-pressure-and-age-structure-across-singapores-planning-areas",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#demographic-pressure-and-age-structure-across-singapores-planning-areas",
    "title": "Take-home Exercise 1 (Part 1)",
    "section": "2. Demographic Pressure and Age Structure Across Singapore’s Planning Areas",
    "text": "2. Demographic Pressure and Age Structure Across Singapore’s Planning Areas\nThis chart aims to visualize the age composition across regions and assess the economic burden of dependents by comparing dependency ratios across planning areas in Singapore.\nThe process of creating this visualization is as below:\n\nStep 1: Data Preparation – Age Group Aggregation\n\n\nThe population data is grouped by Region, Planning Area, and Age Group.\nThe three broad age categories (children: 0-14, working-age: 15-64 elderly: 65+) are explicitly ordered to ensure correct stacking in charts.\n\n\nStep 2: Creating 2 individual plots\n\n\nPlot 1: Population Structure by Region\n\nFirst, aggregate age-group data at the regional level, then computes the proportion of each age group relative to the region’s total population.\nA stacked bar chart is then created using geom_bar(), with Region as x-axis, Proportion of each group as y-axis, and fill color based on age group.\nEach bar segment is labeled with a percentage for clarity.\nA custom theme (theme_gdocs) and Set2 color palette are used for visual appeal.\n\nPlot 2: Dependency Ratio by Planning Area\n\nThe dataset is reshaped from long to wide format to calculate dependency ratios:\n\nFormula: (children + elderly) / working-age\nA higher ratio means greater economic burden on the working population.\n\nA dot plot is created using geom_point to show the dependency ratio by planning area, sorted in descending order.\n\nPlanning areas with the highest economic burden are shown at the top.\nTitles and subtitle communicate economic implications of aging or youth-heavy populations.\n\n\n\n\nCombining 2 charts into 1 composite plot\n\n\nThe two plots are arranged side by side using the patchwork package.\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Aggregate population data by age group\n\npop_by_age &lt;- data %&gt;%\n  group_by(Region, Planning_Area, Age_Group) %&gt;%\n  summarise(Population = sum(Population), .groups = \"drop\") %&gt;%\n  mutate(Age_Group = factor(Age_Group, levels = c(\"0-14\", \"15-64\", \"65+\")))\n\n# Plot 1 - Population Structure by Region \n\n# Aggregate for regional proportion\nregion_age_prop &lt;- pop_by_age %&gt;%\n  group_by(Region, Age_Group) %&gt;%\n  summarise(Population = sum(Population), .groups = \"drop\") %&gt;%\n  group_by(Region) %&gt;%\n  mutate(Proportion = Population / sum(Population))\n\np1 &lt;- ggplot(region_age_prop, aes(\n  x = Region,\n  y = Proportion,\n  fill = Age_Group\n)) +\n  geom_bar(stat = \"identity\") +\n  geom_text(aes(label = scales::percent(Proportion, accuracy = 0.1)),\n            position = position_stack(vjust = 0.5),  # center within each segment\n            size = 6, color = \"white\") +\n  labs(\n    title = \"Population Structure by Region\",\n    x = \"Region\", y = \"Proportion\"\n  ) +\n  scale_y_continuous(labels = scales::percent) +\n  scale_fill_brewer(palette = \"Set2\") + \n  theme_gdocs() + \n  theme(plot.title = element_text(size = 18, face = \"bold\", color = \"blue\"), \n        axis.title = element_text(face = \"bold\", color = \"blue\"),\n        axis.text = element_text(size = 13, face = \"bold\"))\n\n\n# Plot 2 - Dependency Ratio by Planning Area\n\ndependency_df &lt;- pop_by_age %&gt;%\n  pivot_wider(names_from = Age_Group, values_from = Population, values_fill = 0) %&gt;%\n  filter(`15-64` &gt; 0) %&gt;%\n  mutate(dependency_ratio = (`0-14` + `65+`) / `15-64`) %&gt;%\n  arrange(desc(dependency_ratio))\n\np2 &lt;- ggplot(dependency_df, aes(x = dependency_ratio, y = reorder(Planning_Area, dependency_ratio))) +\n  geom_point(color = \"tomato\", size = 3) +\n  labs(\n    title = \"Dependency Ratio by Planning Area\",\n    subtitle = \"Higher ratio = more economic pressure\",\n    x = \"Dependency Ratio\", y = \"Planning Area\"\n  ) + \n  theme_gdocs() +\n  theme(\n    plot.title = element_text(size= 18, face = \"bold\", color = \"blue\"),\n    plot.subtitle = element_text(size = 15, face = \"italic\", color = \"red\"),\n    axis.title = element_text(face = \"bold\", color=\"blue\"), \n    axis.text = element_text(face = \"bold\")) \n\n# Combine into a composite figure \n\n(p1 | p2) +\n  plot_annotation(tag_levels = \"I\")\n\n\n\n\n\nKey insights from the visualization:\n\nAge structure varies across regions\n\n\nThe working-age group (15–64) dominates across all regions but is highest in the North (71.3%), suggesting a strong labor base.\nThe elderly population (65+) is most prominent in the Central region (21.6%), indicating an aging population and possibly a concentration of older, long-established residential areas. In contrast, the North-East and West have higher proportions of children (0–14), around 15%, suggesting younger family populations and possibly newer housing developments attractive to younger households.\n\n\nDependency Ratios Vary Greatly by Planning Area\n\n\nOutram has the highest dependency ratio (over 0.6), followed closely by Bukit Merah and Ang Mo Kio, indicating that there are more than 60 dependents for every 100 working-age individuals. This suggests greater economic pressure in these areas. In contrast, Seletar, Museum, and Downtown Core have very low dependency ratios (below 0.2), reflecting either a predominantly working-age population or limited residential presence.\nThe Central region not only has the highest share of elderly but also includes multiple planning areas like Outram, Bukit Merah, and Marine Parade with very high dependency ratios. This combination implies that Central Singapore may face greater healthcare, caregiving, and aging-related infrastructure needs than other regions."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#singapores-sex-ratio-by-planning-area",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#singapores-sex-ratio-by-planning-area",
    "title": "Take-home Exercise 1 (Part 1)",
    "section": "3. Singapore’s Sex Ratio by Planning Area",
    "text": "3. Singapore’s Sex Ratio by Planning Area\nThis chart visually compares the sex ratios across Singapore’s planning areas, helping to identify areas with gender imbalances that could have social, economic, or policy implications.\nThe process of creating this plot is as below:\n\nStep 1: Data Preparation: Calculating Sex Ratio by Planning Area\n\n\nThe dataset is grouped by Region and Planning Area.\nFor each planning area, the total population is calculated.\nThe sex ratio is computed as the number of males divided by the number of females.\n\nA ratio &gt; 1 means more males than females.\nA ratio &lt; 1 means more females than males.\n\n\n\nStep 2: Chart Construction: Lollipop Chart\n\n\nThe planning areas are reordered based on their sex ratios, so the chart visually compares areas from lowest to highest ratio.\nPoints and segments are colored by Region to show regional grouping.\nUsing geom_segment() , a horizontal line (stem) is drawn from a baseline of 1 (equal male-female ratio) to each area’s actual sex ratio. A dot (head) is placed at the actual sex ratio value to complete the lollipop visual.\nFinally, the plot is flipped horizontally using coord_flip() , placing planning areas on the y-axis for easier label readability.\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 1. Compute sex ratio per Planning Area\nlollipop_feats &lt;- data %&gt;%\n  group_by(Region, Planning_Area) %&gt;%\n  summarise(\n    total_pop  = sum(Population),\n    sex_ratio  = sum(Population[Sex == \"Males\"]) /\n                 sum(Population[Sex == \"Females\"]),\n    .groups = \"drop\"\n  )\n\nggplot(lollipop_feats, aes(\n    x = reorder(Planning_Area, sex_ratio), \n    y = sex_ratio,\n    color = Region\n  )) +\n  geom_segment(aes(xend = Planning_Area, y = 1, yend = sex_ratio),\n               size = 0.5) +\n  geom_point(size = 3) +\n  coord_flip() +\n  labs(\n    title = \"Sex Ratio by Planning Area\",\n    x     = \"Planning Area\",\n    y     = \"Males per Females\"\n  ) +\n  theme_clean()\n\n\n\n\n\nKey insights from the visualization\n\nMost planning areas have a balanced or female-skewed population. Notable areas with significantly lower male-to-female ratios include: Seletar, Orchard, and Western Water Catchment, with ratios below 0.8, indicating more than 20% fewer males than females.\nOnly a handful of planning areas have sex ratios above 1.0, indicating more males than females: Sungei Kadut has the highest ratio, significantly above 1.1, suggesting it may host male-dominated populations. Changi and Woodlands also have slightly higher male-to-female ratios, which could be influenced by military facilities, and industrial zones."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Shiny_code_draft.html",
    "href": "Take-home_Ex/Take-home_Ex03/Shiny_code_draft.html",
    "title": "Take-home Exercise 3",
    "section": "",
    "text": "pacman::p_load(tidyverse, jsonlite, dplyr, igraph,\n               tidygraph, ggraph, scales, visNetwork,\n               SmartEDA, widyr, ggforce, tidytext)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Shiny_code_draft.html#for-nodes",
    "href": "Take-home_Ex/Take-home_Ex03/Shiny_code_draft.html#for-nodes",
    "title": "Take-home Exercise 3",
    "section": "For nodes",
    "text": "For nodes\nThe code chunk below is used to convert values in id field into character data type, exclude records with ID value are NA, exclude records with similar ID values, exclude thing_collected field, and save the cleaned tibble dataframe into a new tibble datatable called mc3_nodes_cleaned.\n\nmc3_nodes_cleaned &lt;- mc3_nodes %&gt;%\n  mutate(id = as.character(id)) %&gt;%\n  filter(!is.na(id)) %&gt;%\n  distinct(id, .keep_all = TRUE) %&gt;%\n  select(-thing_collected)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Shiny_code_draft.html#for-edges",
    "href": "Take-home_Ex/Take-home_Ex03/Shiny_code_draft.html#for-edges",
    "title": "Take-home Exercise 3",
    "section": "For edges",
    "text": "For edges\nThe code chunk below is used to rename source and target fields to from_id and to_id respectively, convert values in from_id and to_id fields to character data type, exclude values in from_id and to_id which not found in the id field of mc3_nodes_cleaned, exclude records whereby from_id and/or to_id values are missing, and save the cleaned tibble dataframe and called it mc3_edges_cleaned.\n\nmc3_edges_cleaned &lt;- mc3_edges %&gt;%\n  rename(from_id = source, \n         to_id = target) %&gt;%\n  mutate(across(c(from_id, to_id), \n                as.character)) %&gt;%\n  filter(from_id %in% mc3_nodes_cleaned$id, \n         to_id %in% mc3_nodes_cleaned$id) %&gt;%\n  filter(!is.na(from_id), !is.na(to_id))\n\nNext, create mapping of character id in mc3_nodes_cleaned to row index.\n\nnode_index_lookup &lt;- mc3_nodes_cleaned %&gt;%\n  mutate(.row_id = row_number()) %&gt;%\n  select(id, .row_id)\n\nNext, join and convert from_id and to_id to integer indices. At the same time, drop rows with unmatched nodes.\n\nmc3_edges_indexed &lt;- mc3_edges_cleaned %&gt;%\n  left_join(node_index_lookup, \n            by = c(\"from_id\" = \"id\")) %&gt;%\n  rename(from = .row_id) %&gt;%\n  left_join(node_index_lookup, \n            by = c(\"to_id\" = \"id\")) %&gt;%\n  rename(to = .row_id) %&gt;%\n  select(from, to, is_inferred, type) %&gt;%\n  filter(!is.na(from) & !is.na(to))  \n\nNext, subset nodes to only those referenced by edges.\n\nused_node_indices &lt;- sort(\n  unique(c(mc3_edges_indexed$from, \n           mc3_edges_indexed$to)))\n\nmc3_nodes_final &lt;- mc3_nodes_cleaned %&gt;%\n  slice(used_node_indices) %&gt;%\n  mutate(new_index = row_number())\n\nThen, rebuild lookup from old index to new index.\n\nold_to_new_index &lt;- tibble(\n  old_index = used_node_indices,\n  new_index = seq_along(\n    used_node_indices))\n\nFinally, update edge indices to match new node table.\n\nmc3_edges_final &lt;- mc3_edges_indexed %&gt;%\n  left_join(old_to_new_index, \n            by = c(\"from\" = \"old_index\")) %&gt;%\n  rename(from_new = new_index) %&gt;%\n  left_join(old_to_new_index, \n            by = c(\"to\" = \"old_index\")) %&gt;%\n  rename(to_new = new_index) %&gt;%\n  select(from = from_new, to = to_new, \n         is_inferred, type)\n\n\nsubtype_map &lt;- c(Coordinates = \"Operational\",\n  AccessPermission = \"Operational\",\n  Operates = \"Operational\",\n  Jurisdiction = \"Operational\",\n  Reports = \"Operational\",\n  Colleagues = \"Affiliates\",\n  Friends = \"Affiliates\",\n  Unfriendly = \"Unfriendly\",\n  Suspicious = \"Suspicious\"\n)\n\nundirected_types &lt;- c(\"Friends\", \"Colleagues\")\n\n# ─────────────────────────────────────────────────────────────\n# 1. Filter nodes\n# ─────────────────────────────────────────────────────────────\nevent_ids &lt;- mc3_nodes_final %&gt;% filter(type == \"Event\") %&gt;% pull(new_index)\nlocation_ids &lt;- mc3_nodes_final %&gt;% filter(sub_type == \"Location\") %&gt;% pull(new_index)\nblocked_ids &lt;- c(event_ids, location_ids)\n\nnode_lookup &lt;- mc3_nodes_final %&gt;% \n  filter(!new_index %in% blocked_ids) %&gt;% \n  select(new_index, type, sub_type, label)\n\n# ─────────────────────────────────────────────────────────────\n# 2. Relationship nodes (no color use)\n# ─────────────────────────────────────────────────────────────\nrel_nodes &lt;- node_lookup %&gt;%\n  filter(type == \"Relationship\") %&gt;%\n  mutate(\n    rel_subtype = sub_type,\n    big_group = ifelse(rel_subtype %in% names(subtype_map),\n                       subtype_map[rel_subtype],\n                       rel_subtype),\n    rel_id = as.character(new_index)\n  ) %&gt;%\n  select(rel_id, rel_subtype, big_group)\n\nrel_ids &lt;- rel_nodes$rel_id\nnondir_rel_ids &lt;- rel_nodes %&gt;% filter(rel_subtype %in% undirected_types) %&gt;% pull(rel_id)\n\n# ─────────────────────────────────────────────────────────────\n# 3. All edges\n# ─────────────────────────────────────────────────────────────\nedges_all &lt;- mc3_edges_final %&gt;% \n  filter(from %in% node_lookup$new_index | to %in% node_lookup$new_index) %&gt;%\n  filter(!from %in% blocked_ids, !to %in% blocked_ids) %&gt;%\n  mutate(across(c(from, to), as.character))\n\nundir_edges &lt;- edges_all %&gt;% \n  filter(to %in% nondir_rel_ids) %&gt;% \n  transmute(from = to, to = from, direction = \"undirected\")\n\nedges_all &lt;- bind_rows(\n  edges_all %&gt;% mutate(direction = \"directed\"),\n  undir_edges\n)\n\n# ─────────────────────────────────────────────────────────────\n# 4. Entity–Relationship table\n# ─────────────────────────────────────────────────────────────\nentity_rel_tbl &lt;- edges_all %&gt;%\n  filter(from %in% rel_ids | to %in% rel_ids) %&gt;%\n  mutate(\n    rel_id = if_else(from %in% rel_ids, from, to),\n    entity = if_else(from %in% rel_ids, to, from)\n  ) %&gt;%\n  select(rel_id, entity)\n\n# ─────────────────────────────────────────────────────────────\n# 5. Create and de-duplicate triplets\n# ─────────────────────────────────────────────────────────────\ntriplets &lt;- entity_rel_tbl %&gt;%\n  left_join(rel_nodes, by = \"rel_id\") %&gt;%\n  group_by(rel_id) %&gt;%\n  filter(n_distinct(entity) == 2) %&gt;%\n  summarise(\n    entities = list(sort(unique(entity))),\n    rel_subtype = first(rel_subtype),\n    .groups = \"drop\"\n  ) %&gt;%\n  mutate(\n    e1 = map_chr(entities, ~.x[1]),\n    e2 = map_chr(entities, ~.x[2])\n  ) %&gt;%\n  mutate(pair_id = paste(pmin(e1, e2), pmax(e1, e2), sep = \"_\")) %&gt;%\n  arrange(pair_id, rel_subtype, rel_id) %&gt;%\n  group_by(pair_id) %&gt;%\n  slice(1) %&gt;%\n  ungroup()\n\n# ─────────────────────────────────────────────────────────────\n# 6. Rebuild edge list\n# ─────────────────────────────────────────────────────────────\nedges_all &lt;- triplets %&gt;% \n  mutate(rel_type = if_else(rel_subtype %in% undirected_types, \"undirected\", \"directed\")) %&gt;% \n  pivot_longer(c(e1, e2), names_to = \"end\", values_to = \"entity\") %&gt;% \n  transmute(\n    from = if_else(end == \"e1\", entity, rel_id),\n    to = if_else(end == \"e1\", rel_id, entity),\n    direction = rel_type\n  ) %&gt;% \n  distinct()\n\n# ─────────────────────────────────────────────────────────────\n# 7. Node table\n# ─────────────────────────────────────────────────────────────\nused_ids &lt;- unique(c(edges_all$from, edges_all$to))\n\nnodes_tbl &lt;- mc3_nodes_final %&gt;% \n  filter(new_index %in% used_ids) %&gt;% \n  mutate(\n    vis_type = case_when(\n      type == \"Relationship\" ~ \"Relationship\",\n      sub_type == \"Person\" ~ \"Person\",\n      sub_type == \"Organization\" ~ \"Organization\",\n      sub_type == \"Vessel\" ~ \"Vessel\", \n      sub_type == \"Group\" ~ \"Group\",\n      TRUE ~ \"Other\"\n    ),\n    new_index = as.character(new_index)\n  ) %&gt;%\n  left_join(rel_nodes %&gt;% select(node_id = rel_id, big_group), \n            by = c(\"new_index\" = \"node_id\")) %&gt;%\n  mutate(\n    label = if_else(vis_type == \"Relationship\", big_group, label)\n  ) %&gt;%\n  select(node_id = new_index, label, vis_type) %&gt;%\n  mutate(row_id = row_number())\n\n# ─────────────────────────────────────────────────────────────\n# 8. Format for visNetwork\n# ─────────────────────────────────────────────────────────────\nid_map &lt;- nodes_tbl %&gt;% select(node_id, row_id)\n\nvis_edges &lt;- edges_all %&gt;% \n  left_join(id_map, by = c(\"from\" = \"node_id\")) %&gt;% rename(.from = row_id) %&gt;% \n  left_join(id_map, by = c(\"to\" = \"node_id\")) %&gt;% rename(.to = row_id) %&gt;% \n  transmute(\n    from = .from, \n    to = .to,\n    arrows = ifelse(direction == \"undirected\", \"\", \"to\"),\n    color = \"grey\"\n  )\n\n# ─────────────────────────────────────────────────────────────\n# 9. Colors and shapes (only by vis_type)\n# ─────────────────────────────────────────────────────────────\npalette &lt;- c(\n  Person = \"orange\",\n  Organization = \"red\",\n  Vessel = \"forestgreen\",\n  Group = \"orchid\",\n  Relationship = \"skyblue\"\n)\n\nshapes &lt;- c(\n  Person = \"dot\",\n  Organization = \"diamond\", \n  Vessel = \"triangle\",\n  Group = \"star\",\n  Relationship = \"box\"\n)\n\n# ─────────────────────────────────────────────────────────────\n# 10. Build vis_nodes table\n# ─────────────────────────────────────────────────────────────\nvis_nodes &lt;- nodes_tbl %&gt;%\n  left_join(rel_nodes %&gt;% rename(node_id = rel_id), by = \"node_id\") %&gt;%\n  mutate(\n    group = vis_type,\n    shape = shapes[vis_type],\n    color = palette[vis_type],\n    title = if_else(vis_type == \"Relationship\", rel_subtype, NA_character_)  # Tooltip for rel\n  ) %&gt;%\n  transmute(\n    id = row_id,\n    label = if_else(group == \"Relationship\", big_group, label),\n    group = group,\n    shape = shape,\n    color = color,\n    title = title\n  )\n\n# ─────────────────────────────────────────────────────────────\n# 11. Final visNetwork graph\n# ─────────────────────────────────────────────────────────────\nvisNetwork(vis_nodes, vis_edges, width = \"100%\", height = \"800px\") %&gt;% \n  visNodes(font = list(size = 18)) %&gt;% \n  visEdges(smooth = FALSE) %&gt;% \n  visOptions(\n    highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n    nodesIdSelection = list(\n      enabled = TRUE,\n      values = vis_nodes %&gt;% filter(!group %in% c(\"Relationship\", \"Other\")) %&gt;% pull(id)\n    )\n  ) %&gt;% \n  visLegend(\n    addNodes = data.frame(\n      label = names(palette),\n      shape = shapes[names(palette)],\n      color = palette[names(palette)]\n    ),\n    useGroups = FALSE,\n    position = \"right\"\n  ) %&gt;% \n  visLayout(randomSeed = 42)\n\n\n\n\n\n\nlibrary(dplyr)\nlibrary(visNetwork)\nlibrary(RColorBrewer)\n\n# Choose clustering method\nclustering_method &lt;- \"louvain\"  # options: \"louvain\" or \"label_prop\"\n\n# Make sure IDs are character\nvis_nodes &lt;- vis_nodes %&gt;% mutate(id = as.character(id))\nvis_edges &lt;- vis_edges %&gt;% mutate(from = as.character(from), to = as.character(to))\n\n# Build igraph object\ng &lt;- graph_from_data_frame(d = vis_edges, vertices = vis_nodes, directed = TRUE)\ng_undirected &lt;- as.undirected(g, mode = \"collapse\")\n\n# Apply clustering\nclusters &lt;- switch(\n  clustering_method,\n  louvain     = cluster_louvain(g_undirected),\n  label_prop  = cluster_label_prop(g_undirected),\n  stop(\"Unsupported clustering method\")\n)\n\n# Cluster membership (ensure id matches vis_nodes$id)\nmembership_df &lt;- data.frame(\n  id = names(membership(clusters)),\n  cluster_id = membership(clusters),\n  stringsAsFactors = FALSE\n)\n\n# Join and add color/group\nn_clusters &lt;- length(unique(membership_df$cluster_id))\ncolor_palette &lt;- RColorBrewer::brewer.pal(max(3, min(8, n_clusters)), \"Set2\")\n\nvis_nodes_clustered &lt;- vis_nodes %&gt;%\n  left_join(membership_df, by = \"id\") %&gt;%\n  mutate(\n    group = paste0(\"Cluster \", cluster_id),\n    color = color_palette[as.numeric(factor(cluster_id))],\n    shape = shape  # preserve original shape if present\n  )\n\n# Draw graph\nvisNetwork(vis_nodes_clustered, vis_edges, width = \"100%\", height = \"800px\") %&gt;% \n  visNodes(font = list(size = 18)) %&gt;%\n  visEdges(smooth = FALSE) %&gt;%\n  visOptions(\n    highlightNearest = list(enabled = TRUE, degree = 2, hover = TRUE),\n    nodesIdSelection = TRUE\n  ) %&gt;%\n  visLegend(useGroups = TRUE, position = \"right\") %&gt;%\n  visLayout(randomSeed = 42)\n\n\n\n\n\n\nV(g_undirected)$name &lt;- vis_nodes$id\n\n# Compute centrality measures\ncentrality_df &lt;- data.frame(\n  id = V(g_undirected)$name,\n  degree = degree(g_undirected),\n  betweenness = betweenness(g_undirected, normalized = TRUE),\n  closeness = closeness(g_undirected, normalized = TRUE),\n  eigenvector = eigen_centrality(g_undirected)$vector,\n  stringsAsFactors = FALSE\n)\n\n# Merge with vis_nodes to get name and sub-type\nvis_nodes_clean &lt;- nodes_tbl %&gt;% \n  select(id = row_id, label, sub_type = vis_type)\n\ncentrality_df &lt;- centrality_df %&gt;% mutate(id = as.character(id))\nvis_nodes_clean &lt;- vis_nodes_clean %&gt;% mutate(id = as.character(id))\nmembership_df &lt;- membership_df %&gt;% mutate(id = as.character(id))\n\n\ncentrality_table &lt;- centrality_df %&gt;%\n  left_join(vis_nodes_clean %&gt;% select(id, Name = label, `Sub-type` = sub_type), by = \"id\") %&gt;%\n  left_join(membership_df, by = \"id\") %&gt;%\n  select(Name, `Sub-type`, Cluster = cluster_id,\n         `Degree centrality` = degree,\n         `Betweenness centrality` = betweenness,\n         `Closeness centrality` = closeness,\n         `Eigenvector centrality` = eigenvector) %&gt;%\n  mutate(across(where(is.numeric), ~ round(.x, 2)))\n\n\n# round numeric metrics\ncentrality_table &lt;- centrality_table %&gt;%\n  mutate(across(where(is.numeric), ~ round(.x, 2)))\n\nprint(centrality_table)\n\n                          Name     Sub-type Cluster Degree centrality\n1                          Sam       Person       1                 1\n2                  Nadia Conti       Person       2                 2\n3                        Elise       Person       2                 2\n4                  Liam Thorne       Person       1                 4\n5               Samantha Blake       Person       3                 4\n6                        Davis       Person       4                 7\n7                    Rodriguez       Person       5                 7\n8               Clepper Jensen       Person       5                 7\n9               Miranda Jordan       Person       5                 6\n10                  The Intern       Person       2                 1\n11                 The Lookout       Person       6                 2\n12              The Accountant       Person       2                 1\n13                  Mrs. Money       Person       2                 3\n14               The Middleman       Person       1                 2\n15                        Boss       Person       7                 6\n16                   Small Fry       Person       7                 3\n17               Glitters Team Organization       7                 3\n18        Oceanus City Council Organization       1                15\n19             Green Guardians Organization       6                12\n20          V. Miesel Shipping Organization       2                14\n21          Sailor Shifts Team Organization       3                 7\n22                     Neptune       Vessel       8                11\n23                      Marlin       Vessel       4                 3\n24                    Serenity       Vessel       8                 3\n25                        Mako       Vessel       8                15\n26               Reef Guardian       Vessel       6                10\n27                     Horizon       Vessel       6                 5\n28                    Seawatch       Vessel       6                 3\n29                    EcoVigil       Vessel       1                 7\n30                    Sentinel       Vessel       1                 9\n31                      Osprey       Vessel       8                 1\n32                    Defender       Vessel       4                 2\n33              Northern Light       Vessel       6                 1\n34                      Remora       Vessel       7                10\n35                     Knowles       Vessel       5                 4\n36             Mariner's Dream       Vessel       1                 1\n37  Recreational Fishing Boats        Group       3                 1\n38              City Officials        Group       6                 1\n39                 Operational Relationship       4                 2\n40                 Operational Relationship       7                 2\n41                 Operational Relationship       2                 2\n42                 Operational Relationship       1                 2\n43                 Operational Relationship       4                 2\n44                 Operational Relationship       3                 2\n45                 Operational Relationship       5                 2\n46                 Operational Relationship       5                 2\n47                 Operational Relationship       5                 2\n48                 Operational Relationship       5                 2\n49                 Operational Relationship       6                 2\n50                 Operational Relationship       1                 2\n51                 Operational Relationship       1                 2\n52                 Operational Relationship       7                 2\n53                 Operational Relationship       7                 2\n54                 Operational Relationship       1                 2\n55                 Operational Relationship       6                 2\n56                 Operational Relationship       3                 2\n57                 Operational Relationship       6                 2\n58                 Operational Relationship       1                 2\n59                 Operational Relationship       6                 2\n60                 Operational Relationship       1                 2\n61                 Operational Relationship       6                 2\n62                 Operational Relationship       7                 2\n63                 Operational Relationship       1                 2\n64                 Operational Relationship       8                 2\n65                 Operational Relationship       6                 2\n66                 Operational Relationship       3                 2\n67                 Operational Relationship       7                 2\n68                 Operational Relationship       8                 2\n69                 Operational Relationship       8                 2\n70                 Operational Relationship       1                 2\n71                 Operational Relationship       6                 2\n72                 Operational Relationship       1                 2\n73                 Operational Relationship       8                 2\n74                 Operational Relationship       3                 2\n75                 Operational Relationship       7                 2\n76                 Operational Relationship       4                 2\n77                 Operational Relationship       6                 2\n78                 Operational Relationship       6                 2\n79                 Operational Relationship       4                 2\n80                 Operational Relationship       1                 2\n81                 Operational Relationship       2                 2\n82                 Operational Relationship       1                 2\n83                 Operational Relationship       1                 2\n84                 Operational Relationship       1                 2\n85                 Operational Relationship       8                 2\n86                 Operational Relationship       7                 2\n87                 Operational Relationship       6                 2\n88                 Operational Relationship       2                 2\n89                 Operational Relationship       2                 2\n90                 Operational Relationship       8                 2\n91                 Operational Relationship       2                 2\n92                 Operational Relationship       6                 2\n93                 Operational Relationship       6                 2\n94                 Operational Relationship       6                 2\n95                 Operational Relationship       1                 2\n96                 Operational Relationship       7                 2\n97                 Operational Relationship       5                 2\n98                 Operational Relationship       4                 2\n99                 Operational Relationship       3                 2\n100                Operational Relationship       3                 2\n101                Operational Relationship       5                 2\n102                Operational Relationship       3                 2\n103                Operational Relationship       5                 2\n104                Operational Relationship       7                 2\n105                Operational Relationship       2                 2\n106                Operational Relationship       2                 2\n107                Operational Relationship       8                 2\n108                Operational Relationship       2                 2\n109                Operational Relationship       8                 2\n110                Operational Relationship       4                 2\n111                Operational Relationship       4                 2\n112                Operational Relationship       8                 2\n113                Operational Relationship       3                 2\n114                Operational Relationship       5                 2\n115                Operational Relationship       5                 2\n116                Operational Relationship       4                 2\n117                Operational Relationship       7                 2\n118                Operational Relationship       7                 2\n119                 Suspicious Relationship       5                 2\n120                 Suspicious Relationship       5                 2\n121                 Suspicious Relationship       5                 2\n122                 Suspicious Relationship       5                 2\n123                 Suspicious Relationship       5                 2\n124                 Suspicious Relationship       7                 2\n125                 Suspicious Relationship       1                 2\n126                 Suspicious Relationship       6                 2\n127                 Suspicious Relationship       1                 2\n128                 Suspicious Relationship       6                 2\n129                 Suspicious Relationship       2                 2\n130                 Suspicious Relationship       1                 2\n131                 Suspicious Relationship       6                 2\n132                 Suspicious Relationship       5                 2\n133                 Suspicious Relationship       5                 2\n134                 Suspicious Relationship       4                 2\n135                 Unfriendly Relationship       6                 2\n136                 Unfriendly Relationship       3                 2\n    Betweenness centrality Closeness centrality Eigenvector centrality\n1                     0.00                 0.20                   0.05\n2                     0.01                 0.18                   0.01\n3                     0.01                 0.20                   0.04\n4                     0.02                 0.24                   0.14\n5                     0.02                 0.24                   0.17\n6                     0.05                 0.24                   0.19\n7                     0.05                 0.25                   0.21\n8                     0.06                 0.25                   0.19\n9                     0.05                 0.26                   0.20\n10                    0.00                 0.15                   0.01\n11                    0.01                 0.20                   0.03\n12                    0.00                 0.19                   0.04\n13                    0.03                 0.22                   0.10\n14                    0.00                 0.20                   0.03\n15                    0.05                 0.26                   0.23\n16                    0.01                 0.21                   0.07\n17                    0.01                 0.20                   0.04\n18                    0.24                 0.33                   1.00\n19                    0.18                 0.28                   0.42\n20                    0.21                 0.30                   0.73\n21                    0.06                 0.24                   0.17\n22                    0.13                 0.31                   0.56\n23                    0.01                 0.22                   0.09\n24                    0.01                 0.23                   0.14\n25                    0.23                 0.32                   1.00\n26                    0.12                 0.28                   0.39\n27                    0.02                 0.21                   0.10\n28                    0.01                 0.20                   0.05\n29                    0.06                 0.24                   0.19\n30                    0.09                 0.28                   0.35\n31                    0.00                 0.20                   0.05\n32                    0.00                 0.20                   0.03\n33                    0.00                 0.18                   0.02\n34                    0.13                 0.29                   0.37\n35                    0.02                 0.23                   0.13\n36                    0.00                 0.20                   0.05\n37                    0.00                 0.16                   0.01\n38                    0.00                 0.18                   0.02\n39                    0.01                 0.23                   0.13\n40                    0.02                 0.27                   0.31\n41                    0.01                 0.18                   0.02\n42                    0.01                 0.23                   0.13\n43                    0.01                 0.25                   0.25\n44                    0.01                 0.23                   0.08\n45                    0.01                 0.24                   0.09\n46                    0.02                 0.25                   0.21\n47                    0.03                 0.26                   0.27\n48                    0.02                 0.25                   0.14\n49                    0.01                 0.23                   0.10\n50                    0.02                 0.26                   0.30\n51                    0.01                 0.21                   0.06\n52                    0.02                 0.23                   0.18\n53                    0.02                 0.25                   0.28\n54                    0.01                 0.25                   0.26\n55                    0.02                 0.26                   0.31\n56                    0.01                 0.21                   0.08\n57                    0.01                 0.22                   0.10\n58                    0.02                 0.24                   0.17\n59                    0.01                 0.22                   0.12\n60                    0.02                 0.23                   0.14\n61                    0.00                 0.20                   0.06\n62                    0.00                 0.18                   0.02\n63                    0.01                 0.25                   0.24\n64                    0.03                 0.28                   0.45\n65                    0.03                 0.27                   0.32\n66                    0.01                 0.25                   0.26\n67                    0.01                 0.21                   0.06\n68                    0.01                 0.24                   0.16\n69                    0.01                 0.25                   0.26\n70                    0.03                 0.27                   0.30\n71                    0.01                 0.22                   0.10\n72                    0.01                 0.23                   0.17\n73                    0.01                 0.26                   0.35\n74                    0.02                 0.24                   0.12\n75                    0.01                 0.26                   0.21\n76                    0.01                 0.22                   0.11\n77                    0.01                 0.22                   0.10\n78                    0.01                 0.22                   0.11\n79                    0.01                 0.22                   0.09\n80                    0.01                 0.23                   0.11\n81                    0.01                 0.18                   0.01\n82                    0.01                 0.22                   0.09\n83                    0.01                 0.21                   0.07\n84                    0.03                 0.26                   0.27\n85                    0.03                 0.27                   0.29\n86                    0.03                 0.26                   0.25\n87                    0.01                 0.22                   0.11\n88                    0.02                 0.20                   0.05\n89                    0.03                 0.27                   0.39\n90                    0.01                 0.24                   0.24\n91                    0.01                 0.23                   0.17\n92                    0.00                 0.18                   0.03\n93                    0.04                 0.27                   0.31\n94                    0.02                 0.24                   0.18\n95                    0.01                 0.22                   0.12\n96                    0.01                 0.23                   0.10\n97                    0.01                 0.25                   0.26\n98                    0.02                 0.25                   0.27\n99                    0.03                 0.26                   0.26\n100                   0.01                 0.21                   0.08\n101                   0.01                 0.26                   0.27\n102                   0.01                 0.20                   0.04\n103                   0.01                 0.24                   0.19\n104                   0.01                 0.24                   0.22\n105                   0.02                 0.23                   0.19\n106                   0.04                 0.28                   0.39\n107                   0.01                 0.23                   0.19\n108                   0.03                 0.25                   0.25\n109                   0.02                 0.27                   0.35\n110                   0.01                 0.22                   0.06\n111                   0.01                 0.21                   0.09\n112                   0.03                 0.26                   0.22\n113                   0.01                 0.25                   0.17\n114                   0.01                 0.24                   0.13\n115                   0.01                 0.25                   0.17\n116                   0.01                 0.25                   0.17\n117                   0.01                 0.23                   0.09\n118                   0.01                 0.24                   0.13\n119                   0.01                 0.22                   0.08\n120                   0.02                 0.24                   0.21\n121                   0.01                 0.23                   0.09\n122                   0.00                 0.21                   0.07\n123                   0.00                 0.21                   0.08\n124                   0.02                 0.26                   0.28\n125                   0.01                 0.25                   0.24\n126                   0.01                 0.21                   0.05\n127                   0.02                 0.25                   0.21\n128                   0.02                 0.26                   0.21\n129                   0.03                 0.23                   0.17\n130                   0.02                 0.24                   0.20\n131                   0.05                 0.27                   0.18\n132                   0.02                 0.26                   0.27\n133                   0.00                 0.21                   0.09\n134                   0.01                 0.21                   0.05\n135                   0.01                 0.22                   0.10\n136                   0.01                 0.25                   0.26\n\n\n\n# Build Communication tables\nvalid_entity_types &lt;- c(\"Person\", \"Organization\", \"Vessel\", \"Group\")\n\nnode_lookup &lt;- mc3_nodes_final %&gt;% select(new_index, sub_type, name)\nedges_labeled &lt;- mc3_edges_final %&gt;%\n  left_join(node_lookup, by = c(\"from\" = \"new_index\")) %&gt;%\n  rename(from_type = sub_type, from_name = name) %&gt;%\n  left_join(node_lookup, by = c(\"to\" = \"new_index\")) %&gt;%\n  rename(to_type = sub_type, to_name = name)\n\nentity_comm &lt;- edges_labeled %&gt;%\n  filter(\n    (from_type %in% valid_entity_types & to_type == \"Communication\") |\n    (to_type %in% valid_entity_types & from_type == \"Communication\")\n  ) %&gt;%\n  transmute(\n    entity = if_else(from_type %in% valid_entity_types, from_name, to_name),\n    comm   = if_else(from_type %in% valid_entity_types, to, from),\n    type   = if_else(from_type %in% valid_entity_types, from_type, to_type)\n  )\n\n# Pairwise co-occurrences\nedges_raw &lt;- entity_comm %&gt;%\n  inner_join(entity_comm, by = \"comm\", suffix = c(\"_a\", \"_b\")) %&gt;%\n  filter(entity_a != entity_b) %&gt;%\n  mutate(pair_id = map2_chr(entity_a, entity_b, ~ paste(sort(c(.x, .y)), collapse = \"||\"))) %&gt;%\n  count(pair_id, entity_a, entity_b, name = \"weight\")\n\n# Node table\nnodes_tbl &lt;- entity_comm %&gt;%\n  distinct(name = entity, sub_type = type) %&gt;%\n  mutate(row_id = row_number())\n\n# Edge table\nid_lkp &lt;- nodes_tbl %&gt;% select(name, row_id)\nedges_final &lt;- edges_raw %&gt;%\n  left_join(id_lkp, by = c(\"entity_a\" = \"name\")) %&gt;% rename(from = row_id) %&gt;%\n  left_join(id_lkp, by = c(\"entity_b\" = \"name\")) %&gt;% rename(to = row_id) %&gt;%\n  select(from, to, weight)\n\nfull_graph &lt;- tbl_graph(nodes = nodes_tbl, edges = edges_final, directed = FALSE) %&gt;%\n  mutate(\n    degree      = centrality_degree(),\n    betweenness = centrality_betweenness(),\n    closeness   = centrality_closeness(),\n    eigen       = centrality_eigen()\n  )\n\n# Visualize\nvis_nodes &lt;- full_graph %&gt;%\n  as_tibble() %&gt;%\n  mutate(\n    id = row_number(),\n    label = name,\n    value = scales::rescale(degree, to = c(5, 25)),  # Size by degree\n    group = sub_type,\n    color = case_when(\n    sub_type == \"Person\"       ~ \"orange\",\n    sub_type == \"Vessel\"       ~ \"forestgreen\",\n    sub_type == \"Organization\" ~ \"pink\",\n    sub_type == \"Group\"        ~ \"blue\",\n    TRUE ~ \"lightgray\"\n    ),\n    shape = case_when(\n    sub_type == \"Person\"       ~ \"dot\",\n    sub_type == \"Vessel\"       ~ \"triangle\",\n    sub_type == \"Organization\" ~ \"box\",\n    sub_type == \"Group\"        ~ \"star\",\n    TRUE ~ \"ellipse\"\n    ),\n    title = paste0(\n      \"&lt;b&gt;\", name, \"&lt;/b&gt;&lt;br&gt;\",\n      \"Degree: \", degree, \"&lt;br&gt;\",\n      \"Betweenness: \", round(betweenness, 2), \"&lt;br&gt;\",\n      \"Closeness: \", round(closeness, 3), \"&lt;br&gt;\",\n      \"Eigenvector: \", round(eigen, 3)\n    )\n  ) %&gt;%\n  select(id, label, group, shape, color, value, title)\n\nvis_edges &lt;- edges_final %&gt;%\n  mutate(arrows = \"none\", color = \"gray\") %&gt;%\n  distinct()\n\nvisNetwork(vis_nodes, vis_edges) %&gt;%\n  visNodes(font = list(size = 16)) %&gt;%\n  visEdges(smooth = FALSE) %&gt;%\n  visOptions(\n    highlightNearest = list(enabled = TRUE, degree = 1, hover = TRUE),\n    nodesIdSelection = TRUE\n  ) %&gt;%\n  visLayout(randomSeed = 42) %&gt;%\n  visLegend(addNodes = data.frame(\n  label = c(\"Person\", \"Vessel\", \"Organization\", \"Group\"),\n  shape = c(\"dot\", \"triangle\", \"box\", \"star\"),\n  color = c(\"orange\", \"forestgreen\", \"pink\", \"blue\")\n), useGroups = FALSE, position = \"right\")\n\n\n\n\n\n\n# Step 1: Convert to igraph\ng_igraph &lt;- igraph::graph_from_data_frame(\n  d = vis_edges %&gt;% select(from, to),\n  vertices = vis_nodes %&gt;% select(id, label),\n  directed = FALSE\n)\n\n# Step 2: Apply clustering\nclustering_method &lt;- \"label_prop\"  # options: \"louvain\", \"label_prop\"\n\nclusters &lt;- switch(\n  clustering_method,\n  louvain     = cluster_louvain(g_igraph),\n  label_prop  = cluster_label_prop(g_igraph),\n  stop(\"Unsupported clustering method\")\n)\n\nmembership_df &lt;- data.frame(\n  id = names(membership(clusters)),\n  cluster_id = membership(clusters),\n  stringsAsFactors = FALSE\n)\n\n# Step 3: Merge with vis_nodes and color by cluster\nn_clusters &lt;- length(unique(membership_df$cluster_id))\npalette &lt;- RColorBrewer::brewer.pal(max(3, min(8, n_clusters)), \"Set2\")\n\nvis_nodes_clustered &lt;- vis_nodes %&gt;%\n  mutate(id = as.character(id)) %&gt;%\n  left_join(membership_df, by = \"id\") %&gt;%\n  mutate(\n    group = paste0(\"Cluster \", cluster_id),\n    color = palette[as.numeric(factor(cluster_id))]\n  )\n\n# Optional legend\nlegend_data &lt;- vis_nodes_clustered %&gt;%\n  distinct(group, color) %&gt;%\n  mutate(label = group, shape = \"dot\") %&gt;%\n  select(label, shape, color)\n\n# Step 4: Visualize with clustering\nvisNetwork(vis_nodes_clustered, vis_edges) %&gt;%\n  visNodes(font = list(size = 16)) %&gt;%\n  visEdges(smooth = FALSE) %&gt;%\n  visOptions(\n    highlightNearest = list(enabled = TRUE, degree = 1, hover = TRUE),\n    nodesIdSelection = TRUE\n  ) %&gt;%\n  visLegend(\n    addNodes = legend_data,\n    useGroups = FALSE,\n    position = \"right\"\n  ) %&gt;%\n  visLayout(randomSeed = 42)\n\n\n\n\n\n\n# Add cluster membership from igraph back into tbl_graph\ncluster_membership &lt;- membership(clusters)\n\nsummary_tbl &lt;- full_graph %&gt;%\n  mutate(cluster = cluster_membership) %&gt;%\n  as_tibble() %&gt;%\n  select(\n    name,\n    sub_type,\n    cluster,\n    degree,\n    betweenness,\n    closeness,\n    eigen\n  ) %&gt;%\n  arrange(cluster, desc(degree)) %&gt;%\n  mutate(across(where(is.numeric), ~ round(.x, 3)))  # Round numeric values\n\nprint(summary_tbl)\n\n# A tibble: 37 × 7\n   name            sub_type     cluster    degree betweenness closeness eigen\n   &lt;chr&gt;           &lt;chr&gt;        &lt;membrshp&gt;  &lt;dbl&gt;       &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;\n 1 Reef Guardian   Vessel       1              24       56.4      0.016 0.658\n 2 Green Guardians Organization 1              18       30.8      0.016 0.521\n 3 Sentinel        Vessel       1              18       28.4      0.016 0.567\n 4 Horizon         Vessel       1              16       15.3      0.015 0.501\n 5 The Lookout     Person       1              12       73.2      0.013 0.275\n 6 EcoVigil        Vessel       1              12        5.05     0.013 0.369\n 7 Seawatch        Vessel       1              10        1.24     0.012 0.287\n 8 Defender        Vessel       1               6        2.27     0.013 0.226\n 9 Sam             Person       1               4       33        0.009 0.032\n10 Kelly           Person       1               2        0        0.007 0.004\n# ℹ 27 more rows"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "title": "Take-home Exercise 3",
    "section": "",
    "text": "This exercise presents the storyboard for my group’s Shiny application, with a focus on UI design, layout, and interactive components. Our project addresses three questions (1, 2 and 4) from Mini-Challenge 3 of the VAST Challenge 2025. Accordingly, the Shiny application is structured into three main sections:\n\nTemporal Analysis – to explore communication patterns over the period.\nNetwork Analysis – to visualize relationships and communication interactions among entities.\nBehavioral Analysis – to examine the ego network and activity timeline of a selected entity based on user input, uncovering signs of illegal involvement."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#relationship-network",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#relationship-network",
    "title": "Take-home Exercise 3",
    "section": "Relationship Network",
    "text": "Relationship Network\n\nNode-centric viewEdge-centric viewSummaryDetails\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe Relationship Network view enables users to explore how entities such as people, organizations, groups, and vessels are connected through defined relationship types (e.g., “Reports”, “Operates”). Users can filter the network by selecting sub-types of entities and control graph complexity by adjusting the communication frequency slider or toggling the option to show all connected nodes. The main visualization displays a network graph where nodes represent entities and edges represent relationships. Hovering over a node reveals its identity and connections. On the right, a clustering result graph groups related entities into clusters based on network topology, with cluster colors and node size reflecting attributes like sub-type, cluster ID, and degree. Below, a dynamic node table presents centrality metrics (degree, betweenness, closeness, eigenvector) for selected entities, while the edge table displays direct relationship ties (e.g., who reports to whom), providing both structural and contextual insights into the network.\n\n\n\n\n\n\n\n\n\n\nComponent\nType\nDescription\n\n\n\n\nEntity Type Selector\nCheckbox Input\nAllows users to select one or more entity sub-types (e.g., Person, Organization, Group, Vessel) to include in the relationship graph.\n\n\nConnection Frequency Filter\nSlider Input\nFilters out edges (relationships) based on a selected threshold of frequency.\n\n\nClustering Method Selector\nDropdown Input\nAllows users to select a specific clustering algorithm to group structurally similar entities.\n\n\nShow All Connected Nodes\nCheckbox Input\nOption to include all nodes regardless of the communication frequency.\n\n\nRelationship Network Graph\nNetwork Visualization\nInteractive visualization showing entities as nodes and relationships (e.g., Reports, Operates) as edges. Hover to reveal node details.\n\n\nClustering Result Graph\nNetwork Visualization\nColor-coded graph showing communities of entities based on their structural proximity. Node size represents centrality (e.g., degree).\n\n\nNode Table\nData Table\nDisplays centrality measures (degree, betweenness, closeness, eigenvector) for selected entities, helping identify key players in the network.\n\n\nEdge Table\nData Table\nLists direct relationships between entities, including relationship type and participating nodes for interpretability and traceability."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#communication-network",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#communication-network",
    "title": "Take-home Exercise 3",
    "section": "Communication Network",
    "text": "Communication Network\n\nNode-centric viewEdge-centric viewSummaryDetails\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe Communication Network mode focuses on actual message exchanges between entities. Similar to the relationship view, users can filter by entity sub-type, set thresholds for communication frequency, and choose a clustering method. The communication graph in the center illustrates how frequently different entities interact, with edge thickness reflecting the number of communication events. The adjacent clustering result graph shows communities formed based on communication behavior, helping to identify tightly connected groups. Entities are colored by cluster, sized by degree, and marked by sub-type for easy interpretation. At the bottom, the node table lists each entity’s centrality measures to identify influential communicators, while the edge table summarizes entity-to-entity communication frequencies, offering granular insight into who is talking to whom and how often.\n\n\n\n\n\n\n\n\n\n\nComponent\nType\nDescription\n\n\n\n\nEntity Type Selector\nCheckbox Input\nAllows users to select one or more entity sub-types (e.g., Person, Organization, Group, Vessel) to include in the relationship graph.\n\n\nConnection Frequency Filter\nSlider Input\nFilters out edges (relationships) based on a selected threshold of frequency.\n\n\nClustering Method Selector\nDropdown Input\nAllows users to select a specific clustering algorithm to group structurally similar entities.\n\n\nShow All Connected Nodes\nCheckbox Input\nOption to include all nodes regardless of the communication frequency.\n\n\nCommunication Network Graph\nNetwork Visualization\nInteractive graph where nodes represent entities and edge thickness reflects communication frequency. Hover reveals node information.\n\n\nClustering Result Graph\nNetwork Visualization\nVisual grouping of entities into clusters based on communication behavior. Nodes are sized by degree and colored by cluster.\n\n\nNode Table\nData Table\nLists centrality metrics (degree, betweenness, closeness, eigenvector) for each entity to identify key communicators.\n\n\nEdge Table\nData Table\nDisplays pairwise communication frequencies between entities, showing who interacts with whom and how often."
  }
]